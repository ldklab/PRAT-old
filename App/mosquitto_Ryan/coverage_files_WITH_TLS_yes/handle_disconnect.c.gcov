        -:    0:Source:handle_disconnect.c
        -:    0:Graph:handle_disconnect.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    0:Programs:0
        -:    1:/*
        -:    2:Copyright (c) 2009-2020 Roger Light <roger@atchoo.org>
        -:    3:
        -:    4:All rights reserved. This program and the accompanying materials
        -:    5:are made available under the terms of the Eclipse Public License v1.0
        -:    6:and Eclipse Distribution License v1.0 which accompany this distribution.
        -:    7:
        -:    8:The Eclipse Public License is available at
        -:    9:   http://www.eclipse.org/legal/epl-v10.html
        -:   10:and the Eclipse Distribution License is available at
        -:   11:  http://www.eclipse.org/org/documents/edl-v10.php.
        -:   12:
        -:   13:Contributors:
        -:   14:   Roger Light - initial implementation and documentation.
        -:   15:*/
        -:   16:
        -:   17:#include "config.h"
        -:   18:
        -:   19:#include "mosquitto_broker_internal.h"
        -:   20:#include "mqtt_protocol.h"
        -:   21:#include "packet_mosq.h"
        -:   22:#include "property_mosq.h"
        -:   23:#include "send_mosq.h"
        -:   24:#include "util_mosq.h"
        -:   25:#include "will_mosq.h"
        -:   26:
        -:   27:
    #####:   28:int handle__disconnect(struct mosquitto_db *db, struct mosquitto *context)
        -:   29:{
        -:   30:	int rc;
    #####:   31:	uint8_t reason_code = 0;
    #####:   32:	mosquitto_property *properties = NULL;
        -:   33:
    #####:   34:	if(!context){
    #####:   35:		return MOSQ_ERR_INVAL;
        -:   36:	}
        -:   37:
    #####:   38:	if(context->protocol == mosq_p_mqtt5 && context->in_packet.remaining_length > 0){
        -:   39:		/* FIXME - must handle reason code */
    #####:   40:		rc = packet__read_byte(&context->in_packet, &reason_code);
    #####:   41:		if(rc) return rc;
        -:   42:
    #####:   43:		if(context->in_packet.remaining_length > 1){
    #####:   44:			rc = property__read_all(CMD_DISCONNECT, &context->in_packet, &properties);
    #####:   45:			if(rc) return rc;
    #####:   46:		}
    #####:   47:	}
    #####:   48:	rc = property__process_disconnect(context, &properties);
    #####:   49:	if(rc){
    #####:   50:		if(rc == MOSQ_ERR_PROTOCOL){
    #####:   51:			send__disconnect(context, MQTT_RC_PROTOCOL_ERROR, NULL);
    #####:   52:		}
    #####:   53:		mosquitto_property_free_all(&properties);
    #####:   54:		return rc;
        -:   55:	}
    #####:   56:	mosquitto_property_free_all(&properties); /* FIXME - TEMPORARY UNTIL PROPERTIES PROCESSED */
        -:   57:
    #####:   58:	if(context->in_packet.pos != context->in_packet.remaining_length){
    #####:   59:		return MOSQ_ERR_PROTOCOL;
        -:   60:	}
        -:   61:	// Test - RPW.
        -:   62:	#ifdef WITH_RPW_DBG
        -:   63:	log__printf(NULL, MOSQ_LOG_NOTICE, "Received DISCONNECT from %s", context->id);
        -:   64:	#endif
        -:   65:	// End test.
    #####:   66:	if(context->protocol == mosq_p_mqtt311 || context->protocol == mosq_p_mqtt5){
    #####:   67:		if((context->in_packet.command&0x0F) != 0x00){
    #####:   68:			do_disconnect(db, context, MOSQ_ERR_PROTOCOL);
    #####:   69:			return MOSQ_ERR_PROTOCOL;
        -:   70:		}
    #####:   71:	}
    #####:   72:	if(reason_code == MQTT_RC_DISCONNECT_WITH_WILL_MSG){
    #####:   73:		mosquitto__set_state(context, mosq_cs_disconnect_with_will);
    #####:   74:	}else{
    #####:   75:		will__clear(context);
    #####:   76:		mosquitto__set_state(context, mosq_cs_disconnecting);
        -:   77:	}
    #####:   78:	do_disconnect(db, context, MOSQ_ERR_SUCCESS);
    #####:   79:	return MOSQ_ERR_SUCCESS;
    #####:   80:}
