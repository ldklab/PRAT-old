        -:    0:Source:read_handle.c
        -:    0:Graph:read_handle.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    0:Programs:0
        -:    1:/*
        -:    2:Copyright (c) 2009-2020 Roger Light <roger@atchoo.org>
        -:    3:
        -:    4:All rights reserved. This program and the accompanying materials
        -:    5:are made available under the terms of the Eclipse Public License v1.0
        -:    6:and Eclipse Distribution License v1.0 which accompany this distribution.
        -:    7: 
        -:    8:The Eclipse Public License is available at
        -:    9:   http://www.eclipse.org/legal/epl-v10.html
        -:   10:and the Eclipse Distribution License is available at
        -:   11:  http://www.eclipse.org/org/documents/edl-v10.php.
        -:   12: 
        -:   13:Contributors:
        -:   14:   Roger Light - initial implementation and documentation.
        -:   15:*/
        -:   16:
        -:   17:#include "config.h"
        -:   18:
        -:   19:#include <assert.h>
        -:   20:#include <stdio.h>
        -:   21:#include <string.h>
        -:   22:
        -:   23:#include "mosquitto_broker_internal.h"
        -:   24:#include "mqtt_protocol.h"
        -:   25:#include "memory_mosq.h"
        -:   26:#include "packet_mosq.h"
        -:   27:#include "read_handle.h"
        -:   28:#include "send_mosq.h"
        -:   29:#include "sys_tree.h"
        -:   30:#include "util_mosq.h"
        -:   31:
        -:   32:
    #####:   33:int handle__packet(struct mosquitto_db *db, struct mosquitto *context)
        -:   34:{
    #####:   35:	if(!context) return MOSQ_ERR_INVAL;
        -:   36:
    #####:   37:	int id = 1337;
        -:   38:
    #####:   39:	switch((context->in_packet.command)&0xF0){
        -:   40:		case CMD_PINGREQ:
    #####:   41:			return handle__pingreq(context);
        -:   42:		case CMD_PINGRESP:
    #####:   43:			return handle__pingresp(context);
        -:   44:		case CMD_PUBACK:
    #####:   45:			return handle__pubackcomp(db, context, "PUBACK");
        -:   46:		case CMD_PUBCOMP:
    #####:   47:			return handle__pubackcomp(db, context, "PUBCOMP");
        -:   48:		case CMD_PUBLISH:
    #####:   49:			return handle__publish(db, context);
        -:   50:		case CMD_PUBREC:
    #####:   51:			return handle__pubrec(db, context);
        -:   52:		case CMD_PUBREL:
    #####:   53:			return handle__pubrel(db, context);
        -:   54:		case CMD_CONNECT:
        -:   55:			/* This is an instrumented call (manual). */
    #####:   56:			context->nonce = id;
    #####:   57:			return handle__connect(db, context, id);
        -:   58:		case CMD_DISCONNECT:
    #####:   59:			return handle__disconnect(db, context);
        -:   60:		case CMD_SUBSCRIBE:
    #####:   61:			return handle__subscribe(db, context);
        -:   62:		case CMD_UNSUBSCRIBE:
    #####:   63:			return handle__unsubscribe(db, context);
        -:   64:#ifdef WITH_BRIDGE
        -:   65:		case CMD_CONNACK:
        -:   66:			return handle__connack(db, context);
        -:   67:		case CMD_SUBACK:
        -:   68:			return handle__suback(context);
        -:   69:		case CMD_UNSUBACK:
        -:   70:			return handle__unsuback(context);
        -:   71:#endif
        -:   72:		case CMD_AUTH:
    #####:   73:			return handle__auth(db, context);
        -:   74:		default:
        -:   75:			/* If we don't recognise the command, return an error straight away. */
    #####:   76:			return MOSQ_ERR_PROTOCOL;
        -:   77:	}
    #####:   78:}
        -:   79:
