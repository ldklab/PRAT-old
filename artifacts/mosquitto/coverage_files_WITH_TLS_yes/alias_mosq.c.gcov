        -:    0:Source:../lib/alias_mosq.c
        -:    0:Graph:alias_mosq.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    0:Programs:0
        -:    1:/*
        -:    2:Copyright (c) 2019-2020 Roger Light <roger@atchoo.org>
        -:    3:
        -:    4:All rights reserved. This program and the accompanying materials
        -:    5:are made available under the terms of the Eclipse Public License v1.0
        -:    6:and Eclipse Distribution License v1.0 which accompany this distribution.
        -:    7: 
        -:    8:The Eclipse Public License is available at
        -:    9:   http://www.eclipse.org/legal/epl-v10.html
        -:   10:and the Eclipse Distribution License is available at
        -:   11:  http://www.eclipse.org/org/documents/edl-v10.php.
        -:   12: 
        -:   13:Contributors:
        -:   14:   Roger Light - initial implementation and documentation.
        -:   15:*/
        -:   16:
        -:   17:#include "config.h"
        -:   18:
        -:   19:#include "mosquitto.h"
        -:   20:#include "alias_mosq.h"
        -:   21:#include "memory_mosq.h"
        -:   22:
    #####:   23:int alias__add(struct mosquitto *mosq, const char *topic, int alias)
        -:   24:{
        -:   25:	int i;
        -:   26:	struct mosquitto__alias *aliases;
        -:   27:
    #####:   28:	for(i=0; i<mosq->alias_count; i++){
    #####:   29:		if(mosq->aliases[i].alias == alias){
    #####:   30:			mosquitto__free(mosq->aliases[i].topic);
    #####:   31:			mosq->aliases[i].topic = mosquitto__strdup(topic);
    #####:   32:			if(mosq->aliases[i].topic){
    #####:   33:				return MOSQ_ERR_SUCCESS;
        -:   34:			}else{
        -:   35:				
    #####:   36:				return MOSQ_ERR_NOMEM;
        -:   37:			}
        -:   38:		}
    #####:   39:	}
        -:   40:
        -:   41:	/* New alias */
    #####:   42:	aliases = mosquitto__realloc(mosq->aliases, sizeof(struct mosquitto__alias)*(mosq->alias_count+1));
    #####:   43:	if(!aliases) return MOSQ_ERR_NOMEM;
        -:   44:
    #####:   45:	mosq->aliases = aliases;
    #####:   46:	mosq->aliases[mosq->alias_count].alias = alias;
    #####:   47:	mosq->aliases[mosq->alias_count].topic = mosquitto__strdup(topic);
    #####:   48:	if(!mosq->aliases[mosq->alias_count].topic){
    #####:   49:		return MOSQ_ERR_NOMEM;
        -:   50:	}
    #####:   51:	mosq->alias_count++;
        -:   52:
    #####:   53:	return MOSQ_ERR_SUCCESS;
    #####:   54:}
        -:   55:
        -:   56:
    #####:   57:int alias__find(struct mosquitto *mosq, char **topic, int alias)
        -:   58:{
        -:   59:	int i;
        -:   60:
    #####:   61:	for(i=0; i<mosq->alias_count; i++){
    #####:   62:		if(mosq->aliases[i].alias == alias){
    #####:   63:			*topic = mosquitto__strdup(mosq->aliases[i].topic);
    #####:   64:			if(*topic){
    #####:   65:				return MOSQ_ERR_SUCCESS;
        -:   66:			}else{
    #####:   67:				return MOSQ_ERR_NOMEM;
        -:   68:			}
        -:   69:		}
    #####:   70:	}
    #####:   71:	return MOSQ_ERR_INVAL;
    #####:   72:}
        -:   73:
        -:   74:
    #####:   75:void alias__free_all(struct mosquitto *mosq)
        -:   76:{
        -:   77:	int i;
        -:   78:
    #####:   79:	for(i=0; i<mosq->alias_count; i++){
    #####:   80:		mosquitto__free(mosq->aliases[i].topic);
    #####:   81:	}
    #####:   82:	mosquitto__free(mosq->aliases);
    #####:   83:	mosq->aliases = NULL;
    #####:   84:	mosq->alias_count = 0;
    #####:   85:}
