        -:    0:Source:send_suback.c
        -:    0:Graph:send_suback.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    0:Programs:0
        -:    1:/*
        -:    2:Copyright (c) 2009-2020 Roger Light <roger@atchoo.org>
        -:    3:
        -:    4:All rights reserved. This program and the accompanying materials
        -:    5:are made available under the terms of the Eclipse Public License v1.0
        -:    6:and Eclipse Distribution License v1.0 which accompany this distribution.
        -:    7:
        -:    8:The Eclipse Public License is available at
        -:    9:   http://www.eclipse.org/legal/epl-v10.html
        -:   10:and the Eclipse Distribution License is available at
        -:   11:  http://www.eclipse.org/org/documents/edl-v10.php.
        -:   12:
        -:   13:Contributors:
        -:   14:   Roger Light - initial implementation and documentation.
        -:   15:*/
        -:   16:
        -:   17:#include "config.h"
        -:   18:
        -:   19:#include "mosquitto_broker_internal.h"
        -:   20:#include "mqtt_protocol.h"
        -:   21:#include "memory_mosq.h"
        -:   22:#include "packet_mosq.h"
        -:   23:#include "property_mosq.h"
        -:   24:#include "util_mosq.h"
        -:   25:
        -:   26:
    #####:   27:int send__suback(struct mosquitto *context, uint16_t mid, uint32_t payloadlen, const void *payload)
        -:   28:{
    #####:   29:	struct mosquitto__packet *packet = NULL;
        -:   30:	int rc;
    #####:   31:	mosquitto_property *properties = NULL;
        -:   32:	int proplen, varbytes;
        -:   33:
    #####:   34:	log__printf(NULL, MOSQ_LOG_DEBUG, "Sending SUBACK to %s", context->id);
        -:   35:
    #####:   36:	packet = mosquitto__calloc(1, sizeof(struct mosquitto__packet));
    #####:   37:	if(!packet) return MOSQ_ERR_NOMEM;
        -:   38:
    #####:   39:	packet->command = CMD_SUBACK;
    #####:   40:	packet->remaining_length = 2+payloadlen;
    #####:   41:	if(context->protocol == mosq_p_mqtt5){
    #####:   42:		proplen = property__get_length_all(properties);
    #####:   43:		varbytes = packet__varint_bytes(proplen);
    #####:   44:		packet->remaining_length += proplen + varbytes;
    #####:   45:	}
    #####:   46:	rc = packet__alloc(packet);
    #####:   47:	if(rc){
    #####:   48:		mosquitto__free(packet);
    #####:   49:		return rc;
        -:   50:	}
    #####:   51:	packet__write_uint16(packet, mid);
        -:   52:
    #####:   53:	if(context->protocol == mosq_p_mqtt5){
        -:   54:		/* We don't use Reason String or User Property yet. */
    #####:   55:		property__write_all(packet, properties, true);
    #####:   56:	}
        -:   57:
    #####:   58:	if(payloadlen){
    #####:   59:		packet__write_bytes(packet, payload, payloadlen);
    #####:   60:	}
        -:   61:
    #####:   62:	return packet__queue(context, packet);
    #####:   63:}
