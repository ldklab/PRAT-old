        -:    0:Source:../lib/handle_unsuback.c
        -:    0:Graph:handle_unsuback.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    0:Programs:0
        -:    1:/*
        -:    2:Copyright (c) 2009-2020 Roger Light <roger@atchoo.org>
        -:    3:
        -:    4:All rights reserved. This program and the accompanying materials
        -:    5:are made available under the terms of the Eclipse Public License v1.0
        -:    6:and Eclipse Distribution License v1.0 which accompany this distribution.
        -:    7:
        -:    8:The Eclipse Public License is available at
        -:    9:   http://www.eclipse.org/legal/epl-v10.html
        -:   10:and the Eclipse Distribution License is available at
        -:   11:  http://www.eclipse.org/org/documents/edl-v10.php.
        -:   12:
        -:   13:Contributors:
        -:   14:   Roger Light - initial implementation and documentation.
        -:   15:*/
        -:   16:
        -:   17:#include "config.h"
        -:   18:
        -:   19:#include <assert.h>
        -:   20:#include <stdio.h>
        -:   21:#include <string.h>
        -:   22:
        -:   23:#ifdef WITH_BROKER
        -:   24:#  include "mosquitto_broker_internal.h"
        -:   25:#endif
        -:   26:
        -:   27:#include "mosquitto.h"
        -:   28:#include "logging_mosq.h"
        -:   29:#include "memory_mosq.h"
        -:   30:#include "messages_mosq.h"
        -:   31:#include "mqtt_protocol.h"
        -:   32:#include "net_mosq.h"
        -:   33:#include "packet_mosq.h"
        -:   34:#include "property_mosq.h"
        -:   35:#include "read_handle.h"
        -:   36:#include "send_mosq.h"
        -:   37:#include "util_mosq.h"
        -:   38:
        -:   39:
    #####:   40:int handle__unsuback(struct mosquitto *mosq)
        -:   41:{
        -:   42:	uint16_t mid;
        -:   43:	int rc;
    #####:   44:	mosquitto_property *properties = NULL;
        -:   45:	int state;
        -:   46:
    #####:   47:	assert(mosq);
        -:   48:
    #####:   49:	state = mosquitto__get_state(mosq);
    #####:   50:	if(state != mosq_cs_active){
    #####:   51:		return MOSQ_ERR_PROTOCOL;
        -:   52:	}
        -:   53:
        -:   54:#ifdef WITH_BROKER
    #####:   55:	log__printf(NULL, MOSQ_LOG_DEBUG, "Received UNSUBACK from %s", mosq->id);
        -:   56:#else
        -:   57:	log__printf(mosq, MOSQ_LOG_DEBUG, "Client %s received UNSUBACK", mosq->id);
        -:   58:#endif
    #####:   59:	rc = packet__read_uint16(&mosq->in_packet, &mid);
    #####:   60:	if(rc) return rc;
    #####:   61:	if(mid == 0) return MOSQ_ERR_PROTOCOL;
        -:   62:
    #####:   63:	if(mosq->protocol == mosq_p_mqtt5){
    #####:   64:		rc = property__read_all(CMD_UNSUBACK, &mosq->in_packet, &properties);
    #####:   65:		if(rc) return rc;
    #####:   66:	}
        -:   67:
        -:   68:#ifdef WITH_BROKER
        -:   69:	/* Immediately free, we don't do anything with Reason String or User Property at the moment */
    #####:   70:	mosquitto_property_free_all(&properties);
        -:   71:#else
        -:   72:	pthread_mutex_lock(&mosq->callback_mutex);
        -:   73:	if(mosq->on_unsubscribe){
        -:   74:		mosq->in_callback = true;
        -:   75:		mosq->on_unsubscribe(mosq, mosq->userdata, mid);
        -:   76:		mosq->in_callback = false;
        -:   77:	}
        -:   78:	if(mosq->on_unsubscribe_v5){
        -:   79:		mosq->in_callback = true;
        -:   80:		mosq->on_unsubscribe_v5(mosq, mosq->userdata, mid, properties);
        -:   81:		mosq->in_callback = false;
        -:   82:	}
        -:   83:	pthread_mutex_unlock(&mosq->callback_mutex);
        -:   84:	mosquitto_property_free_all(&properties);
        -:   85:#endif
        -:   86:
    #####:   87:	return MOSQ_ERR_SUCCESS;
    #####:   88:}
        -:   89:
