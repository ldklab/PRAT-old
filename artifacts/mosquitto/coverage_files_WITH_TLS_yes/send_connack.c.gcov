        -:    0:Source:send_connack.c
        -:    0:Graph:send_connack.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    0:Programs:0
        -:    1:/*
        -:    2:Copyright (c) 2009-2020 Roger Light <roger@atchoo.org>
        -:    3:
        -:    4:All rights reserved. This program and the accompanying materials
        -:    5:are made available under the terms of the Eclipse Public License v1.0
        -:    6:and Eclipse Distribution License v1.0 which accompany this distribution.
        -:    7:
        -:    8:The Eclipse Public License is available at
        -:    9:   http://www.eclipse.org/legal/epl-v10.html
        -:   10:and the Eclipse Distribution License is available at
        -:   11:  http://www.eclipse.org/org/documents/edl-v10.php.
        -:   12:
        -:   13:Contributors:
        -:   14:   Roger Light - initial implementation and documentation.
        -:   15:*/
        -:   16:
        -:   17:#include "config.h"
        -:   18:
        -:   19:#include "mosquitto_broker_internal.h"
        -:   20:#include "mqtt_protocol.h"
        -:   21:#include "memory_mosq.h"
        -:   22:#include "packet_mosq.h"
        -:   23:#include "property_mosq.h"
        -:   24:#include "util_mosq.h"
        -:   25:
    #####:   26:int send__connack(struct mosquitto_db *db, struct mosquitto *context, int ack, int reason_code, const mosquitto_property *properties)
        -:   27:{
    #####:   28:	struct mosquitto__packet *packet = NULL;
        -:   29:	int rc;
    #####:   30:	mosquitto_property *connack_props = NULL;
        -:   31:	int proplen, varbytes;
        -:   32:	uint32_t remaining_length;
        -:   33:
    #####:   34:	rc = mosquitto_property_copy_all(&connack_props, properties);
    #####:   35:	if(rc){
    #####:   36:		return rc;
        -:   37:	}
        -:   38:
    #####:   39:	if(context->id){
    #####:   40:		log__printf(NULL, MOSQ_LOG_DEBUG, "Sending CONNACK to %s (%d, %d)", context->id, ack, reason_code);
    #####:   41:	}else{
    #####:   42:		log__printf(NULL, MOSQ_LOG_DEBUG, "Sending CONNACK to %s (%d, %d)", context->address, ack, reason_code);
        -:   43:	}
        -:   44:
    #####:   45:	remaining_length = 2;
        -:   46:
    #####:   47:	if(context->protocol == mosq_p_mqtt5){
    #####:   48:		if(reason_code < 128 && db->config->retain_available == false){
    #####:   49:			rc = mosquitto_property_add_byte(&connack_props, MQTT_PROP_RETAIN_AVAILABLE, 0);
    #####:   50:			if(rc){
    #####:   51:				mosquitto_property_free_all(&connack_props);
    #####:   52:				return rc;
        -:   53:			}
    #####:   54:		}
    #####:   55:		if(db->config->max_packet_size > 0){
    #####:   56:			rc = mosquitto_property_add_int32(&connack_props, MQTT_PROP_MAXIMUM_PACKET_SIZE, db->config->max_packet_size);
    #####:   57:			if(rc){
    #####:   58:				mosquitto_property_free_all(&connack_props);
    #####:   59:				return rc;
        -:   60:			}
    #####:   61:		}
        -:   62:
    #####:   63:		proplen = property__get_length_all(connack_props);
    #####:   64:		varbytes = packet__varint_bytes(proplen);
    #####:   65:		remaining_length += proplen + varbytes;
    #####:   66:	}
        -:   67:
    #####:   68:	if(packet__check_oversize(context, remaining_length)){
    #####:   69:		mosquitto_property_free_all(&connack_props);
    #####:   70:		mosquitto__free(packet);
    #####:   71:		return MOSQ_ERR_OVERSIZE_PACKET;
        -:   72:	}
        -:   73:
    #####:   74:	packet = mosquitto__calloc(1, sizeof(struct mosquitto__packet));
    #####:   75:	if(!packet) return MOSQ_ERR_NOMEM;
        -:   76:
    #####:   77:	packet->command = CMD_CONNACK;
    #####:   78:	packet->remaining_length = remaining_length;
        -:   79:
    #####:   80:	rc = packet__alloc(packet);
    #####:   81:	if(rc){
    #####:   82:		mosquitto_property_free_all(&connack_props);
    #####:   83:		mosquitto__free(packet);
    #####:   84:		return rc;
        -:   85:	}
    #####:   86:	packet__write_byte(packet, ack);
    #####:   87:	packet__write_byte(packet, reason_code);
    #####:   88:	if(context->protocol == mosq_p_mqtt5){
    #####:   89:		property__write_all(packet, connack_props, true);
    #####:   90:	}
    #####:   91:	mosquitto_property_free_all(&connack_props);
        -:   92:
    #####:   93:	return packet__queue(context, packet);
    #####:   94:}
        -:   95:
