        -:    0:Source:../lib/handle_pubrel.c
        -:    0:Graph:handle_pubrel.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    0:Programs:0
        -:    1:/*
        -:    2:Copyright (c) 2009-2020 Roger Light <roger@atchoo.org>
        -:    3:
        -:    4:All rights reserved. This program and the accompanying materials
        -:    5:are made available under the terms of the Eclipse Public License v1.0
        -:    6:and Eclipse Distribution License v1.0 which accompany this distribution.
        -:    7:
        -:    8:The Eclipse Public License is available at
        -:    9:   http://www.eclipse.org/legal/epl-v10.html
        -:   10:and the Eclipse Distribution License is available at
        -:   11:  http://www.eclipse.org/org/documents/edl-v10.php.
        -:   12:
        -:   13:Contributors:
        -:   14:   Roger Light - initial implementation and documentation.
        -:   15:*/
        -:   16:
        -:   17:#include "config.h"
        -:   18:
        -:   19:#include <assert.h>
        -:   20:#include <stdio.h>
        -:   21:#include <string.h>
        -:   22:
        -:   23:#ifdef WITH_BROKER
        -:   24:#  include "mosquitto_broker_internal.h"
        -:   25:#endif
        -:   26:
        -:   27:#include "mosquitto.h"
        -:   28:#include "logging_mosq.h"
        -:   29:#include "memory_mosq.h"
        -:   30:#include "messages_mosq.h"
        -:   31:#include "mqtt_protocol.h"
        -:   32:#include "net_mosq.h"
        -:   33:#include "packet_mosq.h"
        -:   34:#include "read_handle.h"
        -:   35:#include "send_mosq.h"
        -:   36:#include "util_mosq.h"
        -:   37:
        -:   38:
    #####:   39:int handle__pubrel(struct mosquitto_db *db, struct mosquitto *mosq)
        -:   40:{
        -:   41:	uint8_t reason_code;
        -:   42:	uint16_t mid;
        -:   43:#ifndef WITH_BROKER
        -:   44:	struct mosquitto_message_all *message = NULL;
        -:   45:#endif
        -:   46:	int rc;
    #####:   47:	mosquitto_property *properties = NULL;
        -:   48:	int state;
        -:   49:
    #####:   50:	assert(mosq);
        -:   51:
    #####:   52:	state = mosquitto__get_state(mosq);
    #####:   53:	if(state != mosq_cs_active){
    #####:   54:		return MOSQ_ERR_PROTOCOL;
        -:   55:	}
        -:   56:
    #####:   57:	if(mosq->protocol != mosq_p_mqtt31){
    #####:   58:		if((mosq->in_packet.command&0x0F) != 0x02){
    #####:   59:			return MOSQ_ERR_PROTOCOL;
        -:   60:		}
    #####:   61:	}
    #####:   62:	rc = packet__read_uint16(&mosq->in_packet, &mid);
    #####:   63:	if(rc) return rc;
    #####:   64:	if(mid == 0) return MOSQ_ERR_PROTOCOL;
        -:   65:
    #####:   66:	if(mosq->protocol == mosq_p_mqtt5 && mosq->in_packet.remaining_length > 2){
    #####:   67:		rc = packet__read_byte(&mosq->in_packet, &reason_code);
    #####:   68:		if(rc) return rc;
        -:   69:
    #####:   70:		if(mosq->in_packet.remaining_length > 3){
    #####:   71:			rc = property__read_all(CMD_PUBREL, &mosq->in_packet, &properties);
    #####:   72:			if(rc) return rc;
    #####:   73:		}
    #####:   74:	}
        -:   75:
        -:   76:#ifdef WITH_BROKER
    #####:   77:	log__printf(NULL, MOSQ_LOG_DEBUG, "Received PUBREL from %s (Mid: %d)", mosq->id, mid);
        -:   78:
        -:   79:	/* Immediately free, we don't do anything with Reason String or User Property at the moment */
    #####:   80:	mosquitto_property_free_all(&properties);
        -:   81:
    #####:   82:	rc = db__message_release_incoming(db, mosq, mid);
    #####:   83:	if(rc == MOSQ_ERR_NOT_FOUND){
        -:   84:		/* Message not found. Still send a PUBCOMP anyway because this could be
        -:   85:		 * due to a repeated PUBREL after a client has reconnected. */
    #####:   86:	}else if(rc != MOSQ_ERR_SUCCESS){
    #####:   87:		return rc;
        -:   88:	}
        -:   89:
    #####:   90:	rc = send__pubcomp(mosq, mid);
    #####:   91:	if(rc) return rc;
        -:   92:#else
        -:   93:	UNUSED(db);
        -:   94:
        -:   95:	log__printf(mosq, MOSQ_LOG_DEBUG, "Client %s received PUBREL (Mid: %d)", mosq->id, mid);
        -:   96:
        -:   97:	rc = send__pubcomp(mosq, mid);
        -:   98:	if(rc){
        -:   99:		message__remove(mosq, mid, mosq_md_in, &message, 2);
        -:  100:		return rc;
        -:  101:	}
        -:  102:
        -:  103:	rc = message__remove(mosq, mid, mosq_md_in, &message, 2);
        -:  104:	if(rc){
        -:  105:		return rc;
        -:  106:	}else{
        -:  107:		/* Only pass the message on if we have removed it from the queue - this
        -:  108:		 * prevents multiple callbacks for the same message. */
        -:  109:		pthread_mutex_lock(&mosq->callback_mutex);
        -:  110:		if(mosq->on_message){
        -:  111:			mosq->in_callback = true;
        -:  112:			mosq->on_message(mosq, mosq->userdata, &message->msg);
        -:  113:			mosq->in_callback = false;
        -:  114:		}
        -:  115:		if(mosq->on_message_v5){
        -:  116:			mosq->in_callback = true;
        -:  117:			mosq->on_message_v5(mosq, mosq->userdata, &message->msg, message->properties);
        -:  118:			mosq->in_callback = false;
        -:  119:		}
        -:  120:		pthread_mutex_unlock(&mosq->callback_mutex);
        -:  121:		mosquitto_property_free_all(&properties);
        -:  122:		message__cleanup(&message);
        -:  123:	}
        -:  124:#endif
        -:  125:
    #####:  126:	return MOSQ_ERR_SUCCESS;
    #####:  127:}
        -:  128:
