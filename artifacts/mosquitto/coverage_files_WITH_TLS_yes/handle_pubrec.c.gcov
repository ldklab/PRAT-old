        -:    0:Source:../lib/handle_pubrec.c
        -:    0:Graph:handle_pubrec.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    0:Programs:0
        -:    1:/*
        -:    2:Copyright (c) 2009-2020 Roger Light <roger@atchoo.org>
        -:    3:
        -:    4:All rights reserved. This program and the accompanying materials
        -:    5:are made available under the terms of the Eclipse Public License v1.0
        -:    6:and Eclipse Distribution License v1.0 which accompany this distribution.
        -:    7:
        -:    8:The Eclipse Public License is available at
        -:    9:   http://www.eclipse.org/legal/epl-v10.html
        -:   10:and the Eclipse Distribution License is available at
        -:   11:  http://www.eclipse.org/org/documents/edl-v10.php.
        -:   12:
        -:   13:Contributors:
        -:   14:   Roger Light - initial implementation and documentation.
        -:   15:*/
        -:   16:
        -:   17:#include "config.h"
        -:   18:
        -:   19:#include <assert.h>
        -:   20:#include <stdio.h>
        -:   21:#include <string.h>
        -:   22:
        -:   23:#ifdef WITH_BROKER
        -:   24:#  include "mosquitto_broker_internal.h"
        -:   25:#endif
        -:   26:
        -:   27:#include "mosquitto.h"
        -:   28:#include "logging_mosq.h"
        -:   29:#include "memory_mosq.h"
        -:   30:#include "messages_mosq.h"
        -:   31:#include "mqtt_protocol.h"
        -:   32:#include "net_mosq.h"
        -:   33:#include "packet_mosq.h"
        -:   34:#include "read_handle.h"
        -:   35:#include "send_mosq.h"
        -:   36:#include "util_mosq.h"
        -:   37:
    #####:   38:int handle__pubrec(struct mosquitto_db *db, struct mosquitto *mosq)
        -:   39:{
    #####:   40:	uint8_t reason_code = 0;
        -:   41:	uint16_t mid;
        -:   42:	int rc;
    #####:   43:	mosquitto_property *properties = NULL;
        -:   44:	int state;
        -:   45:
    #####:   46:	assert(mosq);
        -:   47:
    #####:   48:	state = mosquitto__get_state(mosq);
    #####:   49:	if(state != mosq_cs_active){
    #####:   50:		return MOSQ_ERR_PROTOCOL;
        -:   51:	}
        -:   52:
    #####:   53:	rc = packet__read_uint16(&mosq->in_packet, &mid);
    #####:   54:	if(rc) return rc;
    #####:   55:	if(mid == 0) return MOSQ_ERR_PROTOCOL;
        -:   56:
    #####:   57:	if(mosq->protocol == mosq_p_mqtt5 && mosq->in_packet.remaining_length > 2){
    #####:   58:		rc = packet__read_byte(&mosq->in_packet, &reason_code);
    #####:   59:		if(rc) return rc;
        -:   60:
    #####:   61:		if(mosq->in_packet.remaining_length > 3){
    #####:   62:			rc = property__read_all(CMD_PUBREC, &mosq->in_packet, &properties);
    #####:   63:			if(rc) return rc;
        -:   64:			/* Immediately free, we don't do anything with Reason String or User Property at the moment */
    #####:   65:			mosquitto_property_free_all(&properties);
    #####:   66:		}
    #####:   67:	}
        -:   68:
        -:   69:#ifdef WITH_BROKER
    #####:   70:	log__printf(NULL, MOSQ_LOG_DEBUG, "Received PUBREC from %s (Mid: %d)", mosq->id, mid);
        -:   71:
    #####:   72:	if(reason_code < 0x80){
    #####:   73:		rc = db__message_update_outgoing(mosq, mid, mosq_ms_wait_for_pubcomp, 2);
    #####:   74:	}else{
    #####:   75:		return db__message_delete_outgoing(db, mosq, mid, mosq_ms_wait_for_pubrec, 2);
        -:   76:	}
        -:   77:#else
        -:   78:	UNUSED(db);
        -:   79:
        -:   80:	log__printf(mosq, MOSQ_LOG_DEBUG, "Client %s received PUBREC (Mid: %d)", mosq->id, mid);
        -:   81:
        -:   82:	if(reason_code < 0x80 || mosq->protocol != mosq_p_mqtt5){
        -:   83:		rc = message__out_update(mosq, mid, mosq_ms_wait_for_pubcomp, 2);
        -:   84:	}else{
        -:   85:		if(!message__delete(mosq, mid, mosq_md_out, 2)){
        -:   86:			/* Only inform the client the message has been sent once. */
        -:   87:			pthread_mutex_lock(&mosq->callback_mutex);
        -:   88:			if(mosq->on_publish_v5){
        -:   89:				mosq->in_callback = true;
        -:   90:				mosq->on_publish_v5(mosq, mosq->userdata, mid, reason_code, properties);
        -:   91:				mosq->in_callback = false;
        -:   92:			}
        -:   93:			pthread_mutex_unlock(&mosq->callback_mutex);
        -:   94:		}
        -:   95:		util__increment_send_quota(mosq);
        -:   96:		pthread_mutex_lock(&mosq->msgs_out.mutex);
        -:   97:		message__release_to_inflight(mosq, mosq_md_out);
        -:   98:		pthread_mutex_unlock(&mosq->msgs_out.mutex);
        -:   99:		return MOSQ_ERR_SUCCESS;
        -:  100:	}
        -:  101:#endif
    #####:  102:	if(rc == MOSQ_ERR_NOT_FOUND){
    #####:  103:		log__printf(mosq, MOSQ_LOG_WARNING, "Warning: Received PUBREC from %s for an unknown packet identifier %d.", mosq->id, mid);
    #####:  104:	}else if(rc != MOSQ_ERR_SUCCESS){
    #####:  105:		return rc;
        -:  106:	}
    #####:  107:	rc = send__pubrel(mosq, mid);
    #####:  108:	if(rc) return rc;
        -:  109:
    #####:  110:	return MOSQ_ERR_SUCCESS;
    #####:  111:}
        -:  112:
