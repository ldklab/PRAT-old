        -:    0:Source:plugin.c
        -:    0:Graph:plugin.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    0:Programs:0
        -:    1:/*
        -:    2:Copyright (c) 2016-2020 Roger Light <roger@atchoo.org>
        -:    3:
        -:    4:All rights reserved. This program and the accompanying materials
        -:    5:are made available under the terms of the Eclipse Public License v1.0
        -:    6:and Eclipse Distribution License v1.0 which accompany this distribution.
        -:    7: 
        -:    8:The Eclipse Public License is available at
        -:    9:   http://www.eclipse.org/legal/epl-v10.html
        -:   10:and the Eclipse Distribution License is available at
        -:   11:  http://www.eclipse.org/org/documents/edl-v10.php.
        -:   12: 
        -:   13:Contributors:
        -:   14:   Roger Light - initial implementation and documentation.
        -:   15:*/
        -:   16:
        -:   17:#include "config.h"
        -:   18:
        -:   19:#include "mosquitto_broker_internal.h"
        -:   20:#include "mosquitto_internal.h"
        -:   21:#include "mosquitto_broker.h"
        -:   22:#include "memory_mosq.h"
        -:   23:
        -:   24:#ifdef WITH_TLS
        -:   25:#  include <openssl/ssl.h>
        -:   26:#endif
        -:   27:
    #####:   28:const char *mosquitto_client_address(const struct mosquitto *client)
        -:   29:{
    #####:   30:	return client->address;
        -:   31:}
        -:   32:
        -:   33:
    #####:   34:bool mosquitto_client_clean_session(const struct mosquitto *client)
        -:   35:{
    #####:   36:	return client->clean_start;
        -:   37:}
        -:   38:
        -:   39:
    #####:   40:const char *mosquitto_client_id(const struct mosquitto *client)
        -:   41:{
    #####:   42:	return client->id;
        -:   43:}
        -:   44:
        -:   45:
    #####:   46:int mosquitto_client_keepalive(const struct mosquitto *client)
        -:   47:{
    #####:   48:	return client->keepalive;
        -:   49:}
        -:   50:
        -:   51:
    #####:   52:void *mosquitto_client_certificate(const struct mosquitto *client)
        -:   53:{
        -:   54:#ifdef WITH_TLS
        -:   55:	if(client->ssl){
        -:   56:		return SSL_get_peer_certificate(client->ssl);
        -:   57:	}else{
        -:   58:		return NULL;
        -:   59:	}
        -:   60:#else
    #####:   61:	return NULL;
        -:   62:#endif
        -:   63:}
        -:   64:
        -:   65:
    #####:   66:int mosquitto_client_protocol(const struct mosquitto *client)
        -:   67:{
        -:   68:#ifdef WITH_WEBSOCKETS
        -:   69:	if(client->wsi){
        -:   70:		return mp_websockets;
        -:   71:	}else
        -:   72:#endif
        -:   73:	{
    #####:   74:		return mp_mqtt;
        -:   75:	}
        -:   76:}
        -:   77:
        -:   78:
    #####:   79:int mosquitto_client_sub_count(const struct mosquitto *client)
        -:   80:{
    #####:   81:	return client->sub_count;
        -:   82:}
        -:   83:
        -:   84:
    #####:   85:const char *mosquitto_client_username(const struct mosquitto *context)
        -:   86:{
        -:   87:#ifdef WITH_BRIDGE
        -:   88:	if(context->bridge){
        -:   89:		return context->bridge->local_username;
        -:   90:	}else
        -:   91:#endif
        -:   92:	{
    #####:   93:		return context->username;
        -:   94:	}
        -:   95:}
        -:   96:
    #####:   97:int mosquitto_set_username(struct mosquitto *client, const char *username)
        -:   98:{
        -:   99:	char *u_dup;
        -:  100:	char *old;
        -:  101:	int rc;
        -:  102:
    #####:  103:	if(!client) return MOSQ_ERR_INVAL;
        -:  104:
    #####:  105:	if(username){
    #####:  106:		u_dup = mosquitto__strdup(username);
    #####:  107:		if(!u_dup) return MOSQ_ERR_NOMEM;
    #####:  108:	}else{
    #####:  109:		u_dup = NULL;
        -:  110:	}
        -:  111:
    #####:  112:	old = client->username;
    #####:  113:	client->username = u_dup;
        -:  114:
    #####:  115:	rc = acl__find_acls(mosquitto__get_db(), client);
    #####:  116:	if(rc){
    #####:  117:		client->username = old;
    #####:  118:		mosquitto__free(u_dup);
    #####:  119:		return rc;
        -:  120:	}else{
    #####:  121:		mosquitto__free(old);
    #####:  122:		return MOSQ_ERR_SUCCESS;
        -:  123:	}
    #####:  124:}
        -:  125:
