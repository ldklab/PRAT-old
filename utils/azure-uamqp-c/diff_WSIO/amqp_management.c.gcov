2c2
<         -:    0:Programs:101
---
>         -:    0:Programs:82
478c478
<         6:  476:static void on_message_receiver_state_changed(const void* context, MESSAGE_RECEIVER_STATE new_state, MESSAGE_RECEIVER_STATE previous_state)
---
>         4:  476:static void on_message_receiver_state_changed(const void* context, MESSAGE_RECEIVER_STATE new_state, MESSAGE_RECEIVER_STATE previous_state)
480c480
<         6:  478:    if (context == NULL)
---
>         4:  478:    if (context == NULL)
489c489
<         6:  487:        if (new_state != previous_state)
---
>         4:  487:        if (new_state != previous_state)
491,492c491,492
<         6:  489:            AMQP_MANAGEMENT_INSTANCE* amqp_management_instance = (AMQP_MANAGEMENT_INSTANCE*)context;
<         6:  490:            switch (amqp_management_instance->amqp_management_state)
---
>         4:  489:            AMQP_MANAGEMENT_INSTANCE* amqp_management_instance = (AMQP_MANAGEMENT_INSTANCE*)context;
>         4:  490:            switch (amqp_management_instance->amqp_management_state)
498c498
<         6:  496:            case AMQP_MANAGEMENT_STATE_OPENING:
---
>         4:  496:            case AMQP_MANAGEMENT_STATE_OPENING:
502c502
<         3:  500:                case MESSAGE_RECEIVER_STATE_OPENING:
---
>         2:  500:                case MESSAGE_RECEIVER_STATE_OPENING:
504c504
<         3:  502:                    break;
---
>         2:  502:                    break;
506c506
<         3:  504:                default:
---
>         2:  504:                default:
511,513c511,513
<         3:  509:                    amqp_management_instance->amqp_management_state = AMQP_MANAGEMENT_STATE_IDLE;
<         3:  510:                    amqp_management_instance->on_amqp_management_open_complete(amqp_management_instance->on_amqp_management_open_complete_context, AMQP_MANAGEMENT_OPEN_ERROR);
<         3:  511:                    break;
---
>         2:  509:                    amqp_management_instance->amqp_management_state = AMQP_MANAGEMENT_STATE_IDLE;
>         2:  510:                    amqp_management_instance->on_amqp_management_open_complete(amqp_management_instance->on_amqp_management_open_complete_context, AMQP_MANAGEMENT_OPEN_ERROR);
>         2:  511:                    break;
526c526
<         6:  524:                break;
---
>         4:  524:                break;
555c555
<         6:  553:}
---
>         4:  553:}
670c670
<         6:  668:static int internal_set_status_code_key_name(AMQP_MANAGEMENT_HANDLE amqp_management, const char* status_code_key_name)
---
>         4:  668:static int internal_set_status_code_key_name(AMQP_MANAGEMENT_HANDLE amqp_management, const char* status_code_key_name)
674c674
<         6:  672:    if (mallocAndStrcpy_s(&copied_status_code_key_name, status_code_key_name) != 0)
---
>         4:  672:    if (mallocAndStrcpy_s(&copied_status_code_key_name, status_code_key_name) != 0)
681c681
<         6:  679:        if (amqp_management->status_code_key_name != NULL)
---
>         4:  679:        if (amqp_management->status_code_key_name != NULL)
683c683
<         3:  681:            free(amqp_management->status_code_key_name);
---
>         2:  681:            free(amqp_management->status_code_key_name);
686,687c686,687
<         6:  684:        amqp_management->status_code_key_name = copied_status_code_key_name;
<         6:  685:        result = 0;
---
>         4:  684:        amqp_management->status_code_key_name = copied_status_code_key_name;
>         4:  685:        result = 0;
690c690
<         6:  688:    return result;
---
>         4:  688:    return result;
693c693
<         6:  691:static int internal_set_status_description_key_name(AMQP_MANAGEMENT_HANDLE amqp_management, const char* status_description_key_name)
---
>         4:  691:static int internal_set_status_description_key_name(AMQP_MANAGEMENT_HANDLE amqp_management, const char* status_description_key_name)
697c697
<         6:  695:    if (mallocAndStrcpy_s(&copied_status_description_key_name, status_description_key_name) != 0)
---
>         4:  695:    if (mallocAndStrcpy_s(&copied_status_description_key_name, status_description_key_name) != 0)
704c704
<         6:  702:        if (amqp_management->status_description_key_name != NULL)
---
>         4:  702:        if (amqp_management->status_description_key_name != NULL)
706c706
<         3:  704:            free(amqp_management->status_description_key_name);
---
>         2:  704:            free(amqp_management->status_description_key_name);
709,710c709,710
<         6:  707:        amqp_management->status_description_key_name = copied_status_description_key_name;
<         6:  708:        result = 0;
---
>         4:  707:        amqp_management->status_description_key_name = copied_status_description_key_name;
>         4:  708:        result = 0;
713c713
<         6:  711:    return result;
---
>         4:  711:    return result;
716c716
<         3:  714:AMQP_MANAGEMENT_HANDLE amqp_management_create(SESSION_HANDLE session, const char* management_node)
---
>         2:  714:AMQP_MANAGEMENT_HANDLE amqp_management_create(SESSION_HANDLE session, const char* management_node)
720c720
<         3:  718:    if ((session == NULL) ||
---
>         2:  718:    if ((session == NULL) ||
727c727
<         3:  725:    else if (strlen(management_node) == 0)
---
>         2:  725:    else if (strlen(management_node) == 0)
736,737c736,737
<         3:  734:        amqp_management = (AMQP_MANAGEMENT_INSTANCE*)malloc(sizeof(AMQP_MANAGEMENT_INSTANCE));
<         3:  735:        if (amqp_management == NULL)
---
>         2:  734:        amqp_management = (AMQP_MANAGEMENT_INSTANCE*)malloc(sizeof(AMQP_MANAGEMENT_INSTANCE));
>         2:  735:        if (amqp_management == NULL)
744,752c744,752
<         3:  742:            amqp_management->sender_connected = 0;
<         3:  743:            amqp_management->receiver_connected = 0;
<         3:  744:            amqp_management->on_amqp_management_open_complete = NULL;
<         3:  745:            amqp_management->on_amqp_management_open_complete_context = NULL;
<         3:  746:            amqp_management->on_amqp_management_error = NULL;
<         3:  747:            amqp_management->on_amqp_management_error_context = NULL;
<         3:  748:            amqp_management->amqp_management_state = AMQP_MANAGEMENT_STATE_IDLE;
<         3:  749:            amqp_management->status_code_key_name = NULL;
<         3:  750:            amqp_management->status_description_key_name = NULL;
---
>         2:  742:            amqp_management->sender_connected = 0;
>         2:  743:            amqp_management->receiver_connected = 0;
>         2:  744:            amqp_management->on_amqp_management_open_complete = NULL;
>         2:  745:            amqp_management->on_amqp_management_open_complete_context = NULL;
>         2:  746:            amqp_management->on_amqp_management_error = NULL;
>         2:  747:            amqp_management->on_amqp_management_error_context = NULL;
>         2:  748:            amqp_management->amqp_management_state = AMQP_MANAGEMENT_STATE_IDLE;
>         2:  749:            amqp_management->status_code_key_name = NULL;
>         2:  750:            amqp_management->status_description_key_name = NULL;
755,756c755,756
<         3:  753:            amqp_management->pending_operations = singlylinkedlist_create();
<         3:  754:            if (amqp_management->pending_operations == NULL)
---
>         2:  753:            amqp_management->pending_operations = singlylinkedlist_create();
>         2:  754:            if (amqp_management->pending_operations == NULL)
764c764
<         3:  762:                if (internal_set_status_code_key_name(amqp_management, "statusCode") != 0)
---
>         2:  762:                if (internal_set_status_code_key_name(amqp_management, "statusCode") != 0)
771c771
<         3:  769:                    if (internal_set_status_description_key_name(amqp_management, "statusDescription") != 0)
---
>         2:  769:                    if (internal_set_status_description_key_name(amqp_management, "statusDescription") != 0)
778,779c778,779
<         3:  776:                        AMQP_VALUE source = messaging_create_source(management_node);
<         3:  777:                        if (source == NULL)
---
>         2:  776:                        AMQP_VALUE source = messaging_create_source(management_node);
>         2:  777:                        if (source == NULL)
787,788c787,788
<         3:  785:                            AMQP_VALUE target = messaging_create_target(management_node);
<         3:  786:                            if (target == NULL)
---
>         2:  785:                            AMQP_VALUE target = messaging_create_target(management_node);
>         2:  786:                            if (target == NULL)
795c795
<         3:  793:                                size_t management_node_length = strlen(management_node);
---
>         2:  793:                                size_t management_node_length = strlen(management_node);
797,798c797,798
<         3:  795:                                char* sender_link_name = (char*)malloc(management_node_length + COUNT_CHARS(sender_suffix) + 1);
<         3:  796:                                if (sender_link_name == NULL)
---
>         2:  795:                                char* sender_link_name = (char*)malloc(management_node_length + COUNT_CHARS(sender_suffix) + 1);
>         2:  796:                                if (sender_link_name == NULL)
807,808c807,808
<         3:  805:                                    (void)memcpy(sender_link_name, management_node, management_node_length);
<         3:  806:                                    (void)memcpy(sender_link_name + management_node_length, sender_suffix, COUNT_CHARS(sender_suffix) + 1);
---
>         2:  805:                                    (void)memcpy(sender_link_name, management_node, management_node_length);
>         2:  806:                                    (void)memcpy(sender_link_name + management_node_length, sender_suffix, COUNT_CHARS(sender_suffix) + 1);
810,811c810,811
<         3:  808:                                    receiver_link_name = (char*)malloc(management_node_length + COUNT_CHARS(receiver_suffix) + 1);
<         3:  809:                                    if (receiver_link_name == NULL)
---
>         2:  808:                                    receiver_link_name = (char*)malloc(management_node_length + COUNT_CHARS(receiver_suffix) + 1);
>         2:  809:                                    if (receiver_link_name == NULL)
818,819c818,819
<         3:  816:                                        (void)memcpy(receiver_link_name, management_node, management_node_length);
<         3:  817:                                        (void)memcpy(receiver_link_name + management_node_length, receiver_suffix, COUNT_CHARS(receiver_suffix) + 1);
---
>         2:  816:                                        (void)memcpy(receiver_link_name, management_node, management_node_length);
>         2:  817:                                        (void)memcpy(receiver_link_name + management_node_length, receiver_suffix, COUNT_CHARS(receiver_suffix) + 1);
827,828c827,828
<         3:  825:                                        amqp_management->sender_link = link_create(session, sender_link_name, role_sender, source, target);
<         3:  826:                                        if (amqp_management->sender_link == NULL)
---
>         2:  825:                                        amqp_management->sender_link = link_create(session, sender_link_name, role_sender, source, target);
>         2:  826:                                        if (amqp_management->sender_link == NULL)
841,842c841,842
<         3:  839:                                            amqp_management->receiver_link = link_create(session, receiver_link_name, role_receiver, source, target);
<         3:  840:                                            if (amqp_management->receiver_link == NULL)
---
>         2:  839:                                            amqp_management->receiver_link = link_create(session, receiver_link_name, role_receiver, source, target);
>         2:  840:                                            if (amqp_management->receiver_link == NULL)
850,851c850,851
<         3:  848:                                                amqp_management->message_sender = messagesender_create(amqp_management->sender_link, on_message_sender_state_changed, amqp_management);
<         3:  849:                                                if (amqp_management->message_sender == NULL)
---
>         2:  848:                                                amqp_management->message_sender = messagesender_create(amqp_management->sender_link, on_message_sender_state_changed, amqp_management);
>         2:  849:                                                if (amqp_management->message_sender == NULL)
859,860c859,860
<         3:  857:                                                    amqp_management->message_receiver = messagereceiver_create(amqp_management->receiver_link, on_message_receiver_state_changed, amqp_management);
<         3:  858:                                                    if (amqp_management->message_receiver == NULL)
---
>         2:  857:                                                    amqp_management->message_receiver = messagereceiver_create(amqp_management->receiver_link, on_message_receiver_state_changed, amqp_management);
>         2:  858:                                                    if (amqp_management->message_receiver == NULL)
868,871c868,871
<         3:  866:                                                        free(receiver_link_name);
<         3:  867:                                                        free(sender_link_name);
<         3:  868:                                                        amqpvalue_destroy(target);
<         3:  869:                                                        amqpvalue_destroy(source);
---
>         2:  866:                                                        free(receiver_link_name);
>         2:  867:                                                        free(sender_link_name);
>         2:  868:                                                        amqpvalue_destroy(target);
>         2:  869:                                                        amqpvalue_destroy(source);
874c874
<         3:  872:                                                        amqp_management->next_message_id = 0;
---
>         2:  872:                                                        amqp_management->next_message_id = 0;
876c876
<         3:  874:                                                        goto all_ok;
---
>         2:  874:                                                        goto all_ok;
914,915c914,915
<         3:  912:all_ok:
<         3:  913:    return amqp_management;
---
>         2:  912:all_ok:
>         2:  913:    return amqp_management;
918c918
<         3:  916:void amqp_management_destroy(AMQP_MANAGEMENT_HANDLE amqp_management)
---
>         2:  916:void amqp_management_destroy(AMQP_MANAGEMENT_HANDLE amqp_management)
920c920
<         3:  918:    if (amqp_management == NULL)
---
>         2:  918:    if (amqp_management == NULL)
928c928
<         3:  926:        if (amqp_management->amqp_management_state != AMQP_MANAGEMENT_STATE_IDLE)
---
>         2:  926:        if (amqp_management->amqp_management_state != AMQP_MANAGEMENT_STATE_IDLE)
934c934
<         3:  932:        messagesender_destroy(amqp_management->message_sender);
---
>         2:  932:        messagesender_destroy(amqp_management->message_sender);
936c936
<         3:  934:        messagereceiver_destroy(amqp_management->message_receiver);
---
>         2:  934:        messagereceiver_destroy(amqp_management->message_receiver);
938,941c938,941
<         3:  936:        link_destroy(amqp_management->sender_link);
<         3:  937:        link_destroy(amqp_management->receiver_link);
<         3:  938:        free(amqp_management->status_code_key_name);
<         3:  939:        free(amqp_management->status_description_key_name);
---
>         2:  936:        link_destroy(amqp_management->sender_link);
>         2:  937:        link_destroy(amqp_management->receiver_link);
>         2:  938:        free(amqp_management->status_code_key_name);
>         2:  939:        free(amqp_management->status_description_key_name);
943,944c943,944
<         3:  941:        singlylinkedlist_destroy(amqp_management->pending_operations);
<         3:  942:        free(amqp_management);
---
>         2:  941:        singlylinkedlist_destroy(amqp_management->pending_operations);
>         2:  942:        free(amqp_management);
946c946
<         3:  944:}
---
>         2:  944:}
948c948
<         3:  946:int amqp_management_open_async(AMQP_MANAGEMENT_HANDLE amqp_management, ON_AMQP_MANAGEMENT_OPEN_COMPLETE on_amqp_management_open_complete, void* on_amqp_management_open_complete_context, ON_AMQP_MANAGEMENT_ERROR on_amqp_management_error, void* on_amqp_management_error_context)
---
>         2:  946:int amqp_management_open_async(AMQP_MANAGEMENT_HANDLE amqp_management, ON_AMQP_MANAGEMENT_OPEN_COMPLETE on_amqp_management_open_complete, void* on_amqp_management_open_complete_context, ON_AMQP_MANAGEMENT_ERROR on_amqp_management_error, void* on_amqp_management_error_context)
953,954c953,954
<         3:  951:    if ((amqp_management == NULL) ||
<         3:  952:        (on_amqp_management_open_complete == NULL) ||
---
>         2:  951:    if ((amqp_management == NULL) ||
>         2:  952:        (on_amqp_management_open_complete == NULL) ||
964c964
<         3:  962:    else if (amqp_management->amqp_management_state != AMQP_MANAGEMENT_STATE_IDLE)
---
>         2:  962:    else if (amqp_management->amqp_management_state != AMQP_MANAGEMENT_STATE_IDLE)
973,977c973,977
<         3:  971:        amqp_management->on_amqp_management_open_complete = on_amqp_management_open_complete;
<         3:  972:        amqp_management->on_amqp_management_open_complete_context = on_amqp_management_open_complete_context;
<         3:  973:        amqp_management->on_amqp_management_error = on_amqp_management_error;
<         3:  974:        amqp_management->on_amqp_management_error_context = on_amqp_management_error_context;
<         3:  975:        amqp_management->amqp_management_state = AMQP_MANAGEMENT_STATE_OPENING;
---
>         2:  971:        amqp_management->on_amqp_management_open_complete = on_amqp_management_open_complete;
>         2:  972:        amqp_management->on_amqp_management_open_complete_context = on_amqp_management_open_complete_context;
>         2:  973:        amqp_management->on_amqp_management_error = on_amqp_management_error;
>         2:  974:        amqp_management->on_amqp_management_error_context = on_amqp_management_error_context;
>         2:  975:        amqp_management->amqp_management_state = AMQP_MANAGEMENT_STATE_OPENING;
980c980
<         3:  978:        if (messagereceiver_open(amqp_management->message_receiver, on_message_received, amqp_management) != 0)
---
>         2:  978:        if (messagereceiver_open(amqp_management->message_receiver, on_message_received, amqp_management) != 0)
983,985c983,985
<         3:  981:            LogError("Failed opening message receiver");
<         3:  982:            amqp_management->amqp_management_state = AMQP_MANAGEMENT_STATE_IDLE;
<         3:  983:            result = MU_FAILURE;
---
>         2:  981:            LogError("Failed opening message receiver");
>         2:  982:            amqp_management->amqp_management_state = AMQP_MANAGEMENT_STATE_IDLE;
>         2:  983:            result = MU_FAILURE;
1006c1006
<         3: 1004:    return result;
---
>         2: 1004:    return result;
1009c1009
<         3: 1007:int amqp_management_close(AMQP_MANAGEMENT_HANDLE amqp_management)
---
>         2: 1007:int amqp_management_close(AMQP_MANAGEMENT_HANDLE amqp_management)
1013c1013
<         3: 1011:    if (amqp_management == NULL)
---
>         2: 1011:    if (amqp_management == NULL)
1019c1019
<         3: 1017:    else if (amqp_management->amqp_management_state == AMQP_MANAGEMENT_STATE_IDLE)
---
>         2: 1017:    else if (amqp_management->amqp_management_state == AMQP_MANAGEMENT_STATE_IDLE)
1022,1023c1022,1023
<         3: 1020:        LogError("AMQP management instance not open");
<         3: 1021:        result = MU_FAILURE;
---
>         2: 1020:        LogError("AMQP management instance not open");
>         2: 1021:        result = MU_FAILURE;
1085c1085
<         3: 1083:    return result;
---
>         2: 1083:    return result;
1263c1263
<         3: 1261:int amqp_management_set_override_status_code_key_name(AMQP_MANAGEMENT_HANDLE amqp_management, const char* override_status_code_key_name)
---
>         2: 1261:int amqp_management_set_override_status_code_key_name(AMQP_MANAGEMENT_HANDLE amqp_management, const char* override_status_code_key_name)
1268c1268
<         3: 1266:    if ((amqp_management == NULL) ||
---
>         2: 1266:    if ((amqp_management == NULL) ||
1281c1281
<         3: 1279:        if (internal_set_status_code_key_name(amqp_management, override_status_code_key_name) != 0)
---
>         2: 1279:        if (internal_set_status_code_key_name(amqp_management, override_status_code_key_name) != 0)
1290c1290
<         3: 1288:            result = 0;
---
>         2: 1288:            result = 0;
1294c1294
<         3: 1292:    return result;
---
>         2: 1292:    return result;
1297c1297
<         3: 1295:int amqp_management_set_override_status_description_key_name(AMQP_MANAGEMENT_HANDLE amqp_management, const char* override_status_description_key_name)
---
>         2: 1295:int amqp_management_set_override_status_description_key_name(AMQP_MANAGEMENT_HANDLE amqp_management, const char* override_status_description_key_name)
1302c1302
<         3: 1300:    if ((amqp_management == NULL) ||
---
>         2: 1300:    if ((amqp_management == NULL) ||
1316c1316
<         3: 1314:        if (internal_set_status_description_key_name(amqp_management, override_status_description_key_name) != 0)
---
>         2: 1314:        if (internal_set_status_description_key_name(amqp_management, override_status_description_key_name) != 0)
1324c1324
<         3: 1322:            result = 0;
---
>         2: 1322:            result = 0;
1328c1328
<         3: 1326:    return result;
---
>         2: 1326:    return result;
