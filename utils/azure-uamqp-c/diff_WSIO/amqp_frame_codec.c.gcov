2c2
<         -:    0:Programs:101
---
>         -:    0:Programs:82
143c143
<         6:  141:AMQP_FRAME_CODEC_HANDLE amqp_frame_codec_create(FRAME_CODEC_HANDLE frame_codec, AMQP_FRAME_RECEIVED_CALLBACK frame_received_callback,
---
>         5:  141:AMQP_FRAME_CODEC_HANDLE amqp_frame_codec_create(FRAME_CODEC_HANDLE frame_codec, AMQP_FRAME_RECEIVED_CALLBACK frame_received_callback,
149,151c149,151
<         6:  147:    if ((frame_codec == NULL) ||
<         6:  148:        (frame_received_callback == NULL) ||
<         6:  149:        (empty_frame_received_callback == NULL) ||
---
>         5:  147:    if ((frame_codec == NULL) ||
>         5:  148:        (frame_received_callback == NULL) ||
>         5:  149:        (empty_frame_received_callback == NULL) ||
160c160
<         6:  158:        result = (AMQP_FRAME_CODEC_HANDLE)malloc(sizeof(AMQP_FRAME_CODEC));
---
>         5:  158:        result = (AMQP_FRAME_CODEC_HANDLE)malloc(sizeof(AMQP_FRAME_CODEC));
162c162
<         6:  160:        if (result == NULL)
---
>         5:  160:        if (result == NULL)
168,173c168,173
<         6:  166:            result->frame_codec = frame_codec;
<         6:  167:            result->frame_received_callback = frame_received_callback;
<         6:  168:            result->empty_frame_received_callback = empty_frame_received_callback;
<         6:  169:            result->error_callback = amqp_frame_codec_error_callback;
<         6:  170:            result->callback_context = callback_context;
<         6:  171:            result->decode_state = AMQP_FRAME_DECODE_FRAME;
---
>         5:  166:            result->frame_codec = frame_codec;
>         5:  167:            result->frame_received_callback = frame_received_callback;
>         5:  168:            result->empty_frame_received_callback = empty_frame_received_callback;
>         5:  169:            result->error_callback = amqp_frame_codec_error_callback;
>         5:  170:            result->callback_context = callback_context;
>         5:  171:            result->decode_state = AMQP_FRAME_DECODE_FRAME;
176,177c176,177
<         6:  174:            result->decoder = amqpvalue_decoder_create(amqp_value_decoded, result);
<         6:  175:            if (result->decoder == NULL)
---
>         5:  174:            result->decoder = amqpvalue_decoder_create(amqp_value_decoded, result);
>         5:  175:            if (result->decoder == NULL)
187c187
<         6:  185:                if (frame_codec_subscribe(frame_codec, FRAME_TYPE_AMQP, frame_received, result) != 0)
---
>         5:  185:                if (frame_codec_subscribe(frame_codec, FRAME_TYPE_AMQP, frame_received, result) != 0)
199c199
<         6:  197:    return result;
---
>         5:  197:    return result;
202c202
<         6:  200:void amqp_frame_codec_destroy(AMQP_FRAME_CODEC_HANDLE amqp_frame_codec)
---
>         5:  200:void amqp_frame_codec_destroy(AMQP_FRAME_CODEC_HANDLE amqp_frame_codec)
204c204
<         6:  202:    if (amqp_frame_codec == NULL)
---
>         5:  202:    if (amqp_frame_codec == NULL)
212c212
<         6:  210:        (void)frame_codec_unsubscribe(amqp_frame_codec->frame_codec, FRAME_TYPE_AMQP);
---
>         5:  210:        (void)frame_codec_unsubscribe(amqp_frame_codec->frame_codec, FRAME_TYPE_AMQP);
215c215
<         6:  213:        amqpvalue_decoder_destroy(amqp_frame_codec->decoder);
---
>         5:  213:        amqpvalue_decoder_destroy(amqp_frame_codec->decoder);
218c218
<         6:  216:        free(amqp_frame_codec);
---
>         5:  216:        free(amqp_frame_codec);
220c220
<         6:  218:}
---
>         5:  218:}
