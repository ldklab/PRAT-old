2c2
<         -:    0:Programs:101
---
>         -:    0:Programs:82
96c96
<        18:   94:static void connection_set_state(CONNECTION_HANDLE connection, CONNECTION_STATE connection_state)
---
>        13:   94:static void connection_set_state(CONNECTION_HANDLE connection, CONNECTION_STATE connection_state)
100,101c100,101
<        18:   98:    CONNECTION_STATE previous_state = connection->connection_state;
<        18:   99:    connection->connection_state = connection_state;
---
>        13:   98:    CONNECTION_STATE previous_state = connection->connection_state;
>        13:   99:    connection->connection_state = connection_state;
104c104
<        18:  102:    if (connection->on_connection_state_changed)
---
>        13:  102:    if (connection->on_connection_state_changed)
110c110
<        30:  108:    for (i = 0; i < connection->endpoint_count; i++)
---
>        21:  108:    for (i = 0; i < connection->endpoint_count; i++)
113c113
<        12:  111:        if (connection->endpoints[i]->on_connection_state_changed != NULL)
---
>         8:  111:        if (connection->endpoints[i]->on_connection_state_changed != NULL)
115c115
<        12:  113:            connection->endpoints[i]->on_connection_state_changed(connection->endpoints[i]->callback_context, connection_state, previous_state);
---
>         8:  113:            connection->endpoints[i]->on_connection_state_changed(connection->endpoints[i]->callback_context, connection_state, previous_state);
118c118
<        18:  116:}
---
>        13:  116:}
730c730
<         3:  728:static void connection_on_io_open_complete(void* context, IO_OPEN_RESULT io_open_result)
---
>         1:  728:static void connection_on_io_open_complete(void* context, IO_OPEN_RESULT io_open_result)
732c732
<         3:  730:    CONNECTION_HANDLE connection = (CONNECTION_HANDLE)context;
---
>         1:  730:    CONNECTION_HANDLE connection = (CONNECTION_HANDLE)context;
734c734
<         3:  732:    if (io_open_result == IO_OPEN_OK)
---
>         1:  732:    if (io_open_result == IO_OPEN_OK)
774c774
<         3:  772:        connection_set_state(connection, CONNECTION_STATE_END);
---
>         1:  772:        connection_set_state(connection, CONNECTION_STATE_END);
776c776
<         3:  774:}
---
>         1:  774:}
1128c1128
<         6: 1126:CONNECTION_HANDLE connection_create(XIO_HANDLE xio, const char* hostname, const char* container_id, ON_NEW_ENDPOINT on_new_endpoint, void* callback_context)
---
>         5: 1126:CONNECTION_HANDLE connection_create(XIO_HANDLE xio, const char* hostname, const char* container_id, ON_NEW_ENDPOINT on_new_endpoint, void* callback_context)
1130c1130
<         6: 1128:    return connection_create2(xio, hostname, container_id, on_new_endpoint, callback_context, NULL, NULL, NULL, NULL);
---
>         5: 1128:    return connection_create2(xio, hostname, container_id, on_new_endpoint, callback_context, NULL, NULL, NULL, NULL);
1135c1135
<         6: 1133:CONNECTION_HANDLE connection_create2(XIO_HANDLE xio, const char* hostname, const char* container_id, ON_NEW_ENDPOINT on_new_endpoint, void* callback_context, ON_CONNECTION_STATE_CHANGED on_connection_state_changed, void* on_connection_state_changed_context, ON_IO_ERROR on_io_error, void* on_io_error_context)
---
>         5: 1133:CONNECTION_HANDLE connection_create2(XIO_HANDLE xio, const char* hostname, const char* container_id, ON_NEW_ENDPOINT on_new_endpoint, void* callback_context, ON_CONNECTION_STATE_CHANGED on_connection_state_changed, void* on_connection_state_changed_context, ON_IO_ERROR on_io_error, void* on_io_error_context)
1139c1139
<         6: 1137:    if ((xio == NULL) ||
---
>         5: 1137:    if ((xio == NULL) ||
1149c1149
<         6: 1147:        connection = (CONNECTION_HANDLE)malloc(sizeof(CONNECTION_INSTANCE));
---
>         5: 1147:        connection = (CONNECTION_HANDLE)malloc(sizeof(CONNECTION_INSTANCE));
1151c1151
<         6: 1149:        if (connection == NULL)
---
>         5: 1149:        if (connection == NULL)
1157c1157
<         6: 1155:            connection->io = xio;
---
>         5: 1155:            connection->io = xio;
1160,1161c1160,1161
<         6: 1158:            connection->frame_codec = frame_codec_create(frame_codec_error, connection);
<         6: 1159:            if (connection->frame_codec == NULL)
---
>         5: 1158:            connection->frame_codec = frame_codec_create(frame_codec_error, connection);
>         5: 1159:            if (connection->frame_codec == NULL)
1170,1171c1170,1171
<         6: 1168:                connection->amqp_frame_codec = amqp_frame_codec_create(connection->frame_codec, on_amqp_frame_received, on_empty_amqp_frame_received, amqp_frame_codec_error, connection);
<         6: 1169:                if (connection->amqp_frame_codec == NULL)
---
>         5: 1168:                connection->amqp_frame_codec = amqp_frame_codec_create(connection->frame_codec, on_amqp_frame_received, on_empty_amqp_frame_received, amqp_frame_codec_error, connection);
>         5: 1169:                if (connection->amqp_frame_codec == NULL)
1181c1181
<         6: 1179:                    if (hostname != NULL)
---
>         5: 1179:                    if (hostname != NULL)
1183,1185c1183,1185
<         6: 1181:                        size_t hostname_length = strlen(hostname);
<         6: 1182:                        connection->host_name = (char*)malloc(hostname_length + 1);
<         6: 1183:                        if (connection->host_name == NULL)
---
>         5: 1181:                        size_t hostname_length = strlen(hostname);
>         5: 1182:                        connection->host_name = (char*)malloc(hostname_length + 1);
>         5: 1183:                        if (connection->host_name == NULL)
1196c1196
<         6: 1194:                            (void)memcpy(connection->host_name, hostname, hostname_length + 1);
---
>         5: 1194:                            (void)memcpy(connection->host_name, hostname, hostname_length + 1);
1204c1204
<         6: 1202:                    if (connection != NULL)
---
>         5: 1202:                    if (connection != NULL)
1206,1208c1206,1208
<         6: 1204:                        size_t container_id_length = strlen(container_id);
<         6: 1205:                        connection->container_id = (char*)malloc(container_id_length + 1);
<         6: 1206:                        if (connection->container_id == NULL)
---
>         5: 1204:                        size_t container_id_length = strlen(container_id);
>         5: 1205:                        connection->container_id = (char*)malloc(container_id_length + 1);
>         5: 1206:                        if (connection->container_id == NULL)
1220,1221c1220,1221
<         6: 1218:                            connection->tick_counter = tickcounter_create();
<         6: 1219:                            if (connection->tick_counter == NULL)
---
>         5: 1218:                            connection->tick_counter = tickcounter_create();
>         5: 1219:                            if (connection->tick_counter == NULL)
1233c1233
<         6: 1231:                                (void)memcpy(connection->container_id, container_id, container_id_length + 1);
---
>         5: 1231:                                (void)memcpy(connection->container_id, container_id, container_id_length + 1);
1236c1236
<         6: 1234:                                connection->max_frame_size = 4294967295u;
---
>         5: 1234:                                connection->max_frame_size = 4294967295u;
1238c1238
<         6: 1236:                                connection->channel_max = 65535;
---
>         5: 1236:                                connection->channel_max = 65535;
1242,1245c1242,1245
<         6: 1240:                                connection->idle_timeout = 0;
<         6: 1241:                                connection->remote_idle_timeout = 0;
<         6: 1242:                                connection->remote_idle_timeout_send_frame_millisecond = 0;
<         6: 1243:                                connection->idle_timeout_empty_frame_send_ratio = 0.5;
---
>         5: 1240:                                connection->idle_timeout = 0;
>         5: 1241:                                connection->remote_idle_timeout = 0;
>         5: 1242:                                connection->remote_idle_timeout_send_frame_millisecond = 0;
>         5: 1243:                                connection->idle_timeout_empty_frame_send_ratio = 0.5;
1247,1251c1247,1251
<         6: 1245:                                connection->endpoint_count = 0;
<         6: 1246:                                connection->endpoints = NULL;
<         6: 1247:                                connection->header_bytes_received = 0;
<         6: 1248:                                connection->is_remote_frame_received = 0;
<         6: 1249:                                connection->properties = NULL;
---
>         5: 1245:                                connection->endpoint_count = 0;
>         5: 1246:                                connection->endpoints = NULL;
>         5: 1247:                                connection->header_bytes_received = 0;
>         5: 1248:                                connection->is_remote_frame_received = 0;
>         5: 1249:                                connection->properties = NULL;
1253,1255c1253,1255
<         6: 1251:                                connection->is_underlying_io_open = 0;
<         6: 1252:                                connection->remote_max_frame_size = 512;
<         6: 1253:                                connection->is_trace_on = 0;
---
>         5: 1251:                                connection->is_underlying_io_open = 0;
>         5: 1252:                                connection->remote_max_frame_size = 512;
>         5: 1253:                                connection->is_trace_on = 0;
1258c1258
<         6: 1256:                                connection->idle_timeout_specified = 0;
---
>         5: 1256:                                connection->idle_timeout_specified = 0;
1260,1261c1260,1261
<         6: 1258:                                connection->on_new_endpoint = on_new_endpoint;
<         6: 1259:                                connection->on_new_endpoint_callback_context = callback_context;
---
>         5: 1258:                                connection->on_new_endpoint = on_new_endpoint;
>         5: 1259:                                connection->on_new_endpoint_callback_context = callback_context;
1263,1264c1263,1264
<         6: 1261:                                connection->on_connection_close_received_event_subscription.on_connection_close_received = NULL;
<         6: 1262:                                connection->on_connection_close_received_event_subscription.context = NULL;
---
>         5: 1261:                                connection->on_connection_close_received_event_subscription.on_connection_close_received = NULL;
>         5: 1262:                                connection->on_connection_close_received_event_subscription.context = NULL;
1266,1269c1266,1269
<         6: 1264:                                connection->on_io_error = on_io_error;
<         6: 1265:                                connection->on_io_error_callback_context = on_io_error_context;
<         6: 1266:                                connection->on_connection_state_changed = on_connection_state_changed;
<         6: 1267:                                connection->on_connection_state_changed_callback_context = on_connection_state_changed_context;
---
>         5: 1264:                                connection->on_io_error = on_io_error;
>         5: 1265:                                connection->on_io_error_callback_context = on_io_error_context;
>         5: 1266:                                connection->on_connection_state_changed = on_connection_state_changed;
>         5: 1267:                                connection->on_connection_state_changed_callback_context = on_connection_state_changed_context;
1271c1271
<         6: 1269:                                if (tickcounter_get_current_ms(connection->tick_counter, &connection->last_frame_received_time) != 0)
---
>         5: 1269:                                if (tickcounter_get_current_ms(connection->tick_counter, &connection->last_frame_received_time) != 0)
1284c1284
<         6: 1282:                                    connection->last_frame_sent_time = connection->last_frame_received_time;
---
>         5: 1282:                                    connection->last_frame_sent_time = connection->last_frame_received_time;
1287c1287
<         6: 1285:                                    connection_set_state(connection, CONNECTION_STATE_START);
---
>         5: 1285:                                    connection_set_state(connection, CONNECTION_STATE_START);
1297c1297
<         6: 1295:    return connection;
---
>         5: 1295:    return connection;
1300c1300
<         6: 1298:void connection_destroy(CONNECTION_HANDLE connection)
---
>         5: 1298:void connection_destroy(CONNECTION_HANDLE connection)
1303c1303
<         6: 1301:    if (connection == NULL)
---
>         5: 1301:    if (connection == NULL)
1310c1310
<         6: 1308:        if (connection->is_underlying_io_open)
---
>         5: 1308:        if (connection->is_underlying_io_open)
1315,1318c1315,1318
<         6: 1313:        amqp_frame_codec_destroy(connection->amqp_frame_codec);
<         6: 1314:        frame_codec_destroy(connection->frame_codec);
<         6: 1315:        tickcounter_destroy(connection->tick_counter);
<         6: 1316:        if (connection->properties != NULL)
---
>         5: 1313:        amqp_frame_codec_destroy(connection->amqp_frame_codec);
>         5: 1314:        frame_codec_destroy(connection->frame_codec);
>         5: 1315:        tickcounter_destroy(connection->tick_counter);
>         5: 1316:        if (connection->properties != NULL)
1323,1324c1323,1324
<         6: 1321:        free(connection->host_name);
<         6: 1322:        free(connection->container_id);
---
>         5: 1321:        free(connection->host_name);
>         5: 1322:        free(connection->container_id);
1327c1327
<         6: 1325:        free(connection);
---
>         5: 1325:        free(connection);
1329c1329
<         6: 1327:}
---
>         5: 1327:}
1331c1331
<         9: 1329:int connection_open(CONNECTION_HANDLE connection)
---
>         7: 1329:int connection_open(CONNECTION_HANDLE connection)
1335c1335
<         9: 1333:    if (connection == NULL)
---
>         7: 1333:    if (connection == NULL)
1342c1342
<         9: 1340:        if (!connection->is_underlying_io_open)
---
>         7: 1340:        if (!connection->is_underlying_io_open)
1344c1344
<         9: 1342:            if (xio_open(connection->io, connection_on_io_open_complete, connection, connection_on_bytes_received, connection, connection_on_io_error, connection) != 0)
---
>         7: 1342:            if (xio_open(connection->io, connection_on_io_open_complete, connection, connection_on_bytes_received, connection, connection_on_io_error, connection) != 0)
1346,1348c1346,1348
<         9: 1344:                LogError("Opening the underlying IO failed");
<         9: 1345:                connection_set_state(connection, CONNECTION_STATE_END);
<         9: 1346:                result = MU_FAILURE;
---
>         7: 1344:                LogError("Opening the underlying IO failed");
>         7: 1345:                connection_set_state(connection, CONNECTION_STATE_END);
>         7: 1346:                result = MU_FAILURE;
1365c1365
<         9: 1363:    return result;
---
>         7: 1363:    return result;
1852c1852
<         6: 1850:ENDPOINT_HANDLE connection_create_endpoint(CONNECTION_HANDLE connection)
---
>         5: 1850:ENDPOINT_HANDLE connection_create_endpoint(CONNECTION_HANDLE connection)
1858c1858
<         6: 1856:    if (connection == NULL)
---
>         5: 1856:    if (connection == NULL)
1866c1866
<         6: 1864:        if (connection->endpoint_count >= connection->channel_max)
---
>         5: 1864:        if (connection->endpoint_count >= connection->channel_max)
1872c1872
<         6: 1870:            uint32_t i = 0;
---
>         5: 1870:            uint32_t i = 0;
1875c1875
<        6*: 1873:            for (i = 0; i < connection->endpoint_count; i++)
---
>        5*: 1873:            for (i = 0; i < connection->endpoint_count; i++)
1885c1885
<         6: 1883:            result = (ENDPOINT_HANDLE)malloc(sizeof(ENDPOINT_INSTANCE));
---
>         5: 1883:            result = (ENDPOINT_HANDLE)malloc(sizeof(ENDPOINT_INSTANCE));
1887c1887
<         6: 1885:            if (result == NULL)
---
>         5: 1885:            if (result == NULL)
1895,1899c1895,1899
<         6: 1893:                result->on_endpoint_frame_received = NULL;
<         6: 1894:                result->on_connection_state_changed = NULL;
<         6: 1895:                result->callback_context = NULL;
<         6: 1896:                result->outgoing_channel = (uint16_t)i;
<         6: 1897:                result->connection = connection;
---
>         5: 1893:                result->on_endpoint_frame_received = NULL;
>         5: 1894:                result->on_connection_state_changed = NULL;
>         5: 1895:                result->callback_context = NULL;
>         5: 1896:                result->outgoing_channel = (uint16_t)i;
>         5: 1897:                result->connection = connection;
1902,1903c1902,1903
<         6: 1900:                new_endpoints = (ENDPOINT_HANDLE*)realloc(connection->endpoints, sizeof(ENDPOINT_HANDLE) * (connection->endpoint_count + 1));
<         6: 1901:                if (new_endpoints == NULL)
---
>         5: 1900:                new_endpoints = (ENDPOINT_HANDLE*)realloc(connection->endpoints, sizeof(ENDPOINT_HANDLE) * (connection->endpoint_count + 1));
>         5: 1901:                if (new_endpoints == NULL)
1912c1912
<         6: 1910:                    connection->endpoints = new_endpoints;
---
>         5: 1910:                    connection->endpoints = new_endpoints;
1914c1914
<         6: 1912:                    if (i < connection->endpoint_count)
---
>         5: 1912:                    if (i < connection->endpoint_count)
1919,1920c1919,1920
<         6: 1917:                    connection->endpoints[i] = result;
<         6: 1918:                    connection->endpoint_count++;
---
>         5: 1917:                    connection->endpoints[i] = result;
>         5: 1918:                    connection->endpoint_count++;
1928c1928
<         6: 1926:    return result;
---
>         5: 1926:    return result;
1931c1931
<         9: 1929:int connection_start_endpoint(ENDPOINT_HANDLE endpoint, ON_ENDPOINT_FRAME_RECEIVED on_endpoint_frame_received, ON_CONNECTION_STATE_CHANGED on_connection_state_changed, void* context)
---
>         7: 1929:int connection_start_endpoint(ENDPOINT_HANDLE endpoint, ON_ENDPOINT_FRAME_RECEIVED on_endpoint_frame_received, ON_CONNECTION_STATE_CHANGED on_connection_state_changed, void* context)
1935,1936c1935,1936
<         9: 1933:    if ((endpoint == NULL) ||
<         9: 1934:        (on_endpoint_frame_received == NULL) ||
---
>         7: 1933:    if ((endpoint == NULL) ||
>         7: 1934:        (on_endpoint_frame_received == NULL) ||
1945,1947c1945,1947
<         9: 1943:        endpoint->on_endpoint_frame_received = on_endpoint_frame_received;
<         9: 1944:        endpoint->on_connection_state_changed = on_connection_state_changed;
<         9: 1945:        endpoint->callback_context = context;
---
>         7: 1943:        endpoint->on_endpoint_frame_received = on_endpoint_frame_received;
>         7: 1944:        endpoint->on_connection_state_changed = on_connection_state_changed;
>         7: 1945:        endpoint->callback_context = context;
1949c1949
<         9: 1947:        result = 0;
---
>         7: 1947:        result = 0;
1952c1952
<         9: 1950:    return result;
---
>         7: 1950:    return result;
1976c1976
<         6: 1974:void connection_destroy_endpoint(ENDPOINT_HANDLE endpoint)
---
>         5: 1974:void connection_destroy_endpoint(ENDPOINT_HANDLE endpoint)
1978c1978
<         6: 1976:    if (endpoint == NULL)
---
>         5: 1976:    if (endpoint == NULL)
1984c1984
<         6: 1982:        CONNECTION_HANDLE connection = (CONNECTION_HANDLE)endpoint->connection;
---
>         5: 1982:        CONNECTION_HANDLE connection = (CONNECTION_HANDLE)endpoint->connection;
1987c1987
<        6*: 1985:        for (i = 0; i < connection->endpoint_count; i++)
---
>        5*: 1985:        for (i = 0; i < connection->endpoint_count; i++)
1989c1989
<         6: 1987:            if (connection->endpoints[i] == endpoint)
---
>         5: 1987:            if (connection->endpoints[i] == endpoint)
1991c1991
<         6: 1989:                break;
---
>         5: 1989:                break;
1997c1997
<         6: 1995:        if (i < connection->endpoint_count)
---
>         5: 1995:        if (i < connection->endpoint_count)
2000c2000
<         6: 1998:            if (connection->endpoint_count == 1)
---
>         5: 1998:            if (connection->endpoint_count == 1)
2002,2004c2002,2004
<         6: 2000:                free(connection->endpoints);
<         6: 2001:                connection->endpoints = NULL;
<         6: 2002:                connection->endpoint_count = 0;
---
>         5: 2000:                free(connection->endpoints);
>         5: 2001:                connection->endpoints = NULL;
>         5: 2002:                connection->endpoint_count = 0;
2025c2025
<         6: 2023:        free(endpoint);
---
>         5: 2023:        free(endpoint);
2027c2027
<         6: 2025:}
---
>         5: 2025:}
2091c2091
<         2: 2089:void connection_set_trace(CONNECTION_HANDLE connection, bool trace_on)
---
>         1: 2089:void connection_set_trace(CONNECTION_HANDLE connection, bool trace_on)
2094c2094
<         2: 2092:    if (connection == NULL)
---
>         1: 2092:    if (connection == NULL)
2101c2101
<         2: 2099:        connection->is_trace_on = trace_on ? 1 : 0;
---
>         1: 2099:        connection->is_trace_on = trace_on ? 1 : 0;
2103c2103
<         2: 2101:}
---
>         1: 2101:}
