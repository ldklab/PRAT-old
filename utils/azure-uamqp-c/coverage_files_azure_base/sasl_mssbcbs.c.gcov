        -:    0:Source:/home/ryan/TARGETS/azure-uamqp-c/src/sasl_mssbcbs.c
        -:    0:Programs:101
        -:    1:// Copyright (c) Microsoft. All rights reserved.
        -:    2:// Licensed under the MIT license. See LICENSE file in the project root for full license information.
        -:    3:
        -:    4:#include <stdlib.h>
        -:    5:#include <string.h>
        -:    6:#include "azure_macro_utils/macro_utils.h"
        -:    7:#include "azure_c_shared_utility/gballoc.h"
        -:    8:#include "azure_c_shared_utility/xlogging.h"
        -:    9:#include "azure_uamqp_c/sasl_mssbcbs.h"
        -:   10:
        -:   11:typedef struct SASL_MSSBCBS_INSTANCE_TAG
        -:   12:{
        -:   13:    unsigned char dummy;
        -:   14:} SASL_MSSBCBS_INSTANCE;
        -:   15:
        -:   16:static const SASL_MECHANISM_INTERFACE_DESCRIPTION saslmssbcbs_interface =
        -:   17:{
        -:   18:    saslmssbcbs_create,
        -:   19:    saslmssbcbs_destroy,
        -:   20:    saslmssbcbs_get_init_bytes,
        -:   21:    saslmssbcbs_get_mechanism_name,
        -:   22:    saslmssbcbs_challenge
        -:   23:};
        -:   24:
        3:   25:CONCRETE_SASL_MECHANISM_HANDLE saslmssbcbs_create(void* config)
        -:   26:{
        -:   27:    (void)config;
        3:   28:    return malloc(sizeof(SASL_MSSBCBS_INSTANCE));
        -:   29:}
        -:   30:
        3:   31:void saslmssbcbs_destroy(CONCRETE_SASL_MECHANISM_HANDLE sasl_mechanism_concrete_handle)
        -:   32:{
        3:   33:    if (sasl_mechanism_concrete_handle != NULL)
        -:   34:    {
        3:   35:        free(sasl_mechanism_concrete_handle);
        -:   36:    }
        3:   37:}
        -:   38:
    #####:   39:int saslmssbcbs_get_init_bytes(CONCRETE_SASL_MECHANISM_HANDLE sasl_mechanism_concrete_handle, SASL_MECHANISM_BYTES* init_bytes)
        -:   40:{
        -:   41:    int result;
        -:   42:
    #####:   43:    if (sasl_mechanism_concrete_handle == NULL)
        -:   44:    {
    #####:   45:        result = MU_FAILURE;
        -:   46:    }
        -:   47:    else
        -:   48:    {
    #####:   49:        init_bytes->bytes = NULL;
    #####:   50:        init_bytes->length = 0;
        -:   51:
    #####:   52:        result = 0;
        -:   53:    }
        -:   54:
    #####:   55:    return result;
        -:   56:}
        -:   57:
    #####:   58:const char* saslmssbcbs_get_mechanism_name(CONCRETE_SASL_MECHANISM_HANDLE sasl_mechanism)
        -:   59:{
        -:   60:    const char* result;
        -:   61:
    #####:   62:    if (sasl_mechanism == NULL)
        -:   63:    {
    #####:   64:        result = NULL;
        -:   65:    }
        -:   66:    else
        -:   67:    {
    #####:   68:        result = "MSSBCBS";
        -:   69:    }
        -:   70:
    #####:   71:    return result;
        -:   72:}
        -:   73:
    #####:   74:int saslmssbcbs_challenge(CONCRETE_SASL_MECHANISM_HANDLE concrete_sasl_mechanism, const SASL_MECHANISM_BYTES* challenge_bytes, SASL_MECHANISM_BYTES* response_bytes)
        -:   75:{
        -:   76:    (void)concrete_sasl_mechanism;
        -:   77:    (void)challenge_bytes;
        -:   78:    (void)response_bytes;
    #####:   79:    return 0;
        -:   80:}
        -:   81:
        3:   82:const SASL_MECHANISM_INTERFACE_DESCRIPTION* saslmssbcbs_get_interface(void)
        -:   83:{
        3:   84:    return &saslmssbcbs_interface;
        -:   85:}
