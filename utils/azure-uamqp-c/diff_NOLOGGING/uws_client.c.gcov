2c2
<         -:    0:Programs:62
---
>         -:    0:Programs:80
119c119
<         -:  117:        LogError("Invalid arguments: hostname = %p, resource_name = %p, protocols = %p, protocol_count = %lu", hostname, resource_name, protocols, (unsigned long)protocol_count);
---
>     #####:  117:        LogError("Invalid arguments: hostname = %p, resource_name = %p, protocols = %p, protocol_count = %lu", hostname, resource_name, protocols, (unsigned long)protocol_count);
136c136
<         -:  134:            LogError("Protocol index %lu has NULL name", (unsigned long)i);
---
>     #####:  134:            LogError("Protocol index %lu has NULL name", (unsigned long)i);
146c146
<         -:  144:                LogError("Could not allocate uWS instance");
---
>     #####:  144:                LogError("Could not allocate uWS instance");
156c156
<         -:  154:                    LogError("Could not copy hostname.");
---
>     #####:  154:                    LogError("Could not copy hostname.");
166c166
<         -:  164:                        LogError("Could not copy resource.");
---
>     #####:  164:                        LogError("Could not copy resource.");
173c173
<         -:  171:                        LogError("Failed allocating MAP for request headers");
---
>     #####:  171:                        LogError("Failed allocating MAP for request headers");
186c186
<         -:  184:                            LogError("Could not allocate pending send frames list");
---
>     #####:  184:                            LogError("Could not allocate pending send frames list");
205c205
<         -:  203:                                    LogError("NULL TLSIO interface description");
---
>     #####:  203:                                    LogError("NULL TLSIO interface description");
227c227
<         -:  225:                                        LogError("Cannot create underlying TLS IO.");
---
>     #####:  225:                                        LogError("Cannot create underlying TLS IO.");
239c239
<         -:  237:                                    LogError("NULL socketio interface description");
---
>     #####:  237:                                    LogError("NULL socketio interface description");
256c256
<         -:  254:                                        LogError("Cannot create underlying socket IO.");
---
>     #####:  254:                                        LogError("Cannot create underlying socket IO.");
292c292
<         -:  290:                                        LogError("Cannot allocate memory for the protocols array.");
---
>     #####:  290:                                        LogError("Cannot allocate memory for the protocols array.");
309c309
<         -:  307:                                                LogError("Cannot allocate memory for the protocol index %u.", (unsigned int)i);
---
>     #####:  307:                                                LogError("Cannot allocate memory for the protocol index %u.", (unsigned int)i);
360c360
<         -:  358:        LogError("Invalid arguments: io_interface = %p, resource_name = %p, protocols = %p, protocol_count = %lu", io_interface, resource_name, protocols, (unsigned long)protocol_count);
---
>     #####:  358:        LogError("Invalid arguments: io_interface = %p, resource_name = %p, protocols = %p, protocol_count = %lu", io_interface, resource_name, protocols, (unsigned long)protocol_count);
377c377
<         -:  375:            LogError("Protocol index %lu has NULL name", (unsigned long)i);
---
>     #####:  375:            LogError("Protocol index %lu has NULL name", (unsigned long)i);
387c387
<         -:  385:                LogError("Could not allocate uWS instance");
---
>     #####:  385:                LogError("Could not allocate uWS instance");
397c397
<         -:  395:                    LogError("Could not copy hostname.");
---
>     #####:  395:                    LogError("Could not copy hostname.");
407c407
<         -:  405:                        LogError("Could not copy resource.");
---
>     #####:  405:                        LogError("Could not copy resource.");
414c414
<         -:  412:                        LogError("Failed allocating MAP for request headers");
---
>     #####:  412:                        LogError("Failed allocating MAP for request headers");
427c427
<         -:  425:                            LogError("Could not allocate pending send frames list");
---
>     #####:  425:                            LogError("Could not allocate pending send frames list");
441c441
<         -:  439:                                LogError("Cannot create underlying IO.");
---
>     #####:  439:                                LogError("Cannot create underlying IO.");
471c471
<         -:  469:                                        LogError("Cannot allocate memory for the protocols array.");
---
>     #####:  469:                                        LogError("Cannot allocate memory for the protocols array.");
488c488
<         -:  486:                                                LogError("Cannot allocate memory for the protocol index %u.", (unsigned int)i);
---
>     #####:  486:                                                LogError("Cannot allocate memory for the protocol index %u.", (unsigned int)i);
533c533
<         -:  531:        LogError("NULL uws handle");
---
>     #####:  531:        LogError("NULL uws handle");
636c636
<         -:  634:        LogError("Encoding of CLOSE failed.");
---
>     #####:  634:        LogError("Encoding of CLOSE failed.");
647c647
<         -:  645:            LogError("Sending CLOSE frame failed.");
---
>     #####:  645:            LogError("Sending CLOSE frame failed.");
679c679
<         -:  677:        LogError("Failed getting the request headers");
---
>     #####:  677:        LogError("Failed getting the request headers");
695c695
<         -:  693:            LogError("Failed allocating string for request headers");
---
>     #####:  693:            LogError("Failed allocating string for request headers");
730c730
<         -:  728:        LogError("NULL context");
---
>     #####:  728:        LogError("NULL context");
739c739
<         -:  737:            LogError("underlying on_io_open_complete was called again after upgrade request was sent.");
---
>     #####:  737:            LogError("underlying on_io_open_complete was called again after upgrade request was sent.");
777c777
<         -:  775:                    LogError("Cannot construct the WebSocket upgrade request");
---
>     #####:  775:                    LogError("Cannot construct the WebSocket upgrade request");
782c782
<         -:  780:                    LogError("Cannot construct the WebSocket request headers");
---
>     #####:  780:                    LogError("Cannot construct the WebSocket request headers");
817c817
<         -:  815:                        LogError("Cannot construct the WebSocket upgrade request");
---
>     #####:  815:                        LogError("Cannot construct the WebSocket upgrade request");
826c826
<         -:  824:                            LogError("Cannot allocate memory for the WebSocket upgrade request");
---
>     #####:  824:                            LogError("Cannot allocate memory for the WebSocket upgrade request");
846c846
<         -:  844:                                LogError("Cannot send upgrade request");
---
>     #####:  844:                                LogError("Cannot send upgrade request");
885c885
<         -:  883:        LogError("NULL context for on_underlying_io_close_complete");
---
>     #####:  883:        LogError("NULL context for on_underlying_io_close_complete");
904c904
<         -:  902:        LogError("NULL context in ");
---
>     #####:  902:        LogError("NULL context in ");
1034c1034
<         -: 1032:        LogError("Cannot allocate memory for received data");
---
>     #####: 1032:        LogError("Cannot allocate memory for received data");
1109c1109
<         -: 1107:                    LogError("Cannot allocate memory for received data");
---
>     #####: 1107:                    LogError("Cannot allocate memory for received data");
1164c1164
<         -: 1162:                            LogError("Cannot decode HTTP response");
---
>     #####: 1162:                            LogError("Cannot decode HTTP response");
1170c1170
<         -: 1168:                            LogError("Bad status (%d) received in WebSocket Upgrade response", status_code);
---
>     #####: 1168:                            LogError("Bad status (%d) received in WebSocket Upgrade response", status_code);
1209c1209
<         -: 1207:                            LogError("Masked frame detected by WebSocket client");
---
>     #####: 1207:                            LogError("Masked frame detected by WebSocket client");
1229c1229
<         -: 1227:                                    LogError("Bad frame: received a %u length on the 16 bit length", (unsigned int)length);
---
>     #####: 1227:                                    LogError("Bad frame: received a %u length on the 16 bit length", (unsigned int)length);
1249c1249
<         -: 1247:                                    LogError("Bad frame: received a 64 bit length frame with the highest bit set");
---
>     #####: 1247:                                    LogError("Bad frame: received a 64 bit length frame with the highest bit set");
1270c1270
<         -: 1268:                                        LogError("Bad frame: received a %u length on the 64 bit length", (unsigned int)length);
---
>     #####: 1268:                                        LogError("Bad frame: received a %u length on the 64 bit length", (unsigned int)length);
1316c1316
<         -: 1314:                                        LogError("Continuation fragment received without initial fragment specifying frame data type");
---
>     #####: 1314:                                        LogError("Continuation fragment received without initial fragment specifying frame data type");
1347c1347
<         -: 1345:                                        LogError("Fragmented frame received interleaved between the fragments of another message");
---
>     #####: 1345:                                        LogError("Fragmented frame received interleaved between the fragments of another message");
1387c1387
<         -: 1385:                                        LogError("Fragmented frame received interleaved between the fragments of another message");
---
>     #####: 1385:                                        LogError("Fragmented frame received interleaved between the fragments of another message");
1425c1425
<         -: 1423:                                    LogError("Fragmented control frame received.");
---
>     #####: 1423:                                    LogError("Fragmented control frame received.");
1455c1455
<         -: 1453:                                        LogError("Reason in CLOSE frame is not UTF-8.");
---
>     #####: 1453:                                        LogError("Reason in CLOSE frame is not UTF-8.");
1472c1472
<         -: 1470:                                        LogError("Could not close underlying IO");
---
>     #####: 1470:                                        LogError("Could not close underlying IO");
1504c1504
<         -: 1502:                                        LogError("Cannot encode the response CLOSE frame");
---
>     #####: 1502:                                        LogError("Cannot encode the response CLOSE frame");
1521c1521
<         -: 1519:                                            LogError("Cannot send the response CLOSE frame");
---
>     #####: 1519:                                            LogError("Cannot send the response CLOSE frame");
1558c1558
<         -: 1556:                                    LogError("Fragmented control frame received.");
---
>     #####: 1556:                                    LogError("Fragmented control frame received.");
1567c1567
<         -: 1565:                                    LogError("Encoding of PONG failed.");
---
>     #####: 1565:                                    LogError("Encoding of PONG failed.");
1576c1576
<         -: 1574:                                        LogError("Sending PONG frame failed.");
---
>     #####: 1574:                                        LogError("Sending PONG frame failed.");
1649c1649
<         -: 1647:        LogError("Invalid arguments: uws=%p, on_ws_open_complete=%p, on_ws_frame_received=%p, on_ws_error=%p",
---
>     #####: 1647:        LogError("Invalid arguments: uws=%p, on_ws_open_complete=%p, on_ws_frame_received=%p, on_ws_error=%p",
1659c1659
<         -: 1657:            LogError("Invalid uWS state while trying to open: %d", (int)uws_client->uws_state);
---
>     #####: 1657:            LogError("Invalid uWS state while trying to open: %d", (int)uws_client->uws_state);
1686c1686
<         -: 1684:                LogError("Opening the underlying IO failed");
---
>         2: 1684:                LogError("Opening the underlying IO failed");
1709c1709
<         -: 1707:        LogError("Failed removing item from list");
---
>     #####: 1707:        LogError("Failed removing item from list");
1740c1740
<         -: 1738:        LogError("NULL uWS handle.");
---
>     #####: 1738:        LogError("NULL uWS handle.");
1751c1751
<         -: 1749:            LogError("close has been called when already CLOSED");
---
>     #####: 1749:            LogError("close has been called when already CLOSED");
1767c1767
<         -: 1765:                LogError("Closing the underlying IO failed.");
---
>     #####: 1765:                LogError("Closing the underlying IO failed.");
1801c1801
<         -: 1799:        LogError("NULL uws_client");
---
>     #####: 1799:        LogError("NULL uws_client");
1813c1813
<         -: 1811:            LogError("uws_client_close_handshake_async has been called when already CLOSED");
---
>     #####: 1811:            LogError("uws_client_close_handshake_async has been called when already CLOSED");
1832c1832
<         -: 1830:                LogError("Sending CLOSE frame failed");
---
>     #####: 1830:                LogError("Sending CLOSE frame failed");
1860c1860
<         -: 1858:        LogError("on_underlying_io_send_complete called with NULL context");
---
>     #####: 1858:        LogError("on_underlying_io_send_complete called with NULL context");
1899c1899
<         -: 1897:            LogError("Failing getting singlylinkedlist_item_get_value on_underlying_io_send_complete");
---
>     #####: 1897:            LogError("Failing getting singlylinkedlist_item_get_value on_underlying_io_send_complete");
1916c1916
<         -: 1914:        LogError("NULL uws handle.");
---
>     #####: 1914:        LogError("NULL uws handle.");
1923c1923
<         -: 1921:        LogError("NULL buffer with %u size.", (unsigned int)size);
---
>     #####: 1921:        LogError("NULL buffer with %u size.", (unsigned int)size);
1931c1931
<         -: 1929:        LogError("uws not in OPEN state.");
---
>     #####: 1929:        LogError("uws not in OPEN state.");
1940c1940
<         -: 1938:            LogError("Cannot allocate memory for frame to be sent.");
---
>     #####: 1938:            LogError("Cannot allocate memory for frame to be sent.");
1955c1955
<         -: 1953:                LogError("Failed encoding WebSocket frame");
---
>     #####: 1953:                LogError("Failed encoding WebSocket frame");
1983c1983
<         -: 1981:                    LogError("Could not allocate memory for pending frames");
---
>     #####: 1981:                    LogError("Could not allocate memory for pending frames");
1999c1999
<         -: 1997:                        LogError("Could not send bytes through the underlying IO");
---
>     #####: 1997:                        LogError("Could not send bytes through the underlying IO");
2031c2031
<         -: 2029:        LogError("NULL uws handle.");
---
>     #####: 2029:        LogError("NULL uws handle.");
2054c2054
<         -: 2052:        LogError("invalid parameter (NULL) passed to uws_client_set_option");
---
>     #####: 2052:        LogError("invalid parameter (NULL) passed to uws_client_set_option");
2065c2065
<         -: 2063:                LogError("OptionHandler_FeedOptions failed");
---
>     #####: 2063:                LogError("OptionHandler_FeedOptions failed");
2080c2080
<         -: 2078:                LogError("xio_setoption failed.");
---
>     #####: 2078:                LogError("xio_setoption failed.");
2104c2104
<         -: 2102:        LogError("invalid argument detected: const char* name=%p, const void* value=%p", name, value);
---
>     #####: 2102:        LogError("invalid argument detected: const char* name=%p, const void* value=%p", name, value);
2117c2117
<         -: 2115:            LogError("unknown option: %s", name);
---
>     #####: 2115:            LogError("unknown option: %s", name);
2133c2133
<         -: 2131:        LogError("invalid argument detected: const char* name=%p, const void* value=%p", name, value);
---
>     #####: 2131:        LogError("invalid argument detected: const char* name=%p, const void* value=%p", name, value);
2145c2145
<         -: 2143:            LogError("unknown option: %s", name);
---
>     #####: 2143:            LogError("unknown option: %s", name);
2157c2157
<         -: 2155:        LogError("NULL uws handle.");
---
>     #####: 2155:        LogError("NULL uws handle.");
2167c2167
<         -: 2165:            LogError("OptionHandler_Create failed");
---
>     #####: 2165:            LogError("OptionHandler_Create failed");
2176c2176
<         -: 2174:                LogError("unable to concrete_io_retrieveoptions");
---
>     #####: 2174:                LogError("unable to concrete_io_retrieveoptions");
2187c2187
<         -: 2185:                    LogError("OptionHandler_AddOption failed");
---
>     #####: 2185:                    LogError("OptionHandler_AddOption failed");
2207c2207
<         -: 2205:        LogError("invalid parameter (uws_client=%p, name=%p, value=%p)", uws_client, name, value);
---
>     #####: 2205:        LogError("invalid parameter (uws_client=%p, name=%p, value=%p)", uws_client, name, value);
2214c2214
<         -: 2212:        LogError("Failed adding request header %s", name);
---
>     #####: 2212:        LogError("Failed adding request header %s", name);
