2c2
<         -:    0:Programs:95
---
>         -:    0:Programs:101
120c120
<         -:  118:                LogError("delivery state not provided");
---
>     #####:  118:                LogError("delivery state not provided");
129c129
<         -:  127:                    LogError("Error getting descriptor for delivery state");
---
>     #####:  127:                    LogError("Error getting descriptor for delivery state");
173c173
<         -:  171:    if (xlogging_get_log_function() != NULL && message_sender->is_trace_on == 1)
---
>     #####:  171:    if (xlogging_get_log_function() != NULL && message_sender->is_trace_on == 1)
175,178c175,178
<         -:  173:        char* value_as_string = NULL;
<         -:  174:        LOG(AZ_LOG_TRACE, 0, "%s", MU_P_OR_NULL(name));
<         -:  175:        LOG(AZ_LOG_TRACE, 0, "%s", ((value_as_string = amqpvalue_to_string(value)), MU_P_OR_NULL(value_as_string)));
<         -:  176:        if (value_as_string != NULL)
---
>     #####:  173:        char* value_as_string = NULL;
>     #####:  174:        LOG(AZ_LOG_TRACE, 0, "%s", MU_P_OR_NULL(name));
>     #####:  175:        LOG(AZ_LOG_TRACE, 0, "%s", ((value_as_string = amqpvalue_to_string(value)), MU_P_OR_NULL(value_as_string)));
>     #####:  176:        if (value_as_string != NULL)
180c180
<         -:  178:            free(value_as_string);
---
>     #####:  178:            free(value_as_string);
198c198
<         -:  196:        LogError("Failure getting message body type and/or message format");
---
>     #####:  196:        LogError("Failure getting message body type and/or message format");
222c222
<         -:  220:                LogError("Cannot create header AMQP value");
---
>     #####:  220:                LogError("Cannot create header AMQP value");
229c229
<         -:  227:                    LogError("Cannot obtain header encoded size");
---
>     #####:  227:                    LogError("Cannot obtain header encoded size");
247c247
<         -:  245:                LogError("Cannot obtain message annotations encoded size");
---
>     #####:  245:                LogError("Cannot obtain message annotations encoded size");
264c264
<         -:  262:                LogError("Cannot create message properties AMQP value");
---
>     #####:  262:                LogError("Cannot create message properties AMQP value");
271c271
<         -:  269:                    LogError("Cannot obtain message properties encoded size");
---
>     #####:  269:                    LogError("Cannot obtain message properties encoded size");
289c289
<         -:  287:                LogError("Cannot create application properties AMQP value");
---
>     #####:  287:                LogError("Cannot create application properties AMQP value");
296c296
<         -:  294:                    LogError("Cannot obtain application properties encoded size");
---
>     #####:  294:                    LogError("Cannot obtain application properties encoded size");
318c318
<         -:  316:                LogError("Unknown body type");
---
>     #####:  316:                LogError("Unknown body type");
327c327
<         -:  325:                    LogError("Cannot obtain AMQP value from body");
---
>     #####:  325:                    LogError("Cannot obtain AMQP value from body");
335c335
<         -:  333:                        LogError("Cannot create body AMQP value");
---
>     #####:  333:                        LogError("Cannot create body AMQP value");
342c342
<         -:  340:                            LogError("Cannot get body AMQP value encoded size");
---
>     #####:  340:                            LogError("Cannot get body AMQP value encoded size");
362c362
<         -:  360:                    LogError("Cannot get body AMQP data count");
---
>     #####:  360:                    LogError("Cannot get body AMQP data count");
369c369
<         -:  367:                        LogError("Body data count is zero");
---
>     #####:  367:                        LogError("Body data count is zero");
378c378
<         -:  376:                                LogError("Cannot get body AMQP data %u", (unsigned int)i);
---
>     #####:  376:                                LogError("Cannot get body AMQP data %u", (unsigned int)i);
390c390
<         -:  388:                                    LogError("Cannot create body AMQP data");
---
>     #####:  388:                                    LogError("Cannot create body AMQP data");
397c397
<         -:  395:                                        LogError("Cannot get body AMQP data encoded size");
---
>     #####:  395:                                        LogError("Cannot get body AMQP data encoded size");
427c427
<         -:  425:                        LogError("Cannot encode header value");
---
>     #####:  425:                        LogError("Cannot encode header value");
438c438
<         -:  436:                        LogError("Cannot encode message annotations value");
---
>     #####:  436:                        LogError("Cannot encode message annotations value");
449c449
<         -:  447:                        LogError("Cannot encode message properties value");
---
>     #####:  447:                        LogError("Cannot encode message properties value");
460c460
<         -:  458:                        LogError("Cannot encode application properties value");
---
>     #####:  458:                        LogError("Cannot encode application properties value");
472c472
<         -:  470:                        LogError("Unknown message type");
---
>     #####:  470:                        LogError("Unknown message type");
480c480
<         -:  478:                            LogError("Cannot encode body AMQP value");
---
>     #####:  478:                            LogError("Cannot encode body AMQP value");
496c496
<         -:  494:                                LogError("Cannot get AMQP data %u", (unsigned int)i);
---
>     #####:  494:                                LogError("Cannot get AMQP data %u", (unsigned int)i);
508c508
<         -:  506:                                    LogError("Cannot create body AMQP data %u", (unsigned int)i);
---
>     #####:  506:                                    LogError("Cannot create body AMQP data %u", (unsigned int)i);
515c515
<         -:  513:                                        LogError("Cannot encode body AMQP data %u", (unsigned int)i);
---
>     #####:  513:                                        LogError("Cannot encode body AMQP data %u", (unsigned int)i);
546c546
<         -:  544:                            LogError("Error in link transfer");
---
>     #####:  544:                            LogError("Error in link transfer");
616c616
<         -:  614:                LogError("Invalid send one message result");
---
>     #####:  614:                LogError("Invalid send one message result");
735c735
<         -:  733:        LogError("Failed allocating message sender");
---
>     #####:  733:        LogError("Failed allocating message sender");
755c755
<         -:  753:        LogError("NULL message_sender");
---
>     #####:  753:        LogError("NULL message_sender");
771c771
<         -:  769:        LogError("NULL message_sender");
---
>     #####:  769:        LogError("NULL message_sender");
781c781
<         -:  779:                LogError("attach link failed");
---
>         5:  779:                LogError("attach link failed");
805c805
<         -:  803:        LogError("NULL message_sender");
---
>     #####:  803:        LogError("NULL message_sender");
818c818
<         -:  816:                LogError("Detaching link failed");
---
>     #####:  816:                LogError("Detaching link failed");
854c854
<         -:  852:        LogError("Bad parameters: message_sender=%p, message=%p, on_message_send_complete=%p, callback_context=%p, timeout=%" PRIu64, message_sender, message, on_message_send_complete, callback_context, (uint64_t)timeout);
---
>     #####:  852:        LogError("Bad parameters: message_sender=%p, message=%p, on_message_send_complete=%p, callback_context=%p, timeout=%" PRIu64, message_sender, message, on_message_send_complete, callback_context, (uint64_t)timeout);
861c861
<         -:  859:            LogError("Message sender in ERROR state");
---
>     #####:  859:            LogError("Message sender in ERROR state");
869c869
<         -:  867:                LogError("Failed allocating context for send");
---
>     #####:  867:                LogError("Failed allocating context for send");
877c877
<         -:  875:                    LogError("Failed allocating memory for pending sends");
---
>     #####:  875:                    LogError("Failed allocating memory for pending sends");
890c890
<         -:  888:                            LogError("Cannot clone message for placing it in the pending sends list");
---
>     #####:  888:                            LogError("Cannot clone message for placing it in the pending sends list");
918c918
<         -:  916:                                LogError("Error sending message");
---
>     #####:  916:                                LogError("Error sending message");
927c927
<         -:  925:                                    LogError("Error cloning message for placing it in the pending sends list");
---
>     #####:  925:                                    LogError("Error cloning message for placing it in the pending sends list");
954c954
<         -:  952:        LogError("NULL message_sender");
---
>     #####:  952:        LogError("NULL message_sender");
