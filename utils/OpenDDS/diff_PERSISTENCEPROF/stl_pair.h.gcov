2c2
<         -:    0:Programs:51
---
>         -:    0:Programs:3
210c210
<       132:  208:    struct pair
---
>     #####:  208:    struct pair
231,232c231,232
<     #####:  229:      _GLIBCXX_CONSTEXPR pair()
<     #####:  230:      : first(), second() { }
---
>         -:  229:      _GLIBCXX_CONSTEXPR pair()
>         -:  230:      : first(), second() { }
262,263c262,263
<        30:  260:      constexpr pair(const _T1& __a, const _T2& __b)
<        30:  261:      : first(__a), second(__b) { }
---
>     #####:  260:      constexpr pair(const _T1& __a, const _T2& __b)
>     #####:  261:      : first(__a), second(__b) { }
305,306c305,306
<         3:  303:      constexpr pair(const pair&) = default;
<        28:  304:      constexpr pair(pair&&) = default;
---
>     #####:  303:      constexpr pair(const pair&) = default;
>     #####:  304:      constexpr pair(pair&&) = default;
313,314c313,314
<         4:  311:       constexpr pair(_U1&& __x, const _T2& __y)
<         4:  312:       : first(std::forward<_U1>(__x)), second(__y) { }
---
>     #####:  311:       constexpr pair(_U1&& __x, const _T2& __y)
>     #####:  312:       : first(std::forward<_U1>(__x)), second(__y) { }
343,344c343,344
<       158:  341:	constexpr pair(_U1&& __x, _U2&& __y)
<       158:  342:	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
---
>     #####:  341:	constexpr pair(_U1&& __x, _U2&& __y)
>     #####:  342:	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
362,364c362,364
<        20:  360:	constexpr pair(pair<_U1, _U2>&& __p)
<        20:  361:	: first(std::forward<_U1>(__p.first)),
<        20:  362:	  second(std::forward<_U2>(__p.second)) { }
---
>     #####:  360:	constexpr pair(pair<_U1, _U2>&& __p)
>         -:  361:	: first(std::forward<_U1>(__p.first)),
>     #####:  362:	  second(std::forward<_U2>(__p.second)) { }
391c391
<     #####:  389:      operator=(typename conditional<
---
>         -:  389:      operator=(typename conditional<
398,400c398,400
<     #####:  396:	first = std::forward<first_type>(__p.first);
<     #####:  397:	second = std::forward<second_type>(__p.second);
<     #####:  398:	return *this;
---
>         -:  396:	first = std::forward<first_type>(__p.first);
>         -:  397:	second = std::forward<second_type>(__p.second);
>         -:  398:	return *this;
450,451c450,451
<     #####:  448:    operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
<     #####:  449:    { return __x.first == __y.first && __x.second == __y.second; }
---
>         -:  448:    operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
>         -:  449:    { return __x.first == __y.first && __x.second == __y.second; }
526c526
<        34:  524:    make_pair(_T1&& __x, _T2&& __y)
---
>     #####:  524:    make_pair(_T1&& __x, _T2&& __y)
531c531
<        34:  529:      return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));
---
>     #####:  529:      return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));
