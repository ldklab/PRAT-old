1c1
<         -:    0:Source:/home/ryan/git/TARGETS/OpenDDS-debloat/ACE_wrappers/ace/Free_List.cpp
---
>         -:    0:Source:/home/ryan/git/OpenDDS-debloat/ACE_wrappers/ace/Free_List.cpp
3c3
<         -:    1:// $Id$
---
>         -:    1:// $Id: Free_List.cpp 2622 2015-08-13 18:30:00Z mitza $
25,95d24
< ------------------
< _ZN13ACE_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockEED0Ev:
<     #####:   20:ACE_Free_List<T>::~ACE_Free_List (void)
<         -:   21:{
<     #####:   22:}
< ------------------
< _ZN13ACE_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockEED2Ev:
<     #####:   20:ACE_Free_List<T>::~ACE_Free_List (void)
<         -:   21:{
<     #####:   22:}
< ------------------
< _ZN13ACE_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockEED0Ev:
<     #####:   20:ACE_Free_List<T>::~ACE_Free_List (void)
<         -:   21:{
<     #####:   22:}
< ------------------
< _ZN13ACE_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockEED2Ev:
<     #####:   20:ACE_Free_List<T>::~ACE_Free_List (void)
<         -:   21:{
<     #####:   22:}
< ------------------
< _ZN13ACE_Free_ListI16ACE_Timer_Node_TIP17ACE_Event_HandlerEED0Ev:
<     #####:   20:ACE_Free_List<T>::~ACE_Free_List (void)
<         -:   21:{
<     #####:   22:}
< ------------------
< _ZN13ACE_Free_ListI16ACE_Timer_Node_TIP17ACE_Event_HandlerEED2Ev:
<     #####:   20:ACE_Free_List<T>::~ACE_Free_List (void)
<         -:   21:{
<     #####:   22:}
< ------------------
< _ZN13ACE_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockEED0Ev:
<     #####:   20:ACE_Free_List<T>::~ACE_Free_List (void)
<         -:   21:{
<     #####:   22:}
< ------------------
< _ZN13ACE_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockEED2Ev:
<     #####:   20:ACE_Free_List<T>::~ACE_Free_List (void)
<         -:   21:{
<     #####:   22:}
< ------------------
< _ZN13ACE_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockEED0Ev:
<     #####:   20:ACE_Free_List<T>::~ACE_Free_List (void)
<         -:   21:{
<     #####:   22:}
< ------------------
< _ZN13ACE_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockEED2Ev:
<     #####:   20:ACE_Free_List<T>::~ACE_Free_List (void)
<         -:   21:{
<     #####:   22:}
< ------------------
< _ZN13ACE_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockEED0Ev:
<     #####:   20:ACE_Free_List<T>::~ACE_Free_List (void)
<         -:   21:{
<     #####:   22:}
< ------------------
< _ZN13ACE_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockEED2Ev:
<     #####:   20:ACE_Free_List<T>::~ACE_Free_List (void)
<         -:   21:{
<     #####:   22:}
< ------------------
< _ZN13ACE_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockEED0Ev:
<     #####:   20:ACE_Free_List<T>::~ACE_Free_List (void)
<         -:   21:{
<     #####:   22:}
< ------------------
< _ZN13ACE_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockEED2Ev:
<     #####:   20:ACE_Free_List<T>::~ACE_Free_List (void)
<         -:   21:{
<     #####:   22:}
< ------------------
116,228d44
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexEC2Eimmmm:
<     #####:   29:ACE_Locked_Free_List<T, ACE_LOCK>::ACE_Locked_Free_List (int mode,
<         -:   30:                                                     size_t prealloc,
<         -:   31:                                                     size_t lwm,
<         -:   32:                                                     size_t hwm,
<         -:   33:                                                     size_t inc)
<         -:   34:  : mode_ (mode),
<         -:   35:    free_list_ (0),
<         -:   36:    lwm_ (lwm),
<         -:   37:    hwm_ (hwm),
<         -:   38:    inc_ (inc),
<     #####:   39:    size_ (0)
<         -:   40:{
<     #####:   41:  this->alloc (prealloc);
<     #####:   42:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexEC2Eimmmm:
<     #####:   29:ACE_Locked_Free_List<T, ACE_LOCK>::ACE_Locked_Free_List (int mode,
<         -:   30:                                                     size_t prealloc,
<         -:   31:                                                     size_t lwm,
<         -:   32:                                                     size_t hwm,
<         -:   33:                                                     size_t inc)
<         -:   34:  : mode_ (mode),
<         -:   35:    free_list_ (0),
<         -:   36:    lwm_ (lwm),
<         -:   37:    hwm_ (hwm),
<         -:   38:    inc_ (inc),
<     #####:   39:    size_ (0)
<         -:   40:{
<     #####:   41:  this->alloc (prealloc);
<     #####:   42:}
< ------------------
< _ZN20ACE_Locked_Free_ListI16ACE_Timer_Node_TIP17ACE_Event_HandlerE14ACE_Null_MutexEC2Eimmmm:
<     #####:   29:ACE_Locked_Free_List<T, ACE_LOCK>::ACE_Locked_Free_List (int mode,
<         -:   30:                                                     size_t prealloc,
<         -:   31:                                                     size_t lwm,
<         -:   32:                                                     size_t hwm,
<         -:   33:                                                     size_t inc)
<         -:   34:  : mode_ (mode),
<         -:   35:    free_list_ (0),
<         -:   36:    lwm_ (lwm),
<         -:   37:    hwm_ (hwm),
<         -:   38:    inc_ (inc),
<     #####:   39:    size_ (0)
<         -:   40:{
<     #####:   41:  this->alloc (prealloc);
<     #####:   42:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexEC2Eimmmm:
<     #####:   29:ACE_Locked_Free_List<T, ACE_LOCK>::ACE_Locked_Free_List (int mode,
<         -:   30:                                                     size_t prealloc,
<         -:   31:                                                     size_t lwm,
<         -:   32:                                                     size_t hwm,
<         -:   33:                                                     size_t inc)
<         -:   34:  : mode_ (mode),
<         -:   35:    free_list_ (0),
<         -:   36:    lwm_ (lwm),
<         -:   37:    hwm_ (hwm),
<         -:   38:    inc_ (inc),
<     #####:   39:    size_ (0)
<         -:   40:{
<     #####:   41:  this->alloc (prealloc);
<     #####:   42:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexEC2Eimmmm:
<     #####:   29:ACE_Locked_Free_List<T, ACE_LOCK>::ACE_Locked_Free_List (int mode,
<         -:   30:                                                     size_t prealloc,
<         -:   31:                                                     size_t lwm,
<         -:   32:                                                     size_t hwm,
<         -:   33:                                                     size_t inc)
<         -:   34:  : mode_ (mode),
<         -:   35:    free_list_ (0),
<         -:   36:    lwm_ (lwm),
<         -:   37:    hwm_ (hwm),
<         -:   38:    inc_ (inc),
<     #####:   39:    size_ (0)
<         -:   40:{
<     #####:   41:  this->alloc (prealloc);
<     #####:   42:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexEC2Eimmmm:
<     #####:   29:ACE_Locked_Free_List<T, ACE_LOCK>::ACE_Locked_Free_List (int mode,
<         -:   30:                                                     size_t prealloc,
<         -:   31:                                                     size_t lwm,
<         -:   32:                                                     size_t hwm,
<         -:   33:                                                     size_t inc)
<         -:   34:  : mode_ (mode),
<         -:   35:    free_list_ (0),
<         -:   36:    lwm_ (lwm),
<         -:   37:    hwm_ (hwm),
<         -:   38:    inc_ (inc),
<     #####:   39:    size_ (0)
<         -:   40:{
<     #####:   41:  this->alloc (prealloc);
<     #####:   42:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexEC2Eimmmm:
<     #####:   29:ACE_Locked_Free_List<T, ACE_LOCK>::ACE_Locked_Free_List (int mode,
<         -:   30:                                                     size_t prealloc,
<         -:   31:                                                     size_t lwm,
<         -:   32:                                                     size_t hwm,
<         -:   33:                                                     size_t inc)
<         -:   34:  : mode_ (mode),
<         -:   35:    free_list_ (0),
<         -:   36:    lwm_ (lwm),
<         -:   37:    hwm_ (hwm),
<         -:   38:    inc_ (inc),
<     #####:   39:    size_ (0)
<         -:   40:{
<     #####:   41:  this->alloc (prealloc);
<     #####:   42:}
< ------------------
243,411d58
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexED0Ev:
<     #####:   47:ACE_Locked_Free_List<T, ACE_LOCK>::~ACE_Locked_Free_List (void)
<         -:   48:{
<         -:   49:  if (this->mode_ != ACE_PURE_FREE_LIST)
<         -:   50:    while (this->free_list_ != 0)
<         -:   51:      {
<         -:   52:        T *temp = this->free_list_;
<         -:   53:        this->free_list_ = this->free_list_->get_next ();
<         -:   54:        delete temp;
<         -:   55:      }
<     #####:   56:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexED2Ev:
<     #####:   47:ACE_Locked_Free_List<T, ACE_LOCK>::~ACE_Locked_Free_List (void)
<         -:   48:{
<     #####:   49:  if (this->mode_ != ACE_PURE_FREE_LIST)
<     #####:   50:    while (this->free_list_ != 0)
<         -:   51:      {
<     #####:   52:        T *temp = this->free_list_;
<     #####:   53:        this->free_list_ = this->free_list_->get_next ();
<     #####:   54:        delete temp;
<         -:   55:      }
<     #####:   56:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexED0Ev:
<     #####:   47:ACE_Locked_Free_List<T, ACE_LOCK>::~ACE_Locked_Free_List (void)
<         -:   48:{
<         -:   49:  if (this->mode_ != ACE_PURE_FREE_LIST)
<         -:   50:    while (this->free_list_ != 0)
<         -:   51:      {
<         -:   52:        T *temp = this->free_list_;
<         -:   53:        this->free_list_ = this->free_list_->get_next ();
<         -:   54:        delete temp;
<         -:   55:      }
<     #####:   56:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexED2Ev:
<     #####:   47:ACE_Locked_Free_List<T, ACE_LOCK>::~ACE_Locked_Free_List (void)
<         -:   48:{
<     #####:   49:  if (this->mode_ != ACE_PURE_FREE_LIST)
<     #####:   50:    while (this->free_list_ != 0)
<         -:   51:      {
<     #####:   52:        T *temp = this->free_list_;
<     #####:   53:        this->free_list_ = this->free_list_->get_next ();
<     #####:   54:        delete temp;
<         -:   55:      }
<     #####:   56:}
< ------------------
< _ZN20ACE_Locked_Free_ListI16ACE_Timer_Node_TIP17ACE_Event_HandlerE14ACE_Null_MutexED0Ev:
<     #####:   47:ACE_Locked_Free_List<T, ACE_LOCK>::~ACE_Locked_Free_List (void)
<         -:   48:{
<         -:   49:  if (this->mode_ != ACE_PURE_FREE_LIST)
<         -:   50:    while (this->free_list_ != 0)
<         -:   51:      {
<         -:   52:        T *temp = this->free_list_;
<         -:   53:        this->free_list_ = this->free_list_->get_next ();
<         -:   54:        delete temp;
<         -:   55:      }
<     #####:   56:}
< ------------------
< _ZN20ACE_Locked_Free_ListI16ACE_Timer_Node_TIP17ACE_Event_HandlerE14ACE_Null_MutexED2Ev:
<     #####:   47:ACE_Locked_Free_List<T, ACE_LOCK>::~ACE_Locked_Free_List (void)
<         -:   48:{
<     #####:   49:  if (this->mode_ != ACE_PURE_FREE_LIST)
<     #####:   50:    while (this->free_list_ != 0)
<         -:   51:      {
<     #####:   52:        T *temp = this->free_list_;
<     #####:   53:        this->free_list_ = this->free_list_->get_next ();
<     #####:   54:        delete temp;
<         -:   55:      }
<     #####:   56:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexED0Ev:
<     #####:   47:ACE_Locked_Free_List<T, ACE_LOCK>::~ACE_Locked_Free_List (void)
<         -:   48:{
<         -:   49:  if (this->mode_ != ACE_PURE_FREE_LIST)
<         -:   50:    while (this->free_list_ != 0)
<         -:   51:      {
<         -:   52:        T *temp = this->free_list_;
<         -:   53:        this->free_list_ = this->free_list_->get_next ();
<         -:   54:        delete temp;
<         -:   55:      }
<     #####:   56:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexED2Ev:
<     #####:   47:ACE_Locked_Free_List<T, ACE_LOCK>::~ACE_Locked_Free_List (void)
<         -:   48:{
<     #####:   49:  if (this->mode_ != ACE_PURE_FREE_LIST)
<     #####:   50:    while (this->free_list_ != 0)
<         -:   51:      {
<     #####:   52:        T *temp = this->free_list_;
<     #####:   53:        this->free_list_ = this->free_list_->get_next ();
<     #####:   54:        delete temp;
<         -:   55:      }
<     #####:   56:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexED0Ev:
<     #####:   47:ACE_Locked_Free_List<T, ACE_LOCK>::~ACE_Locked_Free_List (void)
<         -:   48:{
<         -:   49:  if (this->mode_ != ACE_PURE_FREE_LIST)
<         -:   50:    while (this->free_list_ != 0)
<         -:   51:      {
<         -:   52:        T *temp = this->free_list_;
<         -:   53:        this->free_list_ = this->free_list_->get_next ();
<         -:   54:        delete temp;
<         -:   55:      }
<     #####:   56:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexED2Ev:
<     #####:   47:ACE_Locked_Free_List<T, ACE_LOCK>::~ACE_Locked_Free_List (void)
<         -:   48:{
<     #####:   49:  if (this->mode_ != ACE_PURE_FREE_LIST)
<     #####:   50:    while (this->free_list_ != 0)
<         -:   51:      {
<     #####:   52:        T *temp = this->free_list_;
<     #####:   53:        this->free_list_ = this->free_list_->get_next ();
<     #####:   54:        delete temp;
<         -:   55:      }
<     #####:   56:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexED0Ev:
<     #####:   47:ACE_Locked_Free_List<T, ACE_LOCK>::~ACE_Locked_Free_List (void)
<         -:   48:{
<         -:   49:  if (this->mode_ != ACE_PURE_FREE_LIST)
<         -:   50:    while (this->free_list_ != 0)
<         -:   51:      {
<         -:   52:        T *temp = this->free_list_;
<         -:   53:        this->free_list_ = this->free_list_->get_next ();
<         -:   54:        delete temp;
<         -:   55:      }
<     #####:   56:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexED2Ev:
<     #####:   47:ACE_Locked_Free_List<T, ACE_LOCK>::~ACE_Locked_Free_List (void)
<         -:   48:{
<     #####:   49:  if (this->mode_ != ACE_PURE_FREE_LIST)
<     #####:   50:    while (this->free_list_ != 0)
<         -:   51:      {
<     #####:   52:        T *temp = this->free_list_;
<     #####:   53:        this->free_list_ = this->free_list_->get_next ();
<     #####:   54:        delete temp;
<         -:   55:      }
<     #####:   56:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexED0Ev:
<     #####:   47:ACE_Locked_Free_List<T, ACE_LOCK>::~ACE_Locked_Free_List (void)
<         -:   48:{
<         -:   49:  if (this->mode_ != ACE_PURE_FREE_LIST)
<         -:   50:    while (this->free_list_ != 0)
<         -:   51:      {
<         -:   52:        T *temp = this->free_list_;
<         -:   53:        this->free_list_ = this->free_list_->get_next ();
<         -:   54:        delete temp;
<         -:   55:      }
<     #####:   56:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexED2Ev:
<     #####:   47:ACE_Locked_Free_List<T, ACE_LOCK>::~ACE_Locked_Free_List (void)
<         -:   48:{
<     #####:   49:  if (this->mode_ != ACE_PURE_FREE_LIST)
<     #####:   50:    while (this->free_list_ != 0)
<         -:   51:      {
<     #####:   52:        T *temp = this->free_list_;
<     #####:   53:        this->free_list_ = this->free_list_->get_next ();
<     #####:   54:        delete temp;
<         -:   55:      }
<     #####:   56:}
< ------------------
433,552d79
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexE3addEPS2_:
<     #####:   63:ACE_Locked_Free_List<T, ACE_LOCK>::add (T *element)
<         -:   64:{
<     #####:   65:  ACE_MT (ACE_GUARD (ACE_LOCK, ace_mon, this->mutex_));
<         -:   66:
<         -:   67:  // Check to see that we not at the high water mark.
<     #####:   68:  if (this->mode_ == ACE_PURE_FREE_LIST
<     #####:   69:      || this->size_ < this->hwm_)
<         -:   70:    {
<     #####:   71:      element->set_next (this->free_list_);
<     #####:   72:      this->free_list_ = element;
<     #####:   73:      this->size_++;
<         -:   74:    }
<         -:   75:  else
<     #####:   76:    delete element;
<         -:   77:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexE3addEPS2_:
<     #####:   63:ACE_Locked_Free_List<T, ACE_LOCK>::add (T *element)
<         -:   64:{
<     #####:   65:  ACE_MT (ACE_GUARD (ACE_LOCK, ace_mon, this->mutex_));
<         -:   66:
<         -:   67:  // Check to see that we not at the high water mark.
<     #####:   68:  if (this->mode_ == ACE_PURE_FREE_LIST
<     #####:   69:      || this->size_ < this->hwm_)
<         -:   70:    {
<     #####:   71:      element->set_next (this->free_list_);
<     #####:   72:      this->free_list_ = element;
<     #####:   73:      this->size_++;
<         -:   74:    }
<         -:   75:  else
<     #####:   76:    delete element;
<         -:   77:}
< ------------------
< _ZN20ACE_Locked_Free_ListI16ACE_Timer_Node_TIP17ACE_Event_HandlerE14ACE_Null_MutexE3addEPS3_:
<     #####:   63:ACE_Locked_Free_List<T, ACE_LOCK>::add (T *element)
<         -:   64:{
<     #####:   65:  ACE_MT (ACE_GUARD (ACE_LOCK, ace_mon, this->mutex_));
<         -:   66:
<         -:   67:  // Check to see that we not at the high water mark.
<     #####:   68:  if (this->mode_ == ACE_PURE_FREE_LIST
<     #####:   69:      || this->size_ < this->hwm_)
<         -:   70:    {
<     #####:   71:      element->set_next (this->free_list_);
<     #####:   72:      this->free_list_ = element;
<     #####:   73:      this->size_++;
<         -:   74:    }
<         -:   75:  else
<     #####:   76:    delete element;
<         -:   77:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexE3addEPS2_:
<     #####:   63:ACE_Locked_Free_List<T, ACE_LOCK>::add (T *element)
<         -:   64:{
<     #####:   65:  ACE_MT (ACE_GUARD (ACE_LOCK, ace_mon, this->mutex_));
<         -:   66:
<         -:   67:  // Check to see that we not at the high water mark.
<     #####:   68:  if (this->mode_ == ACE_PURE_FREE_LIST
<     #####:   69:      || this->size_ < this->hwm_)
<         -:   70:    {
<     #####:   71:      element->set_next (this->free_list_);
<     #####:   72:      this->free_list_ = element;
<     #####:   73:      this->size_++;
<         -:   74:    }
<         -:   75:  else
<     #####:   76:    delete element;
<         -:   77:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexE3addEPS2_:
<     #####:   63:ACE_Locked_Free_List<T, ACE_LOCK>::add (T *element)
<         -:   64:{
<     #####:   65:  ACE_MT (ACE_GUARD (ACE_LOCK, ace_mon, this->mutex_));
<         -:   66:
<         -:   67:  // Check to see that we not at the high water mark.
<     #####:   68:  if (this->mode_ == ACE_PURE_FREE_LIST
<     #####:   69:      || this->size_ < this->hwm_)
<         -:   70:    {
<     #####:   71:      element->set_next (this->free_list_);
<     #####:   72:      this->free_list_ = element;
<     #####:   73:      this->size_++;
<         -:   74:    }
<         -:   75:  else
<     #####:   76:    delete element;
<         -:   77:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexE3addEPS2_:
<     #####:   63:ACE_Locked_Free_List<T, ACE_LOCK>::add (T *element)
<         -:   64:{
<     #####:   65:  ACE_MT (ACE_GUARD (ACE_LOCK, ace_mon, this->mutex_));
<         -:   66:
<         -:   67:  // Check to see that we not at the high water mark.
<     #####:   68:  if (this->mode_ == ACE_PURE_FREE_LIST
<     #####:   69:      || this->size_ < this->hwm_)
<         -:   70:    {
<     #####:   71:      element->set_next (this->free_list_);
<     #####:   72:      this->free_list_ = element;
<     #####:   73:      this->size_++;
<         -:   74:    }
<         -:   75:  else
<     #####:   76:    delete element;
<         -:   77:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexE3addEPS2_:
<     #####:   63:ACE_Locked_Free_List<T, ACE_LOCK>::add (T *element)
<         -:   64:{
<     #####:   65:  ACE_MT (ACE_GUARD (ACE_LOCK, ace_mon, this->mutex_));
<         -:   66:
<         -:   67:  // Check to see that we not at the high water mark.
<     #####:   68:  if (this->mode_ == ACE_PURE_FREE_LIST
<     #####:   69:      || this->size_ < this->hwm_)
<         -:   70:    {
<     #####:   71:      element->set_next (this->free_list_);
<     #####:   72:      this->free_list_ = element;
<     #####:   73:      this->size_++;
<         -:   74:    }
<         -:   75:  else
<     #####:   76:    delete element;
<         -:   77:}
< ------------------
578,725d104
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexE6removeEv:
<     #####:   84:ACE_Locked_Free_List<T, ACE_LOCK>::remove (void)
<         -:   85:{
<     #####:   86:  ACE_MT (ACE_GUARD_RETURN (ACE_LOCK, ace_mon, this->mutex_, 0));
<         -:   87:
<         -:   88:  // If we are at the low water mark, add some nodes
<     #####:   89:  if (this->mode_ != ACE_PURE_FREE_LIST && this->size_ <= this->lwm_)
<     #####:   90:    this->alloc (this->inc_);
<         -:   91:
<         -:   92:  // Remove a node
<     #####:   93:  T *temp = this->free_list_;
<         -:   94:
<     #####:   95:  if (temp != 0)
<         -:   96:    {
<     #####:   97:      this->free_list_ = this->free_list_->get_next ();
<     #####:   98:      this->size_--;
<         -:   99:    }
<         -:  100:
<     #####:  101:  return temp;
<         -:  102:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexE6removeEv:
<     #####:   84:ACE_Locked_Free_List<T, ACE_LOCK>::remove (void)
<         -:   85:{
<     #####:   86:  ACE_MT (ACE_GUARD_RETURN (ACE_LOCK, ace_mon, this->mutex_, 0));
<         -:   87:
<         -:   88:  // If we are at the low water mark, add some nodes
<     #####:   89:  if (this->mode_ != ACE_PURE_FREE_LIST && this->size_ <= this->lwm_)
<     #####:   90:    this->alloc (this->inc_);
<         -:   91:
<         -:   92:  // Remove a node
<     #####:   93:  T *temp = this->free_list_;
<         -:   94:
<     #####:   95:  if (temp != 0)
<         -:   96:    {
<     #####:   97:      this->free_list_ = this->free_list_->get_next ();
<     #####:   98:      this->size_--;
<         -:   99:    }
<         -:  100:
<     #####:  101:  return temp;
<         -:  102:}
< ------------------
< _ZN20ACE_Locked_Free_ListI16ACE_Timer_Node_TIP17ACE_Event_HandlerE14ACE_Null_MutexE6removeEv:
<     #####:   84:ACE_Locked_Free_List<T, ACE_LOCK>::remove (void)
<         -:   85:{
<     #####:   86:  ACE_MT (ACE_GUARD_RETURN (ACE_LOCK, ace_mon, this->mutex_, 0));
<         -:   87:
<         -:   88:  // If we are at the low water mark, add some nodes
<     #####:   89:  if (this->mode_ != ACE_PURE_FREE_LIST && this->size_ <= this->lwm_)
<     #####:   90:    this->alloc (this->inc_);
<         -:   91:
<         -:   92:  // Remove a node
<     #####:   93:  T *temp = this->free_list_;
<         -:   94:
<     #####:   95:  if (temp != 0)
<         -:   96:    {
<     #####:   97:      this->free_list_ = this->free_list_->get_next ();
<     #####:   98:      this->size_--;
<         -:   99:    }
<         -:  100:
<     #####:  101:  return temp;
<         -:  102:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexE6removeEv:
<     #####:   84:ACE_Locked_Free_List<T, ACE_LOCK>::remove (void)
<         -:   85:{
<     #####:   86:  ACE_MT (ACE_GUARD_RETURN (ACE_LOCK, ace_mon, this->mutex_, 0));
<         -:   87:
<         -:   88:  // If we are at the low water mark, add some nodes
<     #####:   89:  if (this->mode_ != ACE_PURE_FREE_LIST && this->size_ <= this->lwm_)
<     #####:   90:    this->alloc (this->inc_);
<         -:   91:
<         -:   92:  // Remove a node
<     #####:   93:  T *temp = this->free_list_;
<         -:   94:
<     #####:   95:  if (temp != 0)
<         -:   96:    {
<     #####:   97:      this->free_list_ = this->free_list_->get_next ();
<     #####:   98:      this->size_--;
<         -:   99:    }
<         -:  100:
<     #####:  101:  return temp;
<         -:  102:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexE6removeEv:
<     #####:   84:ACE_Locked_Free_List<T, ACE_LOCK>::remove (void)
<         -:   85:{
<     #####:   86:  ACE_MT (ACE_GUARD_RETURN (ACE_LOCK, ace_mon, this->mutex_, 0));
<         -:   87:
<         -:   88:  // If we are at the low water mark, add some nodes
<     #####:   89:  if (this->mode_ != ACE_PURE_FREE_LIST && this->size_ <= this->lwm_)
<     #####:   90:    this->alloc (this->inc_);
<         -:   91:
<         -:   92:  // Remove a node
<     #####:   93:  T *temp = this->free_list_;
<         -:   94:
<     #####:   95:  if (temp != 0)
<         -:   96:    {
<     #####:   97:      this->free_list_ = this->free_list_->get_next ();
<     #####:   98:      this->size_--;
<         -:   99:    }
<         -:  100:
<     #####:  101:  return temp;
<         -:  102:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexE6removeEv:
<     #####:   84:ACE_Locked_Free_List<T, ACE_LOCK>::remove (void)
<         -:   85:{
<     #####:   86:  ACE_MT (ACE_GUARD_RETURN (ACE_LOCK, ace_mon, this->mutex_, 0));
<         -:   87:
<         -:   88:  // If we are at the low water mark, add some nodes
<     #####:   89:  if (this->mode_ != ACE_PURE_FREE_LIST && this->size_ <= this->lwm_)
<     #####:   90:    this->alloc (this->inc_);
<         -:   91:
<         -:   92:  // Remove a node
<     #####:   93:  T *temp = this->free_list_;
<         -:   94:
<     #####:   95:  if (temp != 0)
<         -:   96:    {
<     #####:   97:      this->free_list_ = this->free_list_->get_next ();
<     #####:   98:      this->size_--;
<         -:   99:    }
<         -:  100:
<     #####:  101:  return temp;
<         -:  102:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexE6removeEv:
<     #####:   84:ACE_Locked_Free_List<T, ACE_LOCK>::remove (void)
<         -:   85:{
<     #####:   86:  ACE_MT (ACE_GUARD_RETURN (ACE_LOCK, ace_mon, this->mutex_, 0));
<         -:   87:
<         -:   88:  // If we are at the low water mark, add some nodes
<     #####:   89:  if (this->mode_ != ACE_PURE_FREE_LIST && this->size_ <= this->lwm_)
<     #####:   90:    this->alloc (this->inc_);
<         -:   91:
<         -:   92:  // Remove a node
<     #####:   93:  T *temp = this->free_list_;
<         -:   94:
<     #####:   95:  if (temp != 0)
<         -:   96:    {
<     #####:   97:      this->free_list_ = this->free_list_->get_next ();
<     #####:   98:      this->size_--;
<         -:   99:    }
<         -:  100:
<     #####:  101:  return temp;
<         -:  102:}
< ------------------
735,777d113
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexE4sizeEv:
<     #####:  108:ACE_Locked_Free_List<T, ACE_LOCK>::size (void)
<         -:  109:{
<     #####:  110:  return this->size_;
<         -:  111:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexE4sizeEv:
<     #####:  108:ACE_Locked_Free_List<T, ACE_LOCK>::size (void)
<         -:  109:{
<     #####:  110:  return this->size_;
<         -:  111:}
< ------------------
< _ZN20ACE_Locked_Free_ListI16ACE_Timer_Node_TIP17ACE_Event_HandlerE14ACE_Null_MutexE4sizeEv:
<     #####:  108:ACE_Locked_Free_List<T, ACE_LOCK>::size (void)
<         -:  109:{
<     #####:  110:  return this->size_;
<         -:  111:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexE4sizeEv:
<     #####:  108:ACE_Locked_Free_List<T, ACE_LOCK>::size (void)
<         -:  109:{
<     #####:  110:  return this->size_;
<         -:  111:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexE4sizeEv:
<     #####:  108:ACE_Locked_Free_List<T, ACE_LOCK>::size (void)
<         -:  109:{
<     #####:  110:  return this->size_;
<         -:  111:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexE4sizeEv:
<     #####:  108:ACE_Locked_Free_List<T, ACE_LOCK>::size (void)
<         -:  109:{
<     #####:  110:  return this->size_;
<         -:  111:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexE4sizeEv:
<     #####:  108:ACE_Locked_Free_List<T, ACE_LOCK>::size (void)
<         -:  109:{
<     #####:  110:  return this->size_;
<         -:  111:}
< ------------------
800,940d135
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexE6resizeEm:
<     #####:  116:ACE_Locked_Free_List<T, ACE_LOCK>::resize (size_t newsize)
<         -:  117:{
<     #####:  118:  ACE_MT (ACE_GUARD (ACE_LOCK, ace_mon, this->mutex_));
<         -:  119:
<         -:  120:  // Check if we are allowed to resize
<     #####:  121:  if (this->mode_ != ACE_PURE_FREE_LIST)
<         -:  122:    {
<         -:  123:      // Check to see if we grow or shrink
<     #####:  124:      if (newsize < this->size_)
<         -:  125:        {
<     #####:  126:          this->dealloc (this->size_ - newsize);
<         -:  127:        }
<         -:  128:      else
<         -:  129:        {
<     #####:  130:          this->alloc (newsize - this->size_);
<         -:  131:        }
<         -:  132:    }
<         -:  133:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexE6resizeEm:
<     #####:  116:ACE_Locked_Free_List<T, ACE_LOCK>::resize (size_t newsize)
<         -:  117:{
<     #####:  118:  ACE_MT (ACE_GUARD (ACE_LOCK, ace_mon, this->mutex_));
<         -:  119:
<         -:  120:  // Check if we are allowed to resize
<     #####:  121:  if (this->mode_ != ACE_PURE_FREE_LIST)
<         -:  122:    {
<         -:  123:      // Check to see if we grow or shrink
<     #####:  124:      if (newsize < this->size_)
<         -:  125:        {
<     #####:  126:          this->dealloc (this->size_ - newsize);
<         -:  127:        }
<         -:  128:      else
<         -:  129:        {
<     #####:  130:          this->alloc (newsize - this->size_);
<         -:  131:        }
<         -:  132:    }
<         -:  133:}
< ------------------
< _ZN20ACE_Locked_Free_ListI16ACE_Timer_Node_TIP17ACE_Event_HandlerE14ACE_Null_MutexE6resizeEm:
<     #####:  116:ACE_Locked_Free_List<T, ACE_LOCK>::resize (size_t newsize)
<         -:  117:{
<     #####:  118:  ACE_MT (ACE_GUARD (ACE_LOCK, ace_mon, this->mutex_));
<         -:  119:
<         -:  120:  // Check if we are allowed to resize
<     #####:  121:  if (this->mode_ != ACE_PURE_FREE_LIST)
<         -:  122:    {
<         -:  123:      // Check to see if we grow or shrink
<     #####:  124:      if (newsize < this->size_)
<         -:  125:        {
<     #####:  126:          this->dealloc (this->size_ - newsize);
<         -:  127:        }
<         -:  128:      else
<         -:  129:        {
<     #####:  130:          this->alloc (newsize - this->size_);
<         -:  131:        }
<         -:  132:    }
<         -:  133:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexE6resizeEm:
<     #####:  116:ACE_Locked_Free_List<T, ACE_LOCK>::resize (size_t newsize)
<         -:  117:{
<     #####:  118:  ACE_MT (ACE_GUARD (ACE_LOCK, ace_mon, this->mutex_));
<         -:  119:
<         -:  120:  // Check if we are allowed to resize
<     #####:  121:  if (this->mode_ != ACE_PURE_FREE_LIST)
<         -:  122:    {
<         -:  123:      // Check to see if we grow or shrink
<     #####:  124:      if (newsize < this->size_)
<         -:  125:        {
<     #####:  126:          this->dealloc (this->size_ - newsize);
<         -:  127:        }
<         -:  128:      else
<         -:  129:        {
<     #####:  130:          this->alloc (newsize - this->size_);
<         -:  131:        }
<         -:  132:    }
<         -:  133:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexE6resizeEm:
<     #####:  116:ACE_Locked_Free_List<T, ACE_LOCK>::resize (size_t newsize)
<         -:  117:{
<     #####:  118:  ACE_MT (ACE_GUARD (ACE_LOCK, ace_mon, this->mutex_));
<         -:  119:
<         -:  120:  // Check if we are allowed to resize
<     #####:  121:  if (this->mode_ != ACE_PURE_FREE_LIST)
<         -:  122:    {
<         -:  123:      // Check to see if we grow or shrink
<     #####:  124:      if (newsize < this->size_)
<         -:  125:        {
<     #####:  126:          this->dealloc (this->size_ - newsize);
<         -:  127:        }
<         -:  128:      else
<         -:  129:        {
<     #####:  130:          this->alloc (newsize - this->size_);
<         -:  131:        }
<         -:  132:    }
<         -:  133:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexE6resizeEm:
<     #####:  116:ACE_Locked_Free_List<T, ACE_LOCK>::resize (size_t newsize)
<         -:  117:{
<     #####:  118:  ACE_MT (ACE_GUARD (ACE_LOCK, ace_mon, this->mutex_));
<         -:  119:
<         -:  120:  // Check if we are allowed to resize
<     #####:  121:  if (this->mode_ != ACE_PURE_FREE_LIST)
<         -:  122:    {
<         -:  123:      // Check to see if we grow or shrink
<     #####:  124:      if (newsize < this->size_)
<         -:  125:        {
<     #####:  126:          this->dealloc (this->size_ - newsize);
<         -:  127:        }
<         -:  128:      else
<         -:  129:        {
<     #####:  130:          this->alloc (newsize - this->size_);
<         -:  131:        }
<         -:  132:    }
<         -:  133:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexE6resizeEm:
<     #####:  116:ACE_Locked_Free_List<T, ACE_LOCK>::resize (size_t newsize)
<         -:  117:{
<     #####:  118:  ACE_MT (ACE_GUARD (ACE_LOCK, ace_mon, this->mutex_));
<         -:  119:
<         -:  120:  // Check if we are allowed to resize
<     #####:  121:  if (this->mode_ != ACE_PURE_FREE_LIST)
<         -:  122:    {
<         -:  123:      // Check to see if we grow or shrink
<     #####:  124:      if (newsize < this->size_)
<         -:  125:        {
<     #####:  126:          this->dealloc (this->size_ - newsize);
<         -:  127:        }
<         -:  128:      else
<         -:  129:        {
<     #####:  130:          this->alloc (newsize - this->size_);
<         -:  131:        }
<         -:  132:    }
<         -:  133:}
< ------------------
956,1047d150
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexE5allocEm:
<     #####:  138:ACE_Locked_Free_List<T, ACE_LOCK>::alloc (size_t n)
<         -:  139:{
<     #####:  140:  for (; n > 0; n--)
<         -:  141:    {
<     #####:  142:      T *temp = 0;
<     #####:  143:      ACE_NEW (temp, T);
<     #####:  144:      temp->set_next (this->free_list_);
<     #####:  145:      this->free_list_ = temp;
<     #####:  146:      this->size_++;
<         -:  147:    }
<         -:  148:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexE5allocEm:
<     #####:  138:ACE_Locked_Free_List<T, ACE_LOCK>::alloc (size_t n)
<         -:  139:{
<     #####:  140:  for (; n > 0; n--)
<         -:  141:    {
<     #####:  142:      T *temp = 0;
<     #####:  143:      ACE_NEW (temp, T);
<     #####:  144:      temp->set_next (this->free_list_);
<     #####:  145:      this->free_list_ = temp;
<     #####:  146:      this->size_++;
<         -:  147:    }
<         -:  148:}
< ------------------
< _ZN20ACE_Locked_Free_ListI16ACE_Timer_Node_TIP17ACE_Event_HandlerE14ACE_Null_MutexE5allocEm:
<     #####:  138:ACE_Locked_Free_List<T, ACE_LOCK>::alloc (size_t n)
<         -:  139:{
<     #####:  140:  for (; n > 0; n--)
<         -:  141:    {
<     #####:  142:      T *temp = 0;
<     #####:  143:      ACE_NEW (temp, T);
<     #####:  144:      temp->set_next (this->free_list_);
<     #####:  145:      this->free_list_ = temp;
<     #####:  146:      this->size_++;
<         -:  147:    }
<         -:  148:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexE5allocEm:
<     #####:  138:ACE_Locked_Free_List<T, ACE_LOCK>::alloc (size_t n)
<         -:  139:{
<     #####:  140:  for (; n > 0; n--)
<         -:  141:    {
<     #####:  142:      T *temp = 0;
<     #####:  143:      ACE_NEW (temp, T);
<     #####:  144:      temp->set_next (this->free_list_);
<     #####:  145:      this->free_list_ = temp;
<     #####:  146:      this->size_++;
<         -:  147:    }
<         -:  148:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexE5allocEm:
<     #####:  138:ACE_Locked_Free_List<T, ACE_LOCK>::alloc (size_t n)
<         -:  139:{
<     #####:  140:  for (; n > 0; n--)
<         -:  141:    {
<     #####:  142:      T *temp = 0;
<     #####:  143:      ACE_NEW (temp, T);
<     #####:  144:      temp->set_next (this->free_list_);
<     #####:  145:      this->free_list_ = temp;
<     #####:  146:      this->size_++;
<         -:  147:    }
<         -:  148:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexE5allocEm:
<     #####:  138:ACE_Locked_Free_List<T, ACE_LOCK>::alloc (size_t n)
<         -:  139:{
<     #####:  140:  for (; n > 0; n--)
<         -:  141:    {
<     #####:  142:      T *temp = 0;
<     #####:  143:      ACE_NEW (temp, T);
<     #####:  144:      temp->set_next (this->free_list_);
<     #####:  145:      this->free_list_ = temp;
<     #####:  146:      this->size_++;
<         -:  147:    }
<         -:  148:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexE5allocEm:
<     #####:  138:ACE_Locked_Free_List<T, ACE_LOCK>::alloc (size_t n)
<         -:  139:{
<     #####:  140:  for (; n > 0; n--)
<         -:  141:    {
<     #####:  142:      T *temp = 0;
<     #####:  143:      ACE_NEW (temp, T);
<     #####:  144:      temp->set_next (this->free_list_);
<     #####:  145:      this->free_list_ = temp;
<     #####:  146:      this->size_++;
<         -:  147:    }
<         -:  148:}
< ------------------
1063,1154d165
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexE7deallocEm:
<     #####:  153:ACE_Locked_Free_List<T, ACE_LOCK>::dealloc (size_t n)
<         -:  154:{
<     #####:  155:  for (; this->free_list_ != 0 && n > 0;
<         -:  156:       n--)
<         -:  157:    {
<     #####:  158:      T *temp = this->free_list_;
<     #####:  159:      this->free_list_ = this->free_list_->get_next ();
<     #####:  160:      delete temp;
<     #####:  161:      this->size_--;
<         -:  162:    }
<     #####:  163:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexE7deallocEm:
<     #####:  153:ACE_Locked_Free_List<T, ACE_LOCK>::dealloc (size_t n)
<         -:  154:{
<     #####:  155:  for (; this->free_list_ != 0 && n > 0;
<         -:  156:       n--)
<         -:  157:    {
<     #####:  158:      T *temp = this->free_list_;
<     #####:  159:      this->free_list_ = this->free_list_->get_next ();
<     #####:  160:      delete temp;
<     #####:  161:      this->size_--;
<         -:  162:    }
<     #####:  163:}
< ------------------
< _ZN20ACE_Locked_Free_ListI16ACE_Timer_Node_TIP17ACE_Event_HandlerE14ACE_Null_MutexE7deallocEm:
<     #####:  153:ACE_Locked_Free_List<T, ACE_LOCK>::dealloc (size_t n)
<         -:  154:{
<     #####:  155:  for (; this->free_list_ != 0 && n > 0;
<         -:  156:       n--)
<         -:  157:    {
<     #####:  158:      T *temp = this->free_list_;
<     #####:  159:      this->free_list_ = this->free_list_->get_next ();
<     #####:  160:      delete temp;
<     #####:  161:      this->size_--;
<         -:  162:    }
<     #####:  163:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexE7deallocEm:
<     #####:  153:ACE_Locked_Free_List<T, ACE_LOCK>::dealloc (size_t n)
<         -:  154:{
<     #####:  155:  for (; this->free_list_ != 0 && n > 0;
<         -:  156:       n--)
<         -:  157:    {
<     #####:  158:      T *temp = this->free_list_;
<     #####:  159:      this->free_list_ = this->free_list_->get_next ();
<     #####:  160:      delete temp;
<     #####:  161:      this->size_--;
<         -:  162:    }
<     #####:  163:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexE7deallocEm:
<     #####:  153:ACE_Locked_Free_List<T, ACE_LOCK>::dealloc (size_t n)
<         -:  154:{
<     #####:  155:  for (; this->free_list_ != 0 && n > 0;
<         -:  156:       n--)
<         -:  157:    {
<     #####:  158:      T *temp = this->free_list_;
<     #####:  159:      this->free_list_ = this->free_list_->get_next ();
<     #####:  160:      delete temp;
<     #####:  161:      this->size_--;
<         -:  162:    }
<     #####:  163:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI17ACE_Message_BlockE16ACE_Thread_MutexE7deallocEm:
<     #####:  153:ACE_Locked_Free_List<T, ACE_LOCK>::dealloc (size_t n)
<         -:  154:{
<     #####:  155:  for (; this->free_list_ != 0 && n > 0;
<         -:  156:       n--)
<         -:  157:    {
<     #####:  158:      T *temp = this->free_list_;
<     #####:  159:      this->free_list_ = this->free_list_->get_next ();
<     #####:  160:      delete temp;
<     #####:  161:      this->size_--;
<         -:  162:    }
<     #####:  163:}
< ------------------
< _ZN20ACE_Locked_Free_ListI24ACE_Cached_Mem_Pool_NodeI14ACE_Data_BlockE16ACE_Thread_MutexE7deallocEm:
<     #####:  153:ACE_Locked_Free_List<T, ACE_LOCK>::dealloc (size_t n)
<         -:  154:{
<     #####:  155:  for (; this->free_list_ != 0 && n > 0;
<         -:  156:       n--)
<         -:  157:    {
<     #####:  158:      T *temp = this->free_list_;
<     #####:  159:      this->free_list_ = this->free_list_->get_next ();
<     #####:  160:      delete temp;
<     #####:  161:      this->size_--;
<         -:  162:    }
<     #####:  163:}
< ------------------
