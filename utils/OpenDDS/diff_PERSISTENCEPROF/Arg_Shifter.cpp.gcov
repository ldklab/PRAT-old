2c2
<         -:    0:Programs:70
---
>         -:    0:Programs:69
66c66
<        82:   64:      for (int i = 0; i < this->total_size_; i++)
---
>        92:   64:      for (int i = 0; i < this->total_size_; i++)
68,69c68,69
<        66:   66:          this->temp_[i] = this->argv_[i];
<        66:   67:          this->argv_[i] = 0;
---
>        76:   66:          this->temp_[i] = this->argv_[i];
>        76:   67:          this->argv_[i] = 0;
106c106
<       563:  104:ACE_Arg_Shifter_T<CHAR_TYPE>::get_the_parameter (const CHAR_TYPE *flag)
---
>       632:  104:ACE_Arg_Shifter_T<CHAR_TYPE>::get_the_parameter (const CHAR_TYPE *flag)
112c112
<       563:  110:  if (!this->is_anything_left())
---
>       632:  110:  if (!this->is_anything_left())
116,118c116,118
<       563:  114:  int const offset = this->cur_arg_strncasecmp (flag);
<       563:  115:  if (offset == -1)
<       556:  116:    return 0;
---
>       632:  114:  int const offset = this->cur_arg_strncasecmp (flag);
>       632:  115:  if (offset == -1)
>       624:  116:    return 0;
120c120
<         7:  118:  if (offset == 0)
---
>         8:  118:  if (offset == 0)
122c122
<         7:  120:      this->consume_arg ();
---
>         8:  120:      this->consume_arg ();
124c124
<         7:  122:      if (!this->is_parameter_next())
---
>         8:  122:      if (!this->is_parameter_next())
130c130
<         7:  128:  return this->temp_[current_index_] + offset;
---
>         8:  128:  return this->temp_[current_index_] + offset;
135c135
<       662:  133:ACE_Arg_Shifter_T<CHAR_TYPE>::cur_arg_strncasecmp (const CHAR_TYPE *flag)
---
>       746:  133:ACE_Arg_Shifter_T<CHAR_TYPE>::cur_arg_strncasecmp (const CHAR_TYPE *flag)
138c138
<       662:  136:  if (this->is_anything_left())
---
>       746:  136:  if (this->is_anything_left())
140c140
<       662:  138:      size_t const flag_length = ACE_OS::strlen (flag);
---
>       746:  138:      size_t const flag_length = ACE_OS::strlen (flag);
143c143
<      1324:  141:      if (ACE_OS::strncasecmp(this->temp_[current_index_],
---
>      1492:  141:      if (ACE_OS::strncasecmp(this->temp_[current_index_],
145c145
<       662:  143:                              flag_length) == 0)
---
>       746:  143:                              flag_length) == 0)
147c147
<         7:  145:          if (ACE_OS::strlen(temp_[current_index_]) == flag_length)
---
>         8:  145:          if (ACE_OS::strlen(temp_[current_index_]) == flag_length)
150c150
<         7:  148:              return 0;
---
>         8:  148:              return 0;
163c163
<       655:  161:  return -1;
---
>       738:  161:  return -1;
168c168
<        14:  166:ACE_Arg_Shifter_T<CHAR_TYPE>::consume_arg (int number)
---
>        16:  166:ACE_Arg_Shifter_T<CHAR_TYPE>::consume_arg (int number)
170c170
<        14:  168:  int retval = 0;
---
>        16:  168:  int retval = 0;
173c173
<        14:  171:  if (this->is_anything_left() >= number)
---
>        16:  171:  if (this->is_anything_left() >= number)
175,178c175,178
<        42:  173:      for (int i = 0, j = this->back_ - (number - 1);
<        28:  174:           i < number;
<        14:  175:           ++i, ++j, ++this->current_index_)
<        14:  176:        this->argv_[j] = this->temp_[this->current_index_];
---
>        48:  173:      for (int i = 0, j = this->back_ - (number - 1);
>        32:  174:           i < number;
>        16:  175:           ++i, ++j, ++this->current_index_)
>        16:  176:        this->argv_[j] = this->temp_[this->current_index_];
180,181c180,181
<        14:  178:      this->back_ -= number;
<        14:  179:      retval = 1;
---
>        16:  178:      this->back_ -= number;
>        16:  179:      retval = 1;
184c184
<        14:  182:  return retval;
---
>        16:  182:  return retval;
189c189
<        52:  187:ACE_Arg_Shifter_T<CHAR_TYPE>::ignore_arg (int number)
---
>        60:  187:ACE_Arg_Shifter_T<CHAR_TYPE>::ignore_arg (int number)
191c191
<        52:  189:  int retval = 0;
---
>        60:  189:  int retval = 0;
194c194
<        52:  192:  if (this->is_anything_left () >= number)
---
>        60:  192:  if (this->is_anything_left () >= number)
196,199c196,199
<       208:  194:      for (int i = 0;
<       104:  195:           i < number;
<       104:  196:           i++, this->current_index_++, this->front_++)
<        52:  197:        this->argv_[this->front_] = this->temp_[this->current_index_];
---
>       240:  194:      for (int i = 0;
>       120:  195:           i < number;
>       120:  196:           i++, this->current_index_++, this->front_++)
>        60:  197:        this->argv_[this->front_] = this->temp_[this->current_index_];
201,202c201,202
<        52:  199:      retval = 1;
<        52:  200:      this->argc_ += number;
---
>        60:  199:      retval = 1;
>        60:  200:      this->argc_ += number;
205c205
<        52:  203:  return retval;
---
>        60:  203:  return retval;
210c210
<      1373:  208:ACE_Arg_Shifter_T<CHAR_TYPE>::is_anything_left (void) const
---
>      1546:  208:ACE_Arg_Shifter_T<CHAR_TYPE>::is_anything_left (void) const
212c212
<      1373:  210:  return this->total_size_ - this->current_index_;
---
>      1546:  210:  return this->total_size_ - this->current_index_;
225c225
<         7:  223:ACE_Arg_Shifter_T<CHAR_TYPE>::is_parameter_next (void) const
---
>         8:  223:ACE_Arg_Shifter_T<CHAR_TYPE>::is_parameter_next (void) const
228c228
<         7:  226:    && this->temp_[this->current_index_][0] != '-';
---
>         8:  226:    && this->temp_[this->current_index_][0] != '-';
