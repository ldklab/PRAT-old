2c2
<         -:    0:Programs:51
---
>         -:    0:Programs:3
142c142
<     #####:  140:  generic_sequence(generic_sequence const & rhs)
---
>         -:  140:  generic_sequence(generic_sequence const & rhs)
146c146
<     #####:  144:    , release_(false)
---
>         -:  144:    , release_(false)
148c148
<     #####:  146:    if (rhs.maximum_ == 0 || rhs.buffer_ == 0)
---
>         -:  146:    if (rhs.maximum_ == 0 || rhs.buffer_ == 0)
150,152c150,152
<     #####:  148:      maximum_ = rhs.maximum_;
<     #####:  149:      length_ = rhs.length_;
<     #####:  150:      return;
---
>         -:  148:      maximum_ = rhs.maximum_;
>         -:  149:      length_ = rhs.length_;
>         -:  150:      return;
154,155c154,155
<     #####:  152:    generic_sequence tmp(rhs.maximum_, rhs.length_,
<     #####:  153:                         allocation_traits::allocbuf_noinit(rhs.maximum_),
---
>         -:  152:    generic_sequence tmp(rhs.maximum_, rhs.length_,
>         -:  153:                         allocation_traits::allocbuf_noinit(rhs.maximum_),
157,159c157,159
<     #####:  155:    element_traits::initialize_range(
<     #####:  156:        tmp.buffer_ + tmp.length_, tmp.buffer_ + tmp.maximum_);
<     #####:  157:    element_traits::copy_range(
---
>         -:  155:    element_traits::initialize_range(
>         -:  156:        tmp.buffer_ + tmp.length_, tmp.buffer_ + tmp.maximum_);
>         -:  157:    element_traits::copy_range(
161,163c161,163
<     #####:  159:        rhs.buffer_ + rhs.length_,
<     #####:  160:        ACE_make_checked_array_iterator (tmp.buffer_, tmp.length_));
<     #####:  161:    swap(tmp);
---
>         -:  159:        rhs.buffer_ + rhs.length_,
>         -:  160:        ACE_make_checked_array_iterator (tmp.buffer_, tmp.length_));
>         -:  161:    swap(tmp);
167c167
<     #####:  165:  generic_sequence & operator=(generic_sequence const & rhs)
---
>         -:  165:  generic_sequence & operator=(generic_sequence const & rhs)
169,171c169,171
<     #####:  167:    generic_sequence tmp(rhs);
<     #####:  168:    swap(tmp);
<     #####:  169:    return * this;
---
>         -:  167:    generic_sequence tmp(rhs);
>         -:  168:    swap(tmp);
>         -:  169:    return * this;
196c196
<     #####:  194:  inline CORBA::ULong length() const
---
>         -:  194:  inline CORBA::ULong length() const
198c198
<     #####:  196:    return length_;
---
>         -:  196:    return length_;
252c252
<     #####:  250:  value_type const & operator[](CORBA::ULong i) const
---
>         -:  250:  value_type const & operator[](CORBA::ULong i) const
254,255c254,255
<     #####:  252:    range::check(i, length_, maximum_, "operator[]() const");
<     #####:  253:    return buffer_[i];
---
>         -:  252:    range::check(i, length_, maximum_, "operator[]() const");
>         -:  253:    return buffer_[i];
