        -:    0:Source:/home/ryan/git/OpenDDS-debloat/ACE_wrappers/TAO/tao/Value_Traits_T.h
        -:    0:Programs:72
        -:    1:#ifndef guard_value_traits_hpp
        -:    2:#define guard_value_traits_hpp
        -:    3:/**
        -:    4: * @file
        -:    5: *
        -:    6: * @brief Implement the element manipulation traits for types with
        -:    7: * value-like semantics.
        -:    8: *
        -:    9: * $Id: Value_Traits_T.h 1861 2011-08-31 16:18:08Z mesnierp $
        -:   10: *
        -:   11: * @author Carlos O'Ryan
        -:   12: */
        -:   13:
        -:   14:#include /**/ "tao/Versioned_Namespace.h"
        -:   15:
        -:   16:#include <algorithm>
        -:   17:
        -:   18:TAO_BEGIN_VERSIONED_NAMESPACE_DECL
        -:   19:
        -:   20:namespace TAO
        -:   21:{
        -:   22:namespace details
        -:   23:{
        -:   24:
        -:   25:template<typename T, bool dummy>
        -:   26:struct value_traits
        -:   27:{
        -:   28:  typedef T value_type;
        -:   29:  typedef T const const_value_type;
        -:   30:
        -:   31:  inline static void zero_range(
        -:   32:      value_type * begin , value_type * end)
        -:   33:  {
        -:   34:    std::fill(begin, end, value_type ());
        -:   35:  }
        -:   36:
      342:   37:  inline static void initialize_range(
        -:   38:      value_type * begin, value_type * end)
        -:   39:  {
      342:   40:    std::fill(begin, end, value_type ());
      342:   41:  }
        -:   42:
        6:   43:  inline static void release_range(
        -:   44:      value_type *, value_type *)
        -:   45:  {
        -:   46:    // Noop for value sequences
        6:   47:  }
        -:   48:
        -:   49:  // Allow MSVC++ >= 8 checked iterators to be used.
        -:   50:  template <typename iter>
      336:   51:  inline static void copy_range(
        -:   52:      value_type * begin, value_type * end, iter dst)
        -:   53:  {
      336:   54:    std::copy(begin, end, dst);
      336:   55:  }
        -:   56:
        -:   57:  // Allow MSVC++ >= 8 checked iterators to be used.
        -:   58:  template <typename iter>
       60:   59:  inline static void copy_swap_range(
        -:   60:      value_type * begin, value_type * end, iter dst)
        -:   61:  {
       60:   62:    copy_range(begin, end, dst);
       60:   63:  }
        -:   64:};
        -:   65:
        -:   66:} // namespace details
        -:   67:} // namespace CORBA
        -:   68:
        -:   69:TAO_END_VERSIONED_NAMESPACE_DECL
        -:   70:
        -:   71:#endif // guard_value_traits_hpp
