        -:    0:Source:/home/ryan/git/OpenDDS-debloat/ACE_wrappers/ace/Unbounded_Set.h
        -:    0:Programs:51
        -:    1:// -*- C++ -*-
        -:    2:
        -:    3://=============================================================================
        -:    4:/**
        -:    5: *  @file Unbounded_Set.h
        -:    6: *
        -:    7: *  $Id: Unbounded_Set.h 1861 2011-08-31 16:18:08Z mesnierp $
        -:    8: *
        -:    9: *  @author Douglas C. Schmidt <schmidt@cs.wustl.edu>
        -:   10: */
        -:   11://=============================================================================
        -:   12:
        -:   13:#ifndef ACE_UNBOUNDED_SET_H
        -:   14:#define ACE_UNBOUNDED_SET_H
        -:   15:#include /**/ "ace/pre.h"
        -:   16:
        -:   17:#include "ace/Unbounded_Set_Ex.h"
        -:   18:
        -:   19:#if !defined (ACE_LACKS_PRAGMA_ONCE)
        -:   20:# pragma once
        -:   21:#endif /* ACE_LACKS_PRAGMA_ONCE */
        -:   22:
        -:   23:ACE_BEGIN_VERSIONED_NAMESPACE_DECL
        -:   24:
        -:   25:class ACE_Allocator;
        -:   26:
        -:   27:/**
        -:   28: * @struct ACE_Unbounded_Set_Default_Comparator
        -:   29: * @brief Simple comparator that evaluates equality using == operator.
        -:   30: */
        -:   31:template<typename T>
        -:   32:struct ACE_Unbounded_Set_Default_Comparator
        -:   33:{
        -:   34:  bool operator() (const T&lhs, const T&rhs) const;
        -:   35:};
        -:   36:
        -:   37:template<typename T>
        -:   38:class ACE_Unbounded_Set;
        -:   39:
        -:   40:/**
        -:   41: * @class ACE_Unbounded_Set_Iterator
        -:   42: * @brief Compatibility wrapper for ACE_Unbounded_Set_Ex_Iterator.
        -:   43: */
        -:   44:template <typename T>
        -:   45:class ACE_Unbounded_Set_Iterator : public
        -:   46:  ACE_Unbounded_Set_Ex_Iterator<T, ACE_Unbounded_Set_Default_Comparator<T> >
        -:   47:{
        -:   48:public:
        -:   49:  typedef ACE_Unbounded_Set_Ex_Iterator<T, ACE_Unbounded_Set_Default_Comparator<T> > base_type;
        -:   50:
        -:   51:  // = Initialization method.
        -:   52:  ACE_Unbounded_Set_Iterator (ACE_Unbounded_Set<T> &s, bool end = false);
        -:   53:
        -:   54:  ACE_Unbounded_Set_Iterator (const base_type &s);
        -:   55:};
        -:   56:
        -:   57:/**
        -:   58: * @class ACE_Unbounded_Set_Const_Iterator
        -:   59: * @brief Compatibility wrapper for ACE_Unbounded_Set_Ex_Const_Iterator.
        -:   60: */
        -:   61:template <class T>
        -:   62:class ACE_Unbounded_Set_Const_Iterator : public
        -:   63:  ACE_Unbounded_Set_Ex_Const_Iterator<T, ACE_Unbounded_Set_Default_Comparator<T> >
        -:   64:{
        -:   65:public:
        -:   66:
        -:   67:  typedef ACE_Unbounded_Set_Ex_Const_Iterator<T, ACE_Unbounded_Set_Default_Comparator<T> > base_type;
        -:   68:
        -:   69:  // = Initialization method.
        -:   70:  ACE_Unbounded_Set_Const_Iterator (const ACE_Unbounded_Set<T> &s,
        -:   71:                                    bool end = false);
        -:   72:
        -:   73:  ACE_Unbounded_Set_Const_Iterator (const base_type &s);
        -:   74:};
        -:   75:
        -:   76:/**
        -:   77: * @class ACE_Unbounded_Set
        -:   78: * @brief Compatibility wrapper for ACE_Unbounded_Set_Ex.
        -:   79: */
        -:   80:template<typename T>
    #####:   81:class ACE_Unbounded_Set : public
        -:   82:  ACE_Unbounded_Set_Ex<T, ACE_Unbounded_Set_Default_Comparator<T> >
        -:   83:{
        -:   84:public:
        -:   85:  ACE_Unbounded_Set (ACE_Allocator *alloc = 0);
        -:   86:};
        -:   87:
        -:   88:ACE_END_VERSIONED_NAMESPACE_DECL
        -:   89:
        -:   90:#if defined (__ACE_INLINE__)
        -:   91:#include "ace/Unbounded_Set.inl"
        -:   92:#endif /* __ACE_INLINE__ */
        -:   93:
        -:   94:#if defined (ACE_TEMPLATES_REQUIRE_SOURCE)
        -:   95:#include "ace/Unbounded_Set.cpp"
        -:   96:#endif /* ACE_TEMPLATES_REQUIRE_SOURCE */
        -:   97:
        -:   98:#if defined (ACE_TEMPLATES_REQUIRE_PRAGMA)
        -:   99:#pragma implementation ("Unbounded_Set.cpp")
        -:  100:#endif /* ACE_TEMPLATES_REQUIRE_PRAGMA */
        -:  101:
        -:  102:#include /**/ "ace/post.h"
        -:  103:#endif /* ACE_UNBOUNDED_SET_H */
