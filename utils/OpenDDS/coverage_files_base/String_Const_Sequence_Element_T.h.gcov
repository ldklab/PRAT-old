        -:    0:Source:/home/ryan/git/TARGETS/OpenDDS-debloat/ACE_wrappers/TAO/tao/String_Const_Sequence_Element_T.h
        -:    0:Programs:70
        -:    1:#ifndef guard_string_const_sequence_element_hpp
        -:    2:#define guard_string_const_sequence_element_hpp
        -:    3:/**
        -:    4: * @file
        -:    5: *
        -:    6: * @brief Implement the type returned by const operator[] in string
        -:    7: * sequences.
        -:    8: *
        -:    9: * $Id$
        -:   10: *
        -:   11: * @author Carlos O'Ryan and Johnny Willemsen
        -:   12: */
        -:   13:
        -:   14:#include "tao/Basic_Types.h"
        -:   15:
        -:   16:TAO_BEGIN_VERSIONED_NAMESPACE_DECL
        -:   17:
        -:   18:namespace TAO
        -:   19:{
        -:   20:namespace details
        -:   21:{
        -:   22:
        -:   23:template<typename traits>
        -:   24:class string_const_sequence_element
        -:   25:{
        -:   26:public:
        -:   27:  typedef typename traits::char_type character_type;
        -:   28:  typedef character_type * value_type;
        -:   29:  typedef character_type const * const_value_type;
        -:   30:  typedef typename traits::string_var string_var;
        -:   31:  typedef typename traits::string_mgr string_mgr;
        -:   32:
        -:   33:public:
    #####:   34:  string_const_sequence_element(value_type const & e, CORBA::Boolean release)
        -:   35:    : element_(&e)
    #####:   36:    , release_(release)
        -:   37:  {
    #####:   38:  }
------------------
_ZN3TAO7details29string_const_sequence_elementINS0_13string_traitsIcLb1EEEEC2ERKPcb:
    #####:   34:  string_const_sequence_element(value_type const & e, CORBA::Boolean release)
        -:   35:    : element_(&e)
    #####:   36:    , release_(release)
        -:   37:  {
    #####:   38:  }
------------------
_ZN3TAO7details29string_const_sequence_elementINS0_13string_traitsIcLb1EEEEC2ERKPcb:
    #####:   34:  string_const_sequence_element(value_type const & e, CORBA::Boolean release)
        -:   35:    : element_(&e)
    #####:   36:    , release_(release)
        -:   37:  {
    #####:   38:  }
------------------
_ZN3TAO7details29string_const_sequence_elementINS0_13string_traitsIcLb1EEEEC2ERKPcb:
    #####:   34:  string_const_sequence_element(value_type const & e, CORBA::Boolean release)
        -:   35:    : element_(&e)
    #####:   36:    , release_(release)
        -:   37:  {
    #####:   38:  }
------------------
_ZN3TAO7details29string_const_sequence_elementINS0_13string_traitsIcLb1EEEEC2ERKPcb:
    #####:   34:  string_const_sequence_element(value_type const & e, CORBA::Boolean release)
        -:   35:    : element_(&e)
    #####:   36:    , release_(release)
        -:   37:  {
    #####:   38:  }
------------------
_ZN3TAO7details29string_const_sequence_elementINS0_13string_traitsIcLb1EEEEC2ERKPcb:
    #####:   34:  string_const_sequence_element(value_type const & e, CORBA::Boolean release)
        -:   35:    : element_(&e)
    #####:   36:    , release_(release)
        -:   37:  {
    #####:   38:  }
------------------
_ZN3TAO7details29string_const_sequence_elementINS0_13string_traitsIcLb1EEEEC2ERKPcb:
    #####:   34:  string_const_sequence_element(value_type const & e, CORBA::Boolean release)
        -:   35:    : element_(&e)
    #####:   36:    , release_(release)
        -:   37:  {
    #####:   38:  }
------------------
_ZN3TAO7details29string_const_sequence_elementINS0_13string_traitsIcLb1EEEEC2ERKPcb:
    #####:   34:  string_const_sequence_element(value_type const & e, CORBA::Boolean release)
        -:   35:    : element_(&e)
    #####:   36:    , release_(release)
        -:   37:  {
    #####:   38:  }
------------------
        -:   39:
        -:   40:  string_const_sequence_element(
        -:   41:      string_const_sequence_element const & rhs)
        -:   42:    : element_(rhs.element_)
        -:   43:    , release_(rhs.release_)
        -:   44:  {
        -:   45:  }
        -:   46:
    #####:   47:  ~string_const_sequence_element()
        -:   48:  {
    #####:   49:  }
------------------
_ZN3TAO7details29string_const_sequence_elementINS0_13string_traitsIcLb1EEEED2Ev:
    #####:   47:  ~string_const_sequence_element()
        -:   48:  {
    #####:   49:  }
------------------
_ZN3TAO7details29string_const_sequence_elementINS0_13string_traitsIcLb1EEEED2Ev:
    #####:   47:  ~string_const_sequence_element()
        -:   48:  {
    #####:   49:  }
------------------
_ZN3TAO7details29string_const_sequence_elementINS0_13string_traitsIcLb1EEEED2Ev:
    #####:   47:  ~string_const_sequence_element()
        -:   48:  {
    #####:   49:  }
------------------
_ZN3TAO7details29string_const_sequence_elementINS0_13string_traitsIcLb1EEEED2Ev:
    #####:   47:  ~string_const_sequence_element()
        -:   48:  {
    #####:   49:  }
------------------
_ZN3TAO7details29string_const_sequence_elementINS0_13string_traitsIcLb1EEEED2Ev:
    #####:   47:  ~string_const_sequence_element()
        -:   48:  {
    #####:   49:  }
------------------
_ZN3TAO7details29string_const_sequence_elementINS0_13string_traitsIcLb1EEEED2Ev:
    #####:   47:  ~string_const_sequence_element()
        -:   48:  {
    #####:   49:  }
------------------
_ZN3TAO7details29string_const_sequence_elementINS0_13string_traitsIcLb1EEEED2Ev:
    #####:   47:  ~string_const_sequence_element()
        -:   48:  {
    #####:   49:  }
------------------
        -:   50:
    #####:   51:  inline operator const_value_type() const
        -:   52:  {
    #####:   53:    return *this->element_;
        -:   54:  }
        -:   55:
        -:   56:  inline const character_type *in (void) const
        -:   57:  {
        -:   58:    return *this->element_;
        -:   59:  }
        -:   60:
        -:   61:  CORBA::Boolean release() const
        -:   62:  {
        -:   63:    return this->release_;
        -:   64:  }
        -:   65:
        -:   66:private:
        -:   67:  // This function is not implemented
        -:   68:  string_const_sequence_element();
        -:   69:  string_const_sequence_element & operator=(string_const_sequence_element const & rhs);
        -:   70:
        -:   71:private:
        -:   72:  const_value_type const * element_;
        -:   73:  CORBA::Boolean const release_;
        -:   74:};
        -:   75:
        -:   76:} // namespace details
        -:   77:} // namespace CORBA
        -:   78:
        -:   79:TAO_END_VERSIONED_NAMESPACE_DECL
        -:   80:
        -:   81:#endif // guard_string_const_sequence_element_hpp
