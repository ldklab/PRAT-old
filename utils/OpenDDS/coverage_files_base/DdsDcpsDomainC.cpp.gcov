        -:    0:Source:DdsDcpsDomainC.cpp
        -:    0:Programs:72
        -:    1:// -*- C++ -*-
        -:    2:// $Id$
        -:    3:
        -:    4:/**
        -:    5: * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p15
        -:    6: * TAO and the TAO IDL Compiler have been developed by:
        -:    7: *       Center for Distributed Object Computing
        -:    8: *       Washington University
        -:    9: *       St. Louis, MO
        -:   10: *       USA
        -:   11: *       http://www.cs.wustl.edu/~schmidt/doc-center.html
        -:   12: * and
        -:   13: *       Distributed Object Computing Laboratory
        -:   14: *       University of California at Irvine
        -:   15: *       Irvine, CA
        -:   16: *       USA
        -:   17: * and
        -:   18: *       Institute for Software Integrated Systems
        -:   19: *       Vanderbilt University
        -:   20: *       Nashville, TN
        -:   21: *       USA
        -:   22: *       http://www.isis.vanderbilt.edu/
        -:   23: *
        -:   24: * Information about TAO is available at:
        -:   25: *     http://www.cs.wustl.edu/~schmidt/TAO.html
        -:   26: **/
        -:   27:
        -:   28:// TAO_IDL - Generated from
        -:   29:// be/be_codegen.cpp:376
        -:   30:
        -:   31:#include "DCPS/DdsDcps_pch.h"
        -:   32:#include "DdsDcpsDomainC.h"
        -:   33:#include "tao/CDR.h"
        -:   34:#include "ace/OS_NS_string.h"
        -:   35:
        -:   36:#if !defined (__ACE_INLINE__)
        -:   37:#include "DdsDcpsDomainC.inl"
        -:   38:#endif /* !defined INLINE */
        -:   39:
        -:   40:OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
        -:   41:
        -:   42:
        -:   43:
        -:   44:// TAO_IDL - Generated from
        -:   45:// be/be_visitor_interface/interface_cs.cpp:51
        -:   46:
        -:   47:// Traits specializations for DDS::DomainParticipantListener.
        -:   48:
        -:   49:DDS::DomainParticipantListener_ptr
    #####:   50:TAO::Objref_Traits<DDS::DomainParticipantListener>::duplicate (
        -:   51:    DDS::DomainParticipantListener_ptr p)
        -:   52:{
    #####:   53:  return DDS::DomainParticipantListener::_duplicate (p);
        -:   54:}
        -:   55:
        -:   56:void
       39:   57:TAO::Objref_Traits<DDS::DomainParticipantListener>::release (
        -:   58:    DDS::DomainParticipantListener_ptr p)
        -:   59:{
       39:   60:  ::CORBA::release (p);
       39:   61:}
        -:   62:
        -:   63:DDS::DomainParticipantListener_ptr
       24:   64:TAO::Objref_Traits<DDS::DomainParticipantListener>::nil (void)
        -:   65:{
       24:   66:  return DDS::DomainParticipantListener::_nil ();
        -:   67:}
        -:   68:
        -:   69:::CORBA::Boolean
    #####:   70:TAO::Objref_Traits<DDS::DomainParticipantListener>::marshal (
        -:   71:    const DDS::DomainParticipantListener_ptr p,
        -:   72:    TAO_OutputCDR & cdr)
        -:   73:{
    #####:   74:  return ::CORBA::Object::marshal (p, cdr);
        -:   75:}
        -:   76:
        3:   77:DDS::DomainParticipantListener::DomainParticipantListener (void)
        3:   78:{}
        -:   79:
        3:   80:DDS::DomainParticipantListener::~DomainParticipantListener (void)
        -:   81:{
        3:   82:}
        -:   83:
        -:   84:DDS::DomainParticipantListener_ptr
    #####:   85:DDS::DomainParticipantListener::_narrow (
        -:   86:    ::CORBA::Object_ptr _tao_objref)
        -:   87:{
    #####:   88:  return DomainParticipantListener::_duplicate (
        -:   89:      dynamic_cast<DomainParticipantListener_ptr> (_tao_objref)
    #####:   90:    );
        -:   91:}
        -:   92:
        -:   93:DDS::DomainParticipantListener_ptr
    #####:   94:DDS::DomainParticipantListener::_unchecked_narrow (
        -:   95:    ::CORBA::Object_ptr _tao_objref)
        -:   96:{
    #####:   97:  return DomainParticipantListener::_duplicate (
        -:   98:      dynamic_cast<DomainParticipantListener_ptr> (_tao_objref)
    #####:   99:    );
        -:  100:}
        -:  101:
        -:  102:DDS::DomainParticipantListener_ptr
       75:  103:DDS::DomainParticipantListener::_nil (void)
        -:  104:{
       75:  105:  return 0;
        -:  106:}
        -:  107:
        -:  108:DDS::DomainParticipantListener_ptr
       12:  109:DDS::DomainParticipantListener::_duplicate (DomainParticipantListener_ptr obj)
        -:  110:{
       12:  111:  if (! ::CORBA::is_nil (obj))
        -:  112:    {
        3:  113:      obj->_add_ref ();
        -:  114:    }
       12:  115:  return obj;
        -:  116:}
        -:  117:
        -:  118:void
    #####:  119:DDS::DomainParticipantListener::_tao_release (DomainParticipantListener_ptr obj)
        -:  120:{
    #####:  121:  ::CORBA::release (obj);
    #####:  122:}
        -:  123:
        -:  124:::CORBA::Boolean
    #####:  125:DDS::DomainParticipantListener::_is_a (const char *value)
        -:  126:{
    #####:  127:  if (
    #####:  128:      ACE_OS::strcmp (
        -:  129:          value,
        -:  130:          "IDL:DDS/Listener:1.0"
    #####:  131:        ) == 0 ||
    #####:  132:      ACE_OS::strcmp (
        -:  133:          value,
        -:  134:          "IDL:DDS/TopicListener:1.0"
    #####:  135:        ) == 0 ||
    #####:  136:      ACE_OS::strcmp (
        -:  137:          value,
        -:  138:          "IDL:DDS/DataWriterListener:1.0"
    #####:  139:        ) == 0 ||
    #####:  140:      ACE_OS::strcmp (
        -:  141:          value,
        -:  142:          "IDL:DDS/PublisherListener:1.0"
    #####:  143:        ) == 0 ||
    #####:  144:      ACE_OS::strcmp (
        -:  145:          value,
        -:  146:          "IDL:DDS/DataReaderListener:1.0"
    #####:  147:        ) == 0 ||
    #####:  148:      ACE_OS::strcmp (
        -:  149:          value,
        -:  150:          "IDL:DDS/SubscriberListener:1.0"
    #####:  151:        ) == 0 ||
    #####:  152:      ACE_OS::strcmp (
        -:  153:          value,
        -:  154:          "IDL:DDS/DomainParticipantListener:1.0"
    #####:  155:        ) == 0 ||
    #####:  156:      ACE_OS::strcmp (
        -:  157:          value,
        -:  158:          "IDL:omg.org/CORBA/LocalObject:1.0"
    #####:  159:        ) == 0 ||
    #####:  160:      ACE_OS::strcmp (
        -:  161:          value,
        -:  162:          "IDL:omg.org/CORBA/Object:1.0"
        -:  163:        ) == 0
        -:  164:    )
        -:  165:    {
    #####:  166:      return true; // success using local knowledge
        -:  167:    }
        -:  168:  else
        -:  169:    {
    #####:  170:      return false;
        -:  171:    }
        -:  172:}
        -:  173:
    #####:  174:const char* DDS::DomainParticipantListener::_interface_repository_id (void) const
        -:  175:{
    #####:  176:  return "IDL:DDS/DomainParticipantListener:1.0";
        -:  177:}
        -:  178:
        -:  179:::CORBA::Boolean
    #####:  180:DDS::DomainParticipantListener::marshal (TAO_OutputCDR & /* cdr */)
        -:  181:{
    #####:  182:  return false;
        -:  183:}
        -:  184:
        -:  185:// TAO_IDL - Generated from
        -:  186:// be/be_visitor_interface/interface_cs.cpp:51
        -:  187:
        -:  188:// Traits specializations for DDS::DomainParticipant.
        -:  189:
        -:  190:DDS::DomainParticipant_ptr
    #####:  191:TAO::Objref_Traits<DDS::DomainParticipant>::duplicate (
        -:  192:    DDS::DomainParticipant_ptr p)
        -:  193:{
    #####:  194:  return DDS::DomainParticipant::_duplicate (p);
        -:  195:}
        -:  196:
        -:  197:void
       63:  198:TAO::Objref_Traits<DDS::DomainParticipant>::release (
        -:  199:    DDS::DomainParticipant_ptr p)
        -:  200:{
       63:  201:  ::CORBA::release (p);
       63:  202:}
        -:  203:
        -:  204:DDS::DomainParticipant_ptr
       30:  205:TAO::Objref_Traits<DDS::DomainParticipant>::nil (void)
        -:  206:{
       30:  207:  return DDS::DomainParticipant::_nil ();
        -:  208:}
        -:  209:
        -:  210:::CORBA::Boolean
    #####:  211:TAO::Objref_Traits<DDS::DomainParticipant>::marshal (
        -:  212:    const DDS::DomainParticipant_ptr p,
        -:  213:    TAO_OutputCDR & cdr)
        -:  214:{
    #####:  215:  return ::CORBA::Object::marshal (p, cdr);
        -:  216:}
        -:  217:
       12:  218:DDS::DomainParticipant::DomainParticipant (void)
       12:  219:{}
        -:  220:
       12:  221:DDS::DomainParticipant::~DomainParticipant (void)
        -:  222:{
       12:  223:}
        -:  224:
        -:  225:DDS::DomainParticipant_ptr
    #####:  226:DDS::DomainParticipant::_narrow (
        -:  227:    ::CORBA::Object_ptr _tao_objref)
        -:  228:{
    #####:  229:  return DomainParticipant::_duplicate (
        -:  230:      dynamic_cast<DomainParticipant_ptr> (_tao_objref)
    #####:  231:    );
        -:  232:}
        -:  233:
        -:  234:DDS::DomainParticipant_ptr
    #####:  235:DDS::DomainParticipant::_unchecked_narrow (
        -:  236:    ::CORBA::Object_ptr _tao_objref)
        -:  237:{
    #####:  238:  return DomainParticipant::_duplicate (
        -:  239:      dynamic_cast<DomainParticipant_ptr> (_tao_objref)
    #####:  240:    );
        -:  241:}
        -:  242:
        -:  243:DDS::DomainParticipant_ptr
       30:  244:DDS::DomainParticipant::_nil (void)
        -:  245:{
       30:  246:  return 0;
        -:  247:}
        -:  248:
        -:  249:DDS::DomainParticipant_ptr
       21:  250:DDS::DomainParticipant::_duplicate (DomainParticipant_ptr obj)
        -:  251:{
       21:  252:  if (! ::CORBA::is_nil (obj))
        -:  253:    {
       21:  254:      obj->_add_ref ();
        -:  255:    }
       21:  256:  return obj;
        -:  257:}
        -:  258:
        -:  259:void
    #####:  260:DDS::DomainParticipant::_tao_release (DomainParticipant_ptr obj)
        -:  261:{
    #####:  262:  ::CORBA::release (obj);
    #####:  263:}
        -:  264:
        -:  265:::CORBA::Boolean
    #####:  266:DDS::DomainParticipant::_is_a (const char *value)
        -:  267:{
    #####:  268:  if (
    #####:  269:      ACE_OS::strcmp (
        -:  270:          value,
        -:  271:          "IDL:DDS/Entity:1.0"
    #####:  272:        ) == 0 ||
    #####:  273:      ACE_OS::strcmp (
        -:  274:          value,
        -:  275:          "IDL:DDS/DomainParticipant:1.0"
    #####:  276:        ) == 0 ||
    #####:  277:      ACE_OS::strcmp (
        -:  278:          value,
        -:  279:          "IDL:omg.org/CORBA/LocalObject:1.0"
    #####:  280:        ) == 0 ||
    #####:  281:      ACE_OS::strcmp (
        -:  282:          value,
        -:  283:          "IDL:omg.org/CORBA/Object:1.0"
        -:  284:        ) == 0
        -:  285:    )
        -:  286:    {
    #####:  287:      return true; // success using local knowledge
        -:  288:    }
        -:  289:  else
        -:  290:    {
    #####:  291:      return false;
        -:  292:    }
        -:  293:}
        -:  294:
    #####:  295:const char* DDS::DomainParticipant::_interface_repository_id (void) const
        -:  296:{
    #####:  297:  return "IDL:DDS/DomainParticipant:1.0";
        -:  298:}
        -:  299:
        -:  300:::CORBA::Boolean
    #####:  301:DDS::DomainParticipant::marshal (TAO_OutputCDR & /* cdr */)
        -:  302:{
    #####:  303:  return false;
        -:  304:}
        -:  305:
        -:  306:// TAO_IDL - Generated from
        -:  307:// be/be_visitor_interface/interface_cs.cpp:51
        -:  308:
        -:  309:// Traits specializations for DDS::DomainParticipantFactory.
        -:  310:
        -:  311:DDS::DomainParticipantFactory_ptr
    #####:  312:TAO::Objref_Traits<DDS::DomainParticipantFactory>::duplicate (
        -:  313:    DDS::DomainParticipantFactory_ptr p)
        -:  314:{
    #####:  315:  return DDS::DomainParticipantFactory::_duplicate (p);
        -:  316:}
        -:  317:
        -:  318:void
       42:  319:TAO::Objref_Traits<DDS::DomainParticipantFactory>::release (
        -:  320:    DDS::DomainParticipantFactory_ptr p)
        -:  321:{
       42:  322:  ::CORBA::release (p);
       42:  323:}
        -:  324:
        -:  325:DDS::DomainParticipantFactory_ptr
       18:  326:TAO::Objref_Traits<DDS::DomainParticipantFactory>::nil (void)
        -:  327:{
       18:  328:  return DDS::DomainParticipantFactory::_nil ();
        -:  329:}
        -:  330:
        -:  331:::CORBA::Boolean
    #####:  332:TAO::Objref_Traits<DDS::DomainParticipantFactory>::marshal (
        -:  333:    const DDS::DomainParticipantFactory_ptr p,
        -:  334:    TAO_OutputCDR & cdr)
        -:  335:{
    #####:  336:  return ::CORBA::Object::marshal (p, cdr);
        -:  337:}
        -:  338:
       21:  339:DDS::DomainParticipantFactory::DomainParticipantFactory (void)
       21:  340:{}
        -:  341:
       21:  342:DDS::DomainParticipantFactory::~DomainParticipantFactory (void)
        -:  343:{
       21:  344:}
        -:  345:
        -:  346:DDS::DomainParticipantFactory_ptr
    #####:  347:DDS::DomainParticipantFactory::_narrow (
        -:  348:    ::CORBA::Object_ptr _tao_objref)
        -:  349:{
    #####:  350:  return DomainParticipantFactory::_duplicate (
        -:  351:      dynamic_cast<DomainParticipantFactory_ptr> (_tao_objref)
    #####:  352:    );
        -:  353:}
        -:  354:
        -:  355:DDS::DomainParticipantFactory_ptr
    #####:  356:DDS::DomainParticipantFactory::_unchecked_narrow (
        -:  357:    ::CORBA::Object_ptr _tao_objref)
        -:  358:{
    #####:  359:  return DomainParticipantFactory::_duplicate (
        -:  360:      dynamic_cast<DomainParticipantFactory_ptr> (_tao_objref)
    #####:  361:    );
        -:  362:}
        -:  363:
        -:  364:DDS::DomainParticipantFactory_ptr
       18:  365:DDS::DomainParticipantFactory::_nil (void)
        -:  366:{
       18:  367:  return 0;
        -:  368:}
        -:  369:
        -:  370:DDS::DomainParticipantFactory_ptr
       24:  371:DDS::DomainParticipantFactory::_duplicate (DomainParticipantFactory_ptr obj)
        -:  372:{
       24:  373:  if (! ::CORBA::is_nil (obj))
        -:  374:    {
       24:  375:      obj->_add_ref ();
        -:  376:    }
       24:  377:  return obj;
        -:  378:}
        -:  379:
        -:  380:void
    #####:  381:DDS::DomainParticipantFactory::_tao_release (DomainParticipantFactory_ptr obj)
        -:  382:{
    #####:  383:  ::CORBA::release (obj);
    #####:  384:}
        -:  385:
        -:  386:::CORBA::Boolean
    #####:  387:DDS::DomainParticipantFactory::_is_a (const char *value)
        -:  388:{
    #####:  389:  if (
    #####:  390:      ACE_OS::strcmp (
        -:  391:          value,
        -:  392:          "IDL:DDS/DomainParticipantFactory:1.0"
    #####:  393:        ) == 0 ||
    #####:  394:      ACE_OS::strcmp (
        -:  395:          value,
        -:  396:          "IDL:omg.org/CORBA/LocalObject:1.0"
    #####:  397:        ) == 0 ||
    #####:  398:      ACE_OS::strcmp (
        -:  399:          value,
        -:  400:          "IDL:omg.org/CORBA/Object:1.0"
        -:  401:        ) == 0
        -:  402:    )
        -:  403:    {
    #####:  404:      return true; // success using local knowledge
        -:  405:    }
        -:  406:  else
        -:  407:    {
    #####:  408:      return false;
        -:  409:    }
        -:  410:}
        -:  411:
    #####:  412:const char* DDS::DomainParticipantFactory::_interface_repository_id (void) const
        -:  413:{
    #####:  414:  return "IDL:DDS/DomainParticipantFactory:1.0";
        -:  415:}
        -:  416:
        -:  417:::CORBA::Boolean
    #####:  418:DDS::DomainParticipantFactory::marshal (TAO_OutputCDR & /* cdr */)
        -:  419:{
    #####:  420:  return false;
        -:  421:}
        -:  422:
        -:  423:
        -:  424:OPENDDS_END_VERSIONED_NAMESPACE_DECL
        -:  425:
        -:  426:
