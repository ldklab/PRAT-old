        -:    0:Source:/home/ryan/git/TARGETS/OpenDDS-debloat/ACE_wrappers/ace/Dynamic_Service.cpp
        -:    0:Programs:70
        -:    1:// $Id$
        -:    2:
        -:    3:#ifndef ACE_DYNAMIC_SERVICE_CPP
        -:    4:#define ACE_DYNAMIC_SERVICE_CPP
        -:    5:
        -:    6:#include "ace/Dynamic_Service.h"
        -:    7:
        -:    8:#if !defined (ACE_LACKS_PRAGMA_ONCE)
        -:    9:# pragma once
        -:   10:#endif /* ACE_LACKS_PRAGMA_ONCE */
        -:   11:
        -:   12:#include "ace/Service_Object.h"
        -:   13:
        -:   14:#if !defined (__ACE_INLINE__)
        -:   15:#include "ace/Dynamic_Service.inl"
        -:   16:#endif /* __ACE_INLINE__ */
        -:   17:
        -:   18:ACE_BEGIN_VERSIONED_NAMESPACE_DECL
        -:   19:
        -:   20:
        -:   21:template <class TYPE> TYPE *
      118:   22:ACE_Dynamic_Service<TYPE>::instance (const ACE_TCHAR *name)
        -:   23:{
        -:   24:  ACE_Service_Object * svc_obj =
        -:   25:    static_cast<ACE_Service_Object *>
      118:   26:    (ACE_Dynamic_Service_Base::instance (name,false));
     118*:   27:  return dynamic_cast<TYPE *> (svc_obj);
        -:   28:}
        -:   29:
        -:   30:template <class TYPE> TYPE *
        -:   31:ACE_Dynamic_Service<TYPE>::instance (const ACE_TCHAR *name,
        -:   32:                                     bool no_global)
        -:   33:{
        -:   34:  ACE_Service_Object * svc_obj =
        -:   35:    static_cast<ACE_Service_Object *>
        -:   36:    (ACE_Dynamic_Service_Base::instance (name, no_global));
        -:   37:  return dynamic_cast<TYPE *> (svc_obj);
        -:   38:}
        -:   39:
        -:   40:template <class TYPE> TYPE *
        -:   41:ACE_Dynamic_Service<TYPE>::instance (const ACE_Service_Gestalt* conf,
        -:   42:                                     const ACE_TCHAR *name)
        -:   43:{
        -:   44:  ACE_Service_Object * svc_obj =
        -:   45:    static_cast<ACE_Service_Object *>
        -:   46:    (ACE_Dynamic_Service_Base::instance (conf, name, false));
        -:   47:  return dynamic_cast<TYPE *> (svc_obj);
        -:   48:}
        -:   49:
        -:   50:template <class TYPE> TYPE *
        -:   51:ACE_Dynamic_Service<TYPE>::instance (const ACE_Service_Gestalt* conf,
        -:   52:                                     const ACE_TCHAR *name,
        -:   53:                                     bool no_global)
        -:   54:{
        -:   55:  ACE_Service_Object * svc_obj =
        -:   56:    static_cast<ACE_Service_Object *>
        -:   57:    (ACE_Dynamic_Service_Base::instance (conf, name, no_global));
        -:   58:  return dynamic_cast<TYPE *> (svc_obj);
        -:   59:}
        -:   60:
        -:   61:ACE_END_VERSIONED_NAMESPACE_DECL
        -:   62:
        -:   63:#endif /* ACE_DYNAMIC_SERVICE_CPP */
