        -:    0:Source:/home/ryan/git/TARGETS/OpenDDS-debloat/ACE_wrappers/TAO/tao/Object_Reference_Sequence_Element_T.h
        -:    0:Programs:70
        -:    1:#ifndef guard_object_reference_sequence_element_hpp
        -:    2:#define guard_object_reference_sequence_element_hpp
        -:    3:/**
        -:    4: * @file
        -:    5: *
        -:    6: * @brief Implement the type returned by operator[] in object_reference
        -:    7: * sequences.
        -:    8: *
        -:    9: * $Id$
        -:   10: *
        -:   11: * @author Carlos O'Ryan
        -:   12: */
        -:   13:#include "tao/Basic_Types.h"
        -:   14:
        -:   15:#include <algorithm>
        -:   16:
        -:   17:TAO_BEGIN_VERSIONED_NAMESPACE_DECL
        -:   18:
        -:   19:namespace TAO
        -:   20:{
        -:   21:namespace details
        -:   22:{
        -:   23:
        -:   24:template<typename obj_ref_traits>
        -:   25:class object_reference_sequence_element
        -:   26:{
        -:   27:public:
        -:   28:  typedef typename obj_ref_traits::object_type object_reference_type;
        -:   29:  typedef object_reference_type * value_type;
        -:   30:  typedef object_reference_type const * const_value_type;
        -:   31:  typedef typename obj_ref_traits::object_type_var object_reference_var;
        -:   32:
        -:   33:private:
       3*:   34:  inline object_reference_sequence_element<obj_ref_traits> & pseudo_copy_swap(
        -:   35:      object_reference_var & rhs)
        -:   36:  {
       3*:   37:    if (release())
        -:   38:    {
       3*:   39:      obj_ref_traits::release(*element_);
        -:   40:    }
       3*:   41:    *element_ = rhs._retn();
       3*:   42:    return *this;
        -:   43:  }
------------------
_ZN3TAO7details33object_reference_sequence_elementINS0_23object_reference_traitsIN3DDS10DataReaderE16TAO_Objref_Var_TIS4_ELb1EEEE16pseudo_copy_swapERS6_:
    #####:   34:  inline object_reference_sequence_element<obj_ref_traits> & pseudo_copy_swap(
        -:   35:      object_reference_var & rhs)
        -:   36:  {
    #####:   37:    if (release())
        -:   38:    {
    #####:   39:      obj_ref_traits::release(*element_);
        -:   40:    }
    #####:   41:    *element_ = rhs._retn();
    #####:   42:    return *this;
        -:   43:  }
------------------
_ZN3TAO7details33object_reference_sequence_elementINS0_23object_reference_traitsIN3DDS10DataReaderE16TAO_Objref_Var_TIS4_ELb1EEEE16pseudo_copy_swapERS6_:
    #####:   34:  inline object_reference_sequence_element<obj_ref_traits> & pseudo_copy_swap(
        -:   35:      object_reference_var & rhs)
        -:   36:  {
    #####:   37:    if (release())
        -:   38:    {
    #####:   39:      obj_ref_traits::release(*element_);
        -:   40:    }
    #####:   41:    *element_ = rhs._retn();
    #####:   42:    return *this;
        -:   43:  }
------------------
_ZN3TAO7details33object_reference_sequence_elementINS0_23object_reference_traitsIN3DDS9ConditionE16TAO_Objref_Var_TIS4_ELb1EEEE16pseudo_copy_swapERS6_:
        3:   34:  inline object_reference_sequence_element<obj_ref_traits> & pseudo_copy_swap(
        -:   35:      object_reference_var & rhs)
        -:   36:  {
        3:   37:    if (release())
        -:   38:    {
        3:   39:      obj_ref_traits::release(*element_);
        -:   40:    }
        3:   41:    *element_ = rhs._retn();
        3:   42:    return *this;
        -:   43:  }
------------------
        -:   44:
        -:   45:public:
       3*:   46:  object_reference_sequence_element(
        -:   47:      value_type & e, CORBA::Boolean release)
        -:   48:    : element_(&e)
       3*:   49:    , release_(release)
        -:   50:  {
       3*:   51:  }
------------------
_ZN3TAO7details33object_reference_sequence_elementINS0_23object_reference_traitsIN3DDS10DataReaderE16TAO_Objref_Var_TIS4_ELb1EEEEC2ERPS4_b:
    #####:   46:  object_reference_sequence_element(
        -:   47:      value_type & e, CORBA::Boolean release)
        -:   48:    : element_(&e)
    #####:   49:    , release_(release)
        -:   50:  {
    #####:   51:  }
------------------
_ZN3TAO7details33object_reference_sequence_elementINS0_23object_reference_traitsIN3DDS10DataReaderE16TAO_Objref_Var_TIS4_ELb1EEEEC2ERPS4_b:
    #####:   46:  object_reference_sequence_element(
        -:   47:      value_type & e, CORBA::Boolean release)
        -:   48:    : element_(&e)
    #####:   49:    , release_(release)
        -:   50:  {
    #####:   51:  }
------------------
_ZN3TAO7details33object_reference_sequence_elementINS0_23object_reference_traitsIN3DDS9ConditionE16TAO_Objref_Var_TIS4_ELb1EEEEC2ERPS4_b:
        3:   46:  object_reference_sequence_element(
        -:   47:      value_type & e, CORBA::Boolean release)
        -:   48:    : element_(&e)
        3:   49:    , release_(release)
        -:   50:  {
        3:   51:  }
------------------
        -:   52:
        -:   53:  object_reference_sequence_element(
        -:   54:      object_reference_sequence_element const & rhs)
        -:   55:    : element_(rhs.element_)
        -:   56:    , release_(rhs.release_)
        -:   57:  {
        -:   58:  }
        -:   59:
       3*:   60:  ~object_reference_sequence_element()
        -:   61:  {
       3*:   62:  }
------------------
_ZN3TAO7details33object_reference_sequence_elementINS0_23object_reference_traitsIN3DDS10DataReaderE16TAO_Objref_Var_TIS4_ELb1EEEED2Ev:
    #####:   60:  ~object_reference_sequence_element()
        -:   61:  {
    #####:   62:  }
------------------
_ZN3TAO7details33object_reference_sequence_elementINS0_23object_reference_traitsIN3DDS10DataReaderE16TAO_Objref_Var_TIS4_ELb1EEEED2Ev:
    #####:   60:  ~object_reference_sequence_element()
        -:   61:  {
    #####:   62:  }
------------------
_ZN3TAO7details33object_reference_sequence_elementINS0_23object_reference_traitsIN3DDS9ConditionE16TAO_Objref_Var_TIS4_ELb1EEEED2Ev:
        3:   60:  ~object_reference_sequence_element()
        -:   61:  {
        3:   62:  }
------------------
        -:   63:
        3:   64:  object_reference_sequence_element & operator=(
        -:   65:      object_reference_var const & rhs)
        -:   66:  {
        3:   67:    object_reference_var tmp(rhs);
        6:   68:    return pseudo_copy_swap(tmp);
        -:   69:  }
        -:   70:
        -:   71:  object_reference_sequence_element & operator=(
        -:   72:      object_reference_sequence_element const & rhs)
        -:   73:  {
        -:   74:    object_reference_var tmp(obj_ref_traits::duplicate(*rhs.element_));
        -:   75:    return pseudo_copy_swap(tmp);
        -:   76:  }
        -:   77:
    #####:   78:  object_reference_sequence_element & operator=(value_type rhs)
        -:   79:  {
    #####:   80:    object_reference_var tmp(rhs);
    #####:   81:    return pseudo_copy_swap(tmp);
        -:   82:  }
------------------
_ZN3TAO7details33object_reference_sequence_elementINS0_23object_reference_traitsIN3DDS10DataReaderE16TAO_Objref_Var_TIS4_ELb1EEEEaSEPS4_:
    #####:   78:  object_reference_sequence_element & operator=(value_type rhs)
        -:   79:  {
    #####:   80:    object_reference_var tmp(rhs);
    #####:   81:    return pseudo_copy_swap(tmp);
        -:   82:  }
------------------
_ZN3TAO7details33object_reference_sequence_elementINS0_23object_reference_traitsIN3DDS10DataReaderE16TAO_Objref_Var_TIS4_ELb1EEEEaSEPS4_:
    #####:   78:  object_reference_sequence_element & operator=(value_type rhs)
        -:   79:  {
    #####:   80:    object_reference_var tmp(rhs);
    #####:   81:    return pseudo_copy_swap(tmp);
        -:   82:  }
------------------
        -:   83:
        -:   84:  inline operator value_type()
        -:   85:  {
        -:   86:    return *this->element_;
        -:   87:  }
        -:   88:
        -:   89:  inline operator const_value_type() const
        -:   90:  {
        -:   91:    return *this->element_;
        -:   92:  }
        -:   93:
        -:   94:  inline object_reference_type *in (void) const {
        -:   95:    return *this->element_;
        -:   96:  }
        -:   97:
        -:   98:  inline object_reference_type *&inout (void) const {
        -:   99:    return *this->element_;
        -:  100:  }
        -:  101:
        -:  102:  inline value_type operator->()
        -:  103:  {
        -:  104:    return *this->element_;
        -:  105:  }
        -:  106:
        -:  107:  inline value_type operator->() const
        -:  108:  {
        -:  109:    return *this->element_;
        -:  110:  }
        -:  111:
        -:  112:  void swap(object_reference_sequence_element & rhs)
        -:  113:  {
        -:  114:    std::swap(this->element_, rhs.element_);
        -:  115:    std::swap(this->release_, rhs.release_);
        -:  116:  }
        -:  117:
       3*:  118:  inline CORBA::Boolean release() const
        -:  119:  {
       3*:  120:    return this->release_;
        -:  121:  }
        -:  122:
        -:  123:private:
        -:  124:  // This function is not implemented
        -:  125:  object_reference_sequence_element();
        -:  126:
        -:  127:private:
        -:  128:  value_type * element_;
        -:  129:  CORBA::Boolean release_;
        -:  130:};
        -:  131:
        -:  132:} // namespace details
        -:  133:} // namespace CORBA
        -:  134:
        -:  135:TAO_END_VERSIONED_NAMESPACE_DECL
        -:  136:
        -:  137:#endif // guard_object_reference_sequence_element_hpp
