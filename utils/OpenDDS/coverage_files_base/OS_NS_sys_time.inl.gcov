        -:    0:Source:/home/ryan/git/TARGETS/OpenDDS-debloat/ACE_wrappers/ace/OS_NS_sys_time.inl
        -:    0:Programs:51
        -:    1:// -*- C++ -*-
        -:    2://
        -:    3:// $Id$
        -:    4:
        -:    5:#include "ace/os_include/sys/os_time.h"
        -:    6:#include "ace/os_include/os_errno.h"
        -:    7:
        -:    8:#if defined (ACE_VXWORKS) || defined (ACE_HAS_CLOCK_GETTIME_REALTIME) || defined (ACE_LACKS_GETTIMEOFDAY)
        -:    9:#  include "ace/OS_NS_time.h"
        -:   10:#endif /* ACE_VXWORKS || ACE_HAS_CLOCK_REALTIME */
        -:   11:
        -:   12:ACE_BEGIN_VERSIONED_NAMESPACE_DECL
        -:   13:
        -:   14:ACE_INLINE ACE_Time_Value
    #####:   15:ACE_OS::gettimeofday (void)
        -:   16:{
        -:   17:  // ACE_OS_TRACE ("ACE_OS::gettimeofday");
        -:   18:
        -:   19:#if !defined (ACE_WIN32) && !defined (ACE_LACKS_GETTIMEOFDAY)
        -:   20:  timeval tv;
    #####:   21:  int result = 0;
        -:   22:#endif // !defined (ACE_WIN32)
        -:   23:
        -:   24:#if defined (ACE_LACKS_GETTIMEOFDAY) && defined (ACE_HAS_CLOCK_GETTIME)
        -:   25:  timespec ts;
        -:   26:  if (ACE_OS::clock_gettime (CLOCK_REALTIME, &ts) == -1)
        -:   27:    {
        -:   28:      return ACE_Time_Value (-1);
        -:   29:    }
        -:   30:
        -:   31:  return ACE_Time_Value (ts);
        -:   32:
        -:   33:#elif defined (ACE_WIN32) && defined (ACE_LACKS_GETSYSTEMTIMEASFILETIME)
        -:   34:  SYSTEMTIME tsys;
        -:   35:  FILETIME   tfile;
        -:   36:  ::GetSystemTime (&tsys);
        -:   37:  ::SystemTimeToFileTime (&tsys, &tfile);
        -:   38:  return ACE_Time_Value (tfile);
        -:   39:#elif defined (ACE_WIN32)
        -:   40:  FILETIME   tfile;
        -:   41:  ::GetSystemTimeAsFileTime (&tfile);
        -:   42:  return ACE_Time_Value (tfile);
        -:   43:#elif defined (ACE_HAS_AIX_HI_RES_TIMER)
        -:   44:  timebasestruct_t tb;
        -:   45:
        -:   46:  ::read_real_time (&tb, TIMEBASE_SZ);
        -:   47:  ::time_base_to_time (&tb, TIMEBASE_SZ);
        -:   48:
        -:   49:  tv.tv_sec = tb.tb_high;
        -:   50:  tv.tv_usec = tb.tb_low / 1000L;
        -:   51:#else
        -:   52:# if defined (ACE_HAS_TIMEZONE_GETTIMEOFDAY) || \
        -:   53:  defined(ACE_HAS_VOIDPTR_GETTIMEOFDAY) || \
        -:   54:  (defined (ACE_HAS_SVR4_GETTIMEOFDAY) && !defined (SCO))
    #####:   55:  ACE_OSCALL (::gettimeofday (&tv, 0), int, -1, result);
        -:   56:# elif defined (ACE_VXWORKS)
        -:   57:  // Assumes that struct timespec is same size as struct timeval,
        -:   58:  // which assumes that time_t is a long: it currently (VxWorks
        -:   59:  // 5.2/5.3) is.
        -:   60:  struct timespec ts;
        -:   61:
        -:   62:  ACE_OSCALL (ACE_OS::clock_gettime (CLOCK_REALTIME, &ts), int, -1, result);
        -:   63:  tv.tv_sec = ts.tv_sec;
        -:   64:  tv.tv_usec = ts.tv_nsec / 1000L;  // timespec has nsec, but timeval has usec
        -:   65:# elif defined (ACE_MQX)
        -:   66:  TIME_STRUCT ts;
        -:   67:  _time_get(&ts);
        -:   68:  tv.tv_sec = ts.SECONDS;
        -:   69:  tv.tv_usec = ts.MILLISECONDS * 1000;
        -:   70:# else
        -:   71:#  if defined (ACE_LACKS_GETTIMEOFDAY)
        -:   72:  ACE_NOTSUP_RETURN (ACE_Time_Value ((time_t)-1));
        -:   73:#  else
        -:   74:  ACE_OSCALL (::gettimeofday (&tv), int, -1, result);
        -:   75:#  endif /* ACE_LACKS_GETTIMEOFDAY */
        -:   76:# endif /* ACE_HAS_SVR4_GETTIMEOFDAY */
        -:   77:#endif /* 0 */
        -:   78:#if !defined (ACE_WIN32) && !defined (ACE_LACKS_GETTIMEOFDAY)
    #####:   79:  if (result == -1)
    #####:   80:    return ACE_Time_Value ((time_t)-1);
        -:   81:  else
    #####:   82:    return ACE_Time_Value (tv);
        -:   83:#endif // !defined (ACE_WIN32)
        -:   84:}
        -:   85:
        -:   86:ACE_INLINE ACE_Time_Value
        -:   87:ACE_OS::gettimeofday_ (void)
        -:   88:{
        -:   89:  return ACE_OS::gettimeofday ();
        -:   90:}
        -:   91:
        -:   92:ACE_END_VERSIONED_NAMESPACE_DECL
