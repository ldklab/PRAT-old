        -:    0:Source:/home/ryan/git/OpenDDS-debloat/ACE_wrappers/ace/Reactor_Token_T.cpp
        -:    0:Programs:51
        -:    1:// $Id: Reactor_Token_T.cpp 2622 2015-08-13 18:30:00Z mitza $
        -:    2:
        -:    3:#include "ace/Log_Category.h"
        -:    4:#include "ace/Reactor_Token_T.h"
        -:    5:
        -:    6:ACE_BEGIN_VERSIONED_NAMESPACE_DECL
        -:    7:
        -:    8:ACE_ALLOC_HOOK_DEFINE_Tc(ACE_Reactor_Token_T)
        -:    9:
        -:   10:template <class ACE_TOKEN_TYPE> void
    #####:   11:ACE_Reactor_Token_T<ACE_TOKEN_TYPE>::dump (void) const
        -:   12:{
        -:   13:#if defined (ACE_HAS_DUMP)
        -:   14:  ACE_TRACE ("ACE_Reactor_Token_T::dump");
        -:   15:
        -:   16:  ACELIB_DEBUG ((LM_DEBUG, ACE_BEGIN_DUMP, this));
        -:   17:  ACELIB_DEBUG ((LM_DEBUG, ACE_TEXT ("\n")));
        -:   18:  ACELIB_DEBUG ((LM_DEBUG, ACE_END_DUMP));
        -:   19:#endif /* ACE_HAS_DUMP */
    #####:   20:}
        -:   21:
        -:   22:template <class ACE_TOKEN_TYPE>
        -:   23:ACE_Reactor_Token_T<ACE_TOKEN_TYPE>::ACE_Reactor_Token_T
        -:   24:  (ACE_Reactor_Impl &r,
        -:   25:   int s_queue)
        -:   26:    : reactor_ (&r)
        -:   27:{
        -:   28:  ACE_TRACE ("ACE_Reactor_Token_T::ACE_Reactor_Token");
        -:   29:
        -:   30:  this->queueing_strategy (s_queue);
        -:   31:}
        -:   32:
        -:   33:template <class ACE_TOKEN_TYPE>
    #####:   34:ACE_Reactor_Token_T<ACE_TOKEN_TYPE>::ACE_Reactor_Token_T (int s_queue)
    #####:   35:  : reactor_ (0)
        -:   36:{
        -:   37:  ACE_TRACE ("ACE_Reactor_Token_T::ACE_Reactor_Token");
        -:   38:
    #####:   39:  this->queueing_strategy (s_queue);
    #####:   40:}
        -:   41:
        -:   42:template <class ACE_TOKEN_TYPE>
    #####:   43:ACE_Reactor_Token_T<ACE_TOKEN_TYPE>::~ACE_Reactor_Token_T (void)
        -:   44:{
        -:   45:  ACE_TRACE ("ACE_Reactor_Token_T::~ACE_Reactor_Token_T");
    #####:   46:}
        -:   47:
        -:   48:template <class ACE_TOKEN_TYPE> ACE_Reactor_Impl &
        -:   49:ACE_Reactor_Token_T<ACE_TOKEN_TYPE>::reactor (void)
        -:   50:{
        -:   51:  return *this->reactor_;
        -:   52:}
        -:   53:
        -:   54:template <class ACE_TOKEN_TYPE> void
    #####:   55:ACE_Reactor_Token_T<ACE_TOKEN_TYPE>::reactor (ACE_Reactor_Impl &reactor)
        -:   56:{
    #####:   57:  this->reactor_ = &reactor;
    #####:   58:}
        -:   59:
        -:   60:// Used to wakeup the reactor.
        -:   61:
        -:   62:template <class ACE_TOKEN_TYPE> void
    #####:   63:ACE_Reactor_Token_T<ACE_TOKEN_TYPE>::sleep_hook (void)
        -:   64:{
        -:   65:  ACE_TRACE ("ACE_Reactor_Token_T::sleep_hook");
    #####:   66:  ACE_Time_Value ping = ACE_Time_Value::zero;
    #####:   67:  if (this->reactor_->notify (0, ACE_Event_Handler::EXCEPT_MASK, &ping) == -1)
        -:   68:    {
    #####:   69:      if (errno == ETIME)
        -:   70:        {
    #####:   71:          errno = 0;
        -:   72:        }
        -:   73:      else
        -:   74:        {
    #####:   75:          ACELIB_ERROR ((LM_ERROR,
        -:   76:                      ACE_TEXT ("%p\n"),
        -:   77:                      ACE_TEXT ("sleep_hook failed")));
        -:   78:        }
        -:   79:    }
    #####:   80:}
        -:   81:
        -:   82:ACE_END_VERSIONED_NAMESPACE_DECL
