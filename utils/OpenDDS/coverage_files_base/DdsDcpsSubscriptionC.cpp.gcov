        -:    0:Source:DdsDcpsSubscriptionC.cpp
        -:    0:Programs:72
        -:    1:// -*- C++ -*-
        -:    2:// $Id$
        -:    3:
        -:    4:/**
        -:    5: * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p15
        -:    6: * TAO and the TAO IDL Compiler have been developed by:
        -:    7: *       Center for Distributed Object Computing
        -:    8: *       Washington University
        -:    9: *       St. Louis, MO
        -:   10: *       USA
        -:   11: *       http://www.cs.wustl.edu/~schmidt/doc-center.html
        -:   12: * and
        -:   13: *       Distributed Object Computing Laboratory
        -:   14: *       University of California at Irvine
        -:   15: *       Irvine, CA
        -:   16: *       USA
        -:   17: * and
        -:   18: *       Institute for Software Integrated Systems
        -:   19: *       Vanderbilt University
        -:   20: *       Nashville, TN
        -:   21: *       USA
        -:   22: *       http://www.isis.vanderbilt.edu/
        -:   23: *
        -:   24: * Information about TAO is available at:
        -:   25: *     http://www.cs.wustl.edu/~schmidt/TAO.html
        -:   26: **/
        -:   27:
        -:   28:// TAO_IDL - Generated from
        -:   29:// be/be_codegen.cpp:376
        -:   30:
        -:   31:#include "DCPS/DdsDcps_pch.h"
        -:   32:#include "DdsDcpsSubscriptionC.h"
        -:   33:#include "tao/CDR.h"
        -:   34:#include "ace/OS_NS_string.h"
        -:   35:
        -:   36:#if !defined (__ACE_INLINE__)
        -:   37:#include "DdsDcpsSubscriptionC.inl"
        -:   38:#endif /* !defined INLINE */
        -:   39:
        -:   40:OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
        -:   41:
        -:   42:
        -:   43:
        -:   44:// TAO_IDL - Generated from
        -:   45:// be/be_visitor_interface/interface_cs.cpp:51
        -:   46:
        -:   47:// Traits specializations for DDS::DataReaderListener.
        -:   48:
        -:   49:DDS::DataReaderListener_ptr
        6:   50:TAO::Objref_Traits<DDS::DataReaderListener>::duplicate (
        -:   51:    DDS::DataReaderListener_ptr p)
        -:   52:{
        6:   53:  return DDS::DataReaderListener::_duplicate (p);
        -:   54:}
        -:   55:
        -:   56:void
       84:   57:TAO::Objref_Traits<DDS::DataReaderListener>::release (
        -:   58:    DDS::DataReaderListener_ptr p)
        -:   59:{
       84:   60:  ::CORBA::release (p);
       84:   61:}
        -:   62:
        -:   63:DDS::DataReaderListener_ptr
        6:   64:TAO::Objref_Traits<DDS::DataReaderListener>::nil (void)
        -:   65:{
        6:   66:  return DDS::DataReaderListener::_nil ();
        -:   67:}
        -:   68:
        -:   69:::CORBA::Boolean
    #####:   70:TAO::Objref_Traits<DDS::DataReaderListener>::marshal (
        -:   71:    const DDS::DataReaderListener_ptr p,
        -:   72:    TAO_OutputCDR & cdr)
        -:   73:{
    #####:   74:  return ::CORBA::Object::marshal (p, cdr);
        -:   75:}
        -:   76:
       69:   77:DDS::DataReaderListener::DataReaderListener (void)
       69:   78:{}
        -:   79:
       69:   80:DDS::DataReaderListener::~DataReaderListener (void)
        -:   81:{
       69:   82:}
        -:   83:
        -:   84:DDS::DataReaderListener_ptr
    #####:   85:DDS::DataReaderListener::_narrow (
        -:   86:    ::CORBA::Object_ptr _tao_objref)
        -:   87:{
    #####:   88:  return DataReaderListener::_duplicate (
        -:   89:      dynamic_cast<DataReaderListener_ptr> (_tao_objref)
    #####:   90:    );
        -:   91:}
        -:   92:
        -:   93:DDS::DataReaderListener_ptr
    #####:   94:DDS::DataReaderListener::_unchecked_narrow (
        -:   95:    ::CORBA::Object_ptr _tao_objref)
        -:   96:{
    #####:   97:  return DataReaderListener::_duplicate (
        -:   98:      dynamic_cast<DataReaderListener_ptr> (_tao_objref)
    #####:   99:    );
        -:  100:}
        -:  101:
        -:  102:DDS::DataReaderListener_ptr
        6:  103:DDS::DataReaderListener::_nil (void)
        -:  104:{
        6:  105:  return 0;
        -:  106:}
        -:  107:
        -:  108:DDS::DataReaderListener_ptr
       72:  109:DDS::DataReaderListener::_duplicate (DataReaderListener_ptr obj)
        -:  110:{
       72:  111:  if (! ::CORBA::is_nil (obj))
        -:  112:    {
       66:  113:      obj->_add_ref ();
        -:  114:    }
       72:  115:  return obj;
        -:  116:}
        -:  117:
        -:  118:void
    #####:  119:DDS::DataReaderListener::_tao_release (DataReaderListener_ptr obj)
        -:  120:{
    #####:  121:  ::CORBA::release (obj);
    #####:  122:}
        -:  123:
        -:  124:::CORBA::Boolean
    #####:  125:DDS::DataReaderListener::_is_a (const char *value)
        -:  126:{
    #####:  127:  if (
    #####:  128:      ACE_OS::strcmp (
        -:  129:          value,
        -:  130:          "IDL:DDS/Listener:1.0"
    #####:  131:        ) == 0 ||
    #####:  132:      ACE_OS::strcmp (
        -:  133:          value,
        -:  134:          "IDL:DDS/DataReaderListener:1.0"
    #####:  135:        ) == 0 ||
    #####:  136:      ACE_OS::strcmp (
        -:  137:          value,
        -:  138:          "IDL:omg.org/CORBA/LocalObject:1.0"
    #####:  139:        ) == 0 ||
    #####:  140:      ACE_OS::strcmp (
        -:  141:          value,
        -:  142:          "IDL:omg.org/CORBA/Object:1.0"
        -:  143:        ) == 0
        -:  144:    )
        -:  145:    {
    #####:  146:      return true; // success using local knowledge
        -:  147:    }
        -:  148:  else
        -:  149:    {
    #####:  150:      return false;
        -:  151:    }
        -:  152:}
        -:  153:
    #####:  154:const char* DDS::DataReaderListener::_interface_repository_id (void) const
        -:  155:{
    #####:  156:  return "IDL:DDS/DataReaderListener:1.0";
        -:  157:}
        -:  158:
        -:  159:::CORBA::Boolean
    #####:  160:DDS::DataReaderListener::marshal (TAO_OutputCDR & /* cdr */)
        -:  161:{
    #####:  162:  return false;
        -:  163:}
        -:  164:
        -:  165:// TAO_IDL - Generated from
        -:  166:// be/be_visitor_interface/interface_cs.cpp:51
        -:  167:
        -:  168:// Traits specializations for DDS::SubscriberListener.
        -:  169:
        -:  170:DDS::SubscriberListener_ptr
    #####:  171:TAO::Objref_Traits<DDS::SubscriberListener>::duplicate (
        -:  172:    DDS::SubscriberListener_ptr p)
        -:  173:{
    #####:  174:  return DDS::SubscriberListener::_duplicate (p);
        -:  175:}
        -:  176:
        -:  177:void
       42:  178:TAO::Objref_Traits<DDS::SubscriberListener>::release (
        -:  179:    DDS::SubscriberListener_ptr p)
        -:  180:{
       42:  181:  ::CORBA::release (p);
       42:  182:}
        -:  183:
        -:  184:DDS::SubscriberListener_ptr
        6:  185:TAO::Objref_Traits<DDS::SubscriberListener>::nil (void)
        -:  186:{
        6:  187:  return DDS::SubscriberListener::_nil ();
        -:  188:}
        -:  189:
        -:  190:::CORBA::Boolean
    #####:  191:TAO::Objref_Traits<DDS::SubscriberListener>::marshal (
        -:  192:    const DDS::SubscriberListener_ptr p,
        -:  193:    TAO_OutputCDR & cdr)
        -:  194:{
    #####:  195:  return ::CORBA::Object::marshal (p, cdr);
        -:  196:}
        -:  197:
        3:  198:DDS::SubscriberListener::SubscriberListener (void)
        3:  199:{}
        -:  200:
        3:  201:DDS::SubscriberListener::~SubscriberListener (void)
        -:  202:{
        3:  203:}
        -:  204:
        -:  205:DDS::SubscriberListener_ptr
    #####:  206:DDS::SubscriberListener::_narrow (
        -:  207:    ::CORBA::Object_ptr _tao_objref)
        -:  208:{
    #####:  209:  return SubscriberListener::_duplicate (
        -:  210:      dynamic_cast<SubscriberListener_ptr> (_tao_objref)
    #####:  211:    );
        -:  212:}
        -:  213:
        -:  214:DDS::SubscriberListener_ptr
    #####:  215:DDS::SubscriberListener::_unchecked_narrow (
        -:  216:    ::CORBA::Object_ptr _tao_objref)
        -:  217:{
    #####:  218:  return SubscriberListener::_duplicate (
        -:  219:      dynamic_cast<SubscriberListener_ptr> (_tao_objref)
    #####:  220:    );
        -:  221:}
        -:  222:
        -:  223:DDS::SubscriberListener_ptr
       12:  224:DDS::SubscriberListener::_nil (void)
        -:  225:{
       12:  226:  return 0;
        -:  227:}
        -:  228:
        -:  229:DDS::SubscriberListener_ptr
        6:  230:DDS::SubscriberListener::_duplicate (SubscriberListener_ptr obj)
        -:  231:{
        6:  232:  if (! ::CORBA::is_nil (obj))
        -:  233:    {
    #####:  234:      obj->_add_ref ();
        -:  235:    }
        6:  236:  return obj;
        -:  237:}
        -:  238:
        -:  239:void
    #####:  240:DDS::SubscriberListener::_tao_release (SubscriberListener_ptr obj)
        -:  241:{
    #####:  242:  ::CORBA::release (obj);
    #####:  243:}
        -:  244:
        -:  245:::CORBA::Boolean
    #####:  246:DDS::SubscriberListener::_is_a (const char *value)
        -:  247:{
    #####:  248:  if (
    #####:  249:      ACE_OS::strcmp (
        -:  250:          value,
        -:  251:          "IDL:DDS/Listener:1.0"
    #####:  252:        ) == 0 ||
    #####:  253:      ACE_OS::strcmp (
        -:  254:          value,
        -:  255:          "IDL:DDS/DataReaderListener:1.0"
    #####:  256:        ) == 0 ||
    #####:  257:      ACE_OS::strcmp (
        -:  258:          value,
        -:  259:          "IDL:DDS/SubscriberListener:1.0"
    #####:  260:        ) == 0 ||
    #####:  261:      ACE_OS::strcmp (
        -:  262:          value,
        -:  263:          "IDL:omg.org/CORBA/LocalObject:1.0"
    #####:  264:        ) == 0 ||
    #####:  265:      ACE_OS::strcmp (
        -:  266:          value,
        -:  267:          "IDL:omg.org/CORBA/Object:1.0"
        -:  268:        ) == 0
        -:  269:    )
        -:  270:    {
    #####:  271:      return true; // success using local knowledge
        -:  272:    }
        -:  273:  else
        -:  274:    {
    #####:  275:      return false;
        -:  276:    }
        -:  277:}
        -:  278:
    #####:  279:const char* DDS::SubscriberListener::_interface_repository_id (void) const
        -:  280:{
    #####:  281:  return "IDL:DDS/SubscriberListener:1.0";
        -:  282:}
        -:  283:
        -:  284:::CORBA::Boolean
    #####:  285:DDS::SubscriberListener::marshal (TAO_OutputCDR & /* cdr */)
        -:  286:{
    #####:  287:  return false;
        -:  288:}
        -:  289:
        -:  290:// TAO_IDL - Generated from
        -:  291:// be/be_visitor_interface/interface_cs.cpp:51
        -:  292:
        -:  293:// Traits specializations for DDS::ReadCondition.
        -:  294:
        -:  295:DDS::ReadCondition_ptr
    #####:  296:TAO::Objref_Traits<DDS::ReadCondition>::duplicate (
        -:  297:    DDS::ReadCondition_ptr p)
        -:  298:{
    #####:  299:  return DDS::ReadCondition::_duplicate (p);
        -:  300:}
        -:  301:
        -:  302:void
    #####:  303:TAO::Objref_Traits<DDS::ReadCondition>::release (
        -:  304:    DDS::ReadCondition_ptr p)
        -:  305:{
    #####:  306:  ::CORBA::release (p);
    #####:  307:}
        -:  308:
        -:  309:DDS::ReadCondition_ptr
    #####:  310:TAO::Objref_Traits<DDS::ReadCondition>::nil (void)
        -:  311:{
    #####:  312:  return DDS::ReadCondition::_nil ();
        -:  313:}
        -:  314:
        -:  315:::CORBA::Boolean
    #####:  316:TAO::Objref_Traits<DDS::ReadCondition>::marshal (
        -:  317:    const DDS::ReadCondition_ptr p,
        -:  318:    TAO_OutputCDR & cdr)
        -:  319:{
    #####:  320:  return ::CORBA::Object::marshal (p, cdr);
        -:  321:}
        -:  322:
    #####:  323:DDS::ReadCondition::ReadCondition (void)
    #####:  324:{}
        -:  325:
    #####:  326:DDS::ReadCondition::~ReadCondition (void)
        -:  327:{
    #####:  328:}
        -:  329:
        -:  330:DDS::ReadCondition_ptr
    #####:  331:DDS::ReadCondition::_narrow (
        -:  332:    ::CORBA::Object_ptr _tao_objref)
        -:  333:{
    #####:  334:  return ReadCondition::_duplicate (
        -:  335:      dynamic_cast<ReadCondition_ptr> (_tao_objref)
    #####:  336:    );
        -:  337:}
        -:  338:
        -:  339:DDS::ReadCondition_ptr
    #####:  340:DDS::ReadCondition::_unchecked_narrow (
        -:  341:    ::CORBA::Object_ptr _tao_objref)
        -:  342:{
    #####:  343:  return ReadCondition::_duplicate (
        -:  344:      dynamic_cast<ReadCondition_ptr> (_tao_objref)
    #####:  345:    );
        -:  346:}
        -:  347:
        -:  348:DDS::ReadCondition_ptr
    #####:  349:DDS::ReadCondition::_nil (void)
        -:  350:{
    #####:  351:  return 0;
        -:  352:}
        -:  353:
        -:  354:DDS::ReadCondition_ptr
    #####:  355:DDS::ReadCondition::_duplicate (ReadCondition_ptr obj)
        -:  356:{
    #####:  357:  if (! ::CORBA::is_nil (obj))
        -:  358:    {
    #####:  359:      obj->_add_ref ();
        -:  360:    }
    #####:  361:  return obj;
        -:  362:}
        -:  363:
        -:  364:void
    #####:  365:DDS::ReadCondition::_tao_release (ReadCondition_ptr obj)
        -:  366:{
    #####:  367:  ::CORBA::release (obj);
    #####:  368:}
        -:  369:
        -:  370:::CORBA::Boolean
    #####:  371:DDS::ReadCondition::_is_a (const char *value)
        -:  372:{
    #####:  373:  if (
    #####:  374:      ACE_OS::strcmp (
        -:  375:          value,
        -:  376:          "IDL:DDS/Condition:1.0"
    #####:  377:        ) == 0 ||
    #####:  378:      ACE_OS::strcmp (
        -:  379:          value,
        -:  380:          "IDL:DDS/ReadCondition:1.0"
    #####:  381:        ) == 0 ||
    #####:  382:      ACE_OS::strcmp (
        -:  383:          value,
        -:  384:          "IDL:omg.org/CORBA/LocalObject:1.0"
    #####:  385:        ) == 0 ||
    #####:  386:      ACE_OS::strcmp (
        -:  387:          value,
        -:  388:          "IDL:omg.org/CORBA/Object:1.0"
        -:  389:        ) == 0
        -:  390:    )
        -:  391:    {
    #####:  392:      return true; // success using local knowledge
        -:  393:    }
        -:  394:  else
        -:  395:    {
    #####:  396:      return false;
        -:  397:    }
        -:  398:}
        -:  399:
    #####:  400:const char* DDS::ReadCondition::_interface_repository_id (void) const
        -:  401:{
    #####:  402:  return "IDL:DDS/ReadCondition:1.0";
        -:  403:}
        -:  404:
        -:  405:::CORBA::Boolean
    #####:  406:DDS::ReadCondition::marshal (TAO_OutputCDR & /* cdr */)
        -:  407:{
    #####:  408:  return false;
        -:  409:}
        -:  410:
        -:  411:// TAO_IDL - Generated from
        -:  412:// be/be_visitor_interface/interface_cs.cpp:51
        -:  413:
        -:  414:// Traits specializations for DDS::QueryCondition.
        -:  415:
        -:  416:DDS::QueryCondition_ptr
    #####:  417:TAO::Objref_Traits<DDS::QueryCondition>::duplicate (
        -:  418:    DDS::QueryCondition_ptr p)
        -:  419:{
    #####:  420:  return DDS::QueryCondition::_duplicate (p);
        -:  421:}
        -:  422:
        -:  423:void
    #####:  424:TAO::Objref_Traits<DDS::QueryCondition>::release (
        -:  425:    DDS::QueryCondition_ptr p)
        -:  426:{
    #####:  427:  ::CORBA::release (p);
    #####:  428:}
        -:  429:
        -:  430:DDS::QueryCondition_ptr
    #####:  431:TAO::Objref_Traits<DDS::QueryCondition>::nil (void)
        -:  432:{
    #####:  433:  return DDS::QueryCondition::_nil ();
        -:  434:}
        -:  435:
        -:  436:::CORBA::Boolean
    #####:  437:TAO::Objref_Traits<DDS::QueryCondition>::marshal (
        -:  438:    const DDS::QueryCondition_ptr p,
        -:  439:    TAO_OutputCDR & cdr)
        -:  440:{
    #####:  441:  return ::CORBA::Object::marshal (p, cdr);
        -:  442:}
        -:  443:
    #####:  444:DDS::QueryCondition::QueryCondition (void)
    #####:  445:{}
        -:  446:
    #####:  447:DDS::QueryCondition::~QueryCondition (void)
        -:  448:{
    #####:  449:}
        -:  450:
        -:  451:DDS::QueryCondition_ptr
    #####:  452:DDS::QueryCondition::_narrow (
        -:  453:    ::CORBA::Object_ptr _tao_objref)
        -:  454:{
    #####:  455:  return QueryCondition::_duplicate (
        -:  456:      dynamic_cast<QueryCondition_ptr> (_tao_objref)
    #####:  457:    );
        -:  458:}
        -:  459:
        -:  460:DDS::QueryCondition_ptr
    #####:  461:DDS::QueryCondition::_unchecked_narrow (
        -:  462:    ::CORBA::Object_ptr _tao_objref)
        -:  463:{
    #####:  464:  return QueryCondition::_duplicate (
        -:  465:      dynamic_cast<QueryCondition_ptr> (_tao_objref)
    #####:  466:    );
        -:  467:}
        -:  468:
        -:  469:DDS::QueryCondition_ptr
    #####:  470:DDS::QueryCondition::_nil (void)
        -:  471:{
    #####:  472:  return 0;
        -:  473:}
        -:  474:
        -:  475:DDS::QueryCondition_ptr
    #####:  476:DDS::QueryCondition::_duplicate (QueryCondition_ptr obj)
        -:  477:{
    #####:  478:  if (! ::CORBA::is_nil (obj))
        -:  479:    {
    #####:  480:      obj->_add_ref ();
        -:  481:    }
    #####:  482:  return obj;
        -:  483:}
        -:  484:
        -:  485:void
    #####:  486:DDS::QueryCondition::_tao_release (QueryCondition_ptr obj)
        -:  487:{
    #####:  488:  ::CORBA::release (obj);
    #####:  489:}
        -:  490:
        -:  491:::CORBA::Boolean
    #####:  492:DDS::QueryCondition::_is_a (const char *value)
        -:  493:{
    #####:  494:  if (
    #####:  495:      ACE_OS::strcmp (
        -:  496:          value,
        -:  497:          "IDL:DDS/Condition:1.0"
    #####:  498:        ) == 0 ||
    #####:  499:      ACE_OS::strcmp (
        -:  500:          value,
        -:  501:          "IDL:DDS/ReadCondition:1.0"
    #####:  502:        ) == 0 ||
    #####:  503:      ACE_OS::strcmp (
        -:  504:          value,
        -:  505:          "IDL:DDS/QueryCondition:1.0"
    #####:  506:        ) == 0 ||
    #####:  507:      ACE_OS::strcmp (
        -:  508:          value,
        -:  509:          "IDL:omg.org/CORBA/LocalObject:1.0"
    #####:  510:        ) == 0 ||
    #####:  511:      ACE_OS::strcmp (
        -:  512:          value,
        -:  513:          "IDL:omg.org/CORBA/Object:1.0"
        -:  514:        ) == 0
        -:  515:    )
        -:  516:    {
    #####:  517:      return true; // success using local knowledge
        -:  518:    }
        -:  519:  else
        -:  520:    {
    #####:  521:      return false;
        -:  522:    }
        -:  523:}
        -:  524:
    #####:  525:const char* DDS::QueryCondition::_interface_repository_id (void) const
        -:  526:{
    #####:  527:  return "IDL:DDS/QueryCondition:1.0";
        -:  528:}
        -:  529:
        -:  530:::CORBA::Boolean
    #####:  531:DDS::QueryCondition::marshal (TAO_OutputCDR & /* cdr */)
        -:  532:{
    #####:  533:  return false;
        -:  534:}
        -:  535:
        -:  536:// TAO_IDL - Generated from
        -:  537:// be/be_visitor_interface/interface_cs.cpp:51
        -:  538:
        -:  539:// Traits specializations for DDS::DataReader.
        -:  540:
        -:  541:DDS::DataReader_ptr
    #####:  542:TAO::Objref_Traits<DDS::DataReader>::duplicate (
        -:  543:    DDS::DataReader_ptr p)
        -:  544:{
    #####:  545:  return DDS::DataReader::_duplicate (p);
        -:  546:}
        -:  547:
        -:  548:void
       18:  549:TAO::Objref_Traits<DDS::DataReader>::release (
        -:  550:    DDS::DataReader_ptr p)
        -:  551:{
       18:  552:  ::CORBA::release (p);
       18:  553:}
        -:  554:
        -:  555:DDS::DataReader_ptr
        6:  556:TAO::Objref_Traits<DDS::DataReader>::nil (void)
        -:  557:{
        6:  558:  return DDS::DataReader::_nil ();
        -:  559:}
        -:  560:
        -:  561:::CORBA::Boolean
    #####:  562:TAO::Objref_Traits<DDS::DataReader>::marshal (
        -:  563:    const DDS::DataReader_ptr p,
        -:  564:    TAO_OutputCDR & cdr)
        -:  565:{
    #####:  566:  return ::CORBA::Object::marshal (p, cdr);
        -:  567:}
        -:  568:
        6:  569:DDS::DataReader::DataReader (void)
        6:  570:{}
        -:  571:
        6:  572:DDS::DataReader::~DataReader (void)
        -:  573:{
        6:  574:}
        -:  575:
        -:  576:DDS::DataReader_ptr
    #####:  577:DDS::DataReader::_narrow (
        -:  578:    ::CORBA::Object_ptr _tao_objref)
        -:  579:{
    #####:  580:  return DataReader::_duplicate (
        -:  581:      dynamic_cast<DataReader_ptr> (_tao_objref)
    #####:  582:    );
        -:  583:}
        -:  584:
        -:  585:DDS::DataReader_ptr
    #####:  586:DDS::DataReader::_unchecked_narrow (
        -:  587:    ::CORBA::Object_ptr _tao_objref)
        -:  588:{
    #####:  589:  return DataReader::_duplicate (
        -:  590:      dynamic_cast<DataReader_ptr> (_tao_objref)
    #####:  591:    );
        -:  592:}
        -:  593:
        -:  594:DDS::DataReader_ptr
       12:  595:DDS::DataReader::_nil (void)
        -:  596:{
       12:  597:  return 0;
        -:  598:}
        -:  599:
        -:  600:DDS::DataReader_ptr
        6:  601:DDS::DataReader::_duplicate (DataReader_ptr obj)
        -:  602:{
        6:  603:  if (! ::CORBA::is_nil (obj))
        -:  604:    {
        6:  605:      obj->_add_ref ();
        -:  606:    }
        6:  607:  return obj;
        -:  608:}
        -:  609:
        -:  610:void
    #####:  611:DDS::DataReader::_tao_release (DataReader_ptr obj)
        -:  612:{
    #####:  613:  ::CORBA::release (obj);
    #####:  614:}
        -:  615:
        -:  616:::CORBA::Boolean
    #####:  617:DDS::DataReader::_is_a (const char *value)
        -:  618:{
    #####:  619:  if (
    #####:  620:      ACE_OS::strcmp (
        -:  621:          value,
        -:  622:          "IDL:DDS/Entity:1.0"
    #####:  623:        ) == 0 ||
    #####:  624:      ACE_OS::strcmp (
        -:  625:          value,
        -:  626:          "IDL:DDS/DataReader:1.0"
    #####:  627:        ) == 0 ||
    #####:  628:      ACE_OS::strcmp (
        -:  629:          value,
        -:  630:          "IDL:omg.org/CORBA/LocalObject:1.0"
    #####:  631:        ) == 0 ||
    #####:  632:      ACE_OS::strcmp (
        -:  633:          value,
        -:  634:          "IDL:omg.org/CORBA/Object:1.0"
        -:  635:        ) == 0
        -:  636:    )
        -:  637:    {
    #####:  638:      return true; // success using local knowledge
        -:  639:    }
        -:  640:  else
        -:  641:    {
    #####:  642:      return false;
        -:  643:    }
        -:  644:}
        -:  645:
    #####:  646:const char* DDS::DataReader::_interface_repository_id (void) const
        -:  647:{
    #####:  648:  return "IDL:DDS/DataReader:1.0";
        -:  649:}
        -:  650:
        -:  651:::CORBA::Boolean
    #####:  652:DDS::DataReader::marshal (TAO_OutputCDR & /* cdr */)
        -:  653:{
    #####:  654:  return false;
        -:  655:}
        -:  656:
        -:  657:// TAO_IDL - Generated from
        -:  658:// be/be_visitor_interface/interface_cs.cpp:51
        -:  659:
        -:  660:// Traits specializations for DDS::Subscriber.
        -:  661:
        -:  662:DDS::Subscriber_ptr
        6:  663:TAO::Objref_Traits<DDS::Subscriber>::duplicate (
        -:  664:    DDS::Subscriber_ptr p)
        -:  665:{
        6:  666:  return DDS::Subscriber::_duplicate (p);
        -:  667:}
        -:  668:
        -:  669:void
       84:  670:TAO::Objref_Traits<DDS::Subscriber>::release (
        -:  671:    DDS::Subscriber_ptr p)
        -:  672:{
       84:  673:  ::CORBA::release (p);
       84:  674:}
        -:  675:
        -:  676:DDS::Subscriber_ptr
       24:  677:TAO::Objref_Traits<DDS::Subscriber>::nil (void)
        -:  678:{
       24:  679:  return DDS::Subscriber::_nil ();
        -:  680:}
        -:  681:
        -:  682:::CORBA::Boolean
    #####:  683:TAO::Objref_Traits<DDS::Subscriber>::marshal (
        -:  684:    const DDS::Subscriber_ptr p,
        -:  685:    TAO_OutputCDR & cdr)
        -:  686:{
    #####:  687:  return ::CORBA::Object::marshal (p, cdr);
        -:  688:}
        -:  689:
        6:  690:DDS::Subscriber::Subscriber (void)
        6:  691:{}
        -:  692:
        6:  693:DDS::Subscriber::~Subscriber (void)
        -:  694:{
        6:  695:}
        -:  696:
        -:  697:DDS::Subscriber_ptr
    #####:  698:DDS::Subscriber::_narrow (
        -:  699:    ::CORBA::Object_ptr _tao_objref)
        -:  700:{
    #####:  701:  return Subscriber::_duplicate (
        -:  702:      dynamic_cast<Subscriber_ptr> (_tao_objref)
    #####:  703:    );
        -:  704:}
        -:  705:
        -:  706:DDS::Subscriber_ptr
    #####:  707:DDS::Subscriber::_unchecked_narrow (
        -:  708:    ::CORBA::Object_ptr _tao_objref)
        -:  709:{
    #####:  710:  return Subscriber::_duplicate (
        -:  711:      dynamic_cast<Subscriber_ptr> (_tao_objref)
    #####:  712:    );
        -:  713:}
        -:  714:
        -:  715:DDS::Subscriber_ptr
       45:  716:DDS::Subscriber::_nil (void)
        -:  717:{
       45:  718:  return 0;
        -:  719:}
        -:  720:
        -:  721:DDS::Subscriber_ptr
       18:  722:DDS::Subscriber::_duplicate (Subscriber_ptr obj)
        -:  723:{
       18:  724:  if (! ::CORBA::is_nil (obj))
        -:  725:    {
       18:  726:      obj->_add_ref ();
        -:  727:    }
       18:  728:  return obj;
        -:  729:}
        -:  730:
        -:  731:void
    #####:  732:DDS::Subscriber::_tao_release (Subscriber_ptr obj)
        -:  733:{
    #####:  734:  ::CORBA::release (obj);
    #####:  735:}
        -:  736:
        -:  737:::CORBA::Boolean
    #####:  738:DDS::Subscriber::_is_a (const char *value)
        -:  739:{
    #####:  740:  if (
    #####:  741:      ACE_OS::strcmp (
        -:  742:          value,
        -:  743:          "IDL:DDS/Entity:1.0"
    #####:  744:        ) == 0 ||
    #####:  745:      ACE_OS::strcmp (
        -:  746:          value,
        -:  747:          "IDL:DDS/Subscriber:1.0"
    #####:  748:        ) == 0 ||
    #####:  749:      ACE_OS::strcmp (
        -:  750:          value,
        -:  751:          "IDL:omg.org/CORBA/LocalObject:1.0"
    #####:  752:        ) == 0 ||
    #####:  753:      ACE_OS::strcmp (
        -:  754:          value,
        -:  755:          "IDL:omg.org/CORBA/Object:1.0"
        -:  756:        ) == 0
        -:  757:    )
        -:  758:    {
    #####:  759:      return true; // success using local knowledge
        -:  760:    }
        -:  761:  else
        -:  762:    {
    #####:  763:      return false;
        -:  764:    }
        -:  765:}
        -:  766:
    #####:  767:const char* DDS::Subscriber::_interface_repository_id (void) const
        -:  768:{
    #####:  769:  return "IDL:DDS/Subscriber:1.0";
        -:  770:}
        -:  771:
        -:  772:::CORBA::Boolean
    #####:  773:DDS::Subscriber::marshal (TAO_OutputCDR & /* cdr */)
        -:  774:{
    #####:  775:  return false;
        -:  776:}
        -:  777:
        -:  778:
        -:  779:OPENDDS_END_VERSIONED_NAMESPACE_DECL
        -:  780:
        -:  781:
