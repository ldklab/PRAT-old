        -:    0:Source:/home/ryan/git/TARGETS/OpenDDS-debloat/ACE_wrappers/ace/OS_NS_strings.inl
        -:    0:Programs:70
        -:    1:// -*- C++ -*-
        -:    2://
        -:    3:// $Id$
        -:    4:
        -:    5:#if defined (ACE_HAS_WCHAR)
        -:    6:#  include "ace/OS_NS_wchar.h"
        -:    7:#endif /* ACE_HAS_WCHAR */
        -:    8:
        -:    9:ACE_BEGIN_VERSIONED_NAMESPACE_DECL
        -:   10:
        -:   11:ACE_INLINE int
        -:   12:ACE_OS::strcasecmp (const char *s, const char *t)
        -:   13:{
        -:   14:#if defined (ACE_LACKS_STRCASECMP)
        -:   15:  return ACE_OS::strcasecmp_emulation (s, t);
        -:   16:#elif defined (ACE_STRCASECMP_EQUIVALENT)
        -:   17:  return ACE_STRCASECMP_EQUIVALENT (s, t);
        -:   18:#else /* ACE_LACKS_STRCASECMP */
        -:   19:  return ::strcasecmp (s, t);
        -:   20:#endif /* ACE_LACKS_STRCASECMP */
        -:   21:}
        -:   22:
        -:   23:#if defined (ACE_HAS_WCHAR)
        -:   24:ACE_INLINE int
        -:   25:ACE_OS::strcasecmp (const wchar_t *s, const wchar_t *t)
        -:   26:{
        -:   27:#  if defined (ACE_LACKS_WCSICMP)
        -:   28:  return ACE_OS::wcsicmp_emulation (s, t);
        -:   29:#  else  /* ACE_LACKS_WCSICMP */
        -:   30:  return ::_wcsicmp (s, t);
        -:   31:#  endif /* ACE_LACKS_WCSICMP */
        -:   32:}
        -:   33:#endif /* ACE_HAS_WCHAR */
        -:   34:
        -:   35:ACE_INLINE int
      365:   36:ACE_OS::strncasecmp (const char *s, const char *t, size_t len)
        -:   37:{
        -:   38:#if defined (ACE_LACKS_STRCASECMP)
        -:   39:  return ACE_OS::strncasecmp_emulation (s, t, len);
        -:   40:#elif defined (ACE_STRNCASECMP_EQUIVALENT)
        -:   41:  return ACE_STRNCASECMP_EQUIVALENT (s, t, len);
        -:   42:#else /* ACE_LACKS_STRCASECMP */
      365:   43:  return ::strncasecmp (s, t, len);
        -:   44:#endif /* ACE_LACKS_STRCASECMP */
        -:   45:}
        -:   46:
        -:   47:#if defined (ACE_HAS_WCHAR)
        -:   48:ACE_INLINE int
        -:   49:ACE_OS::strncasecmp (const wchar_t *s, const wchar_t *t, size_t len)
        -:   50:{
        -:   51:#if defined (ACE_LACKS_WCSNICMP)
        -:   52:  return ACE_OS::wcsnicmp_emulation (s, t, len);
        -:   53:#else  /* ACE_LACKS_WCSNICMP */
        -:   54:  return ::_wcsnicmp (s, t, len);
        -:   55:#endif /* ACE_LACKS_WCSNICMP */
        -:   56:}
        -:   57:#endif /* ACE_HAS_WCHAR */
        -:   58:
        -:   59:ACE_END_VERSIONED_NAMESPACE_DECL
