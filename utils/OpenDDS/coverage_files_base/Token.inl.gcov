        -:    0:Source:/home/ryan/git/OpenDDS-debloat/ACE_wrappers/ace/Token.inl
        -:    0:Programs:51
        -:    1:// -*- C++ -*-
        -:    2://
        -:    3:// $Id: Token.inl 14 2007-02-01 15:49:12Z mitza $
        -:    4:
        -:    5:#include "ace/config-macros.h"
        -:    6:
        -:    7:#if defined (ACE_HAS_THREADS)
        -:    8:
        -:    9:#include "ace/Guard_T.h"
        -:   10:#include "ace/Time_Value.h"
        -:   11:
        -:   12:ACE_BEGIN_VERSIONED_NAMESPACE_DECL
        -:   13:
        -:   14:ACE_INLINE int
        -:   15:ACE_Token::queueing_strategy (void)
        -:   16:{
        -:   17:  return this->queueing_strategy_;
        -:   18:}
        -:   19:
        -:   20:ACE_INLINE void
    #####:   21:ACE_Token::queueing_strategy (int queueing_strategy)
        -:   22:{
    #####:   23:  this->queueing_strategy_ = queueing_strategy == -1 ? -1 : 0;
    #####:   24:}
        -:   25:
        -:   26:ACE_INLINE int
    #####:   27:ACE_Token::remove (void)
        -:   28:{
        -:   29:  ACE_TRACE ("ACE_Token::remove");
        -:   30:  // Don't have an implementation for this yet...
    #####:   31:  ACE_NOTSUP_RETURN (-1);
        -:   32:}
        -:   33:
        -:   34:ACE_INLINE int
    #####:   35:ACE_Token::tryacquire (void)
        -:   36:{
        -:   37:  ACE_TRACE ("ACE_Token::tryacquire");
        -:   38:  return this->shared_acquire
    #####:   39:    (0, 0, (ACE_Time_Value *) &ACE_Time_Value::zero, ACE_Token::WRITE_TOKEN);
        -:   40:}
        -:   41:
        -:   42:ACE_INLINE int
        -:   43:ACE_Token::waiters (void)
        -:   44:{
        -:   45:  ACE_TRACE ("ACE_Token::waiters");
        -:   46:  ACE_GUARD_RETURN (ACE_Thread_Mutex, ace_mon, this->lock_, -1);
        -:   47:
        -:   48:  int const ret = this->waiters_;
        -:   49:  return ret;
        -:   50:}
        -:   51:
        -:   52:ACE_INLINE ACE_thread_t
        -:   53:ACE_Token::current_owner (void)
        -:   54:{
        -:   55:  ACE_TRACE ("ACE_Token::current_owner");
        -:   56:  ACE_GUARD_RETURN (ACE_Thread_Mutex, ace_mon, this->lock_, this->owner_);
        -:   57:
        -:   58:  return this->owner_;
        -:   59:}
        -:   60:
        -:   61:ACE_INLINE int
    #####:   62:ACE_Token::acquire_read (void)
        -:   63:{
        -:   64:  ACE_TRACE ("ACE_Token::acquire_read");
        -:   65:  return this->shared_acquire
    #####:   66:    (0, 0, 0, ACE_Token::READ_TOKEN);
        -:   67:}
        -:   68:
        -:   69:ACE_INLINE int
    #####:   70:ACE_Token::acquire_write (void)
        -:   71:{
        -:   72:  ACE_TRACE ("ACE_Token::acquire_write");
        -:   73:  return this->shared_acquire
    #####:   74:    (0, 0, 0, ACE_Token::WRITE_TOKEN);
        -:   75:}
        -:   76:
        -:   77:ACE_INLINE int
    #####:   78:ACE_Token::tryacquire_read (void)
        -:   79:{
        -:   80:  ACE_TRACE ("ACE_Token::tryacquire_read");
        -:   81:  return this->shared_acquire
    #####:   82:    (0, 0, (ACE_Time_Value *) &ACE_Time_Value::zero, ACE_Token::READ_TOKEN);
        -:   83:}
        -:   84:
        -:   85:ACE_INLINE int
        -:   86:ACE_Token::acquire_read (void (*sleep_hook_func)(void *),
        -:   87:                         void *arg,
        -:   88:                         ACE_Time_Value *timeout)
        -:   89:{
        -:   90:  ACE_TRACE ("ACE_Token::acquire_read");
        -:   91:  return this->shared_acquire (sleep_hook_func, arg, timeout, ACE_Token::READ_TOKEN);
        -:   92:}
        -:   93:
        -:   94:ACE_INLINE int
    #####:   95:ACE_Token::tryacquire_write (void)
        -:   96:{
        -:   97:  ACE_TRACE ("ACE_Token::tryacquire_write");
        -:   98:  return this->shared_acquire
    #####:   99:    (0, 0, (ACE_Time_Value *) &ACE_Time_Value::zero, ACE_Token::WRITE_TOKEN);
        -:  100:}
        -:  101:
        -:  102:ACE_INLINE int
    #####:  103:ACE_Token::tryacquire_write_upgrade (void)
        -:  104:{
        -:  105:  ACE_TRACE ("ACE_Token::tryacquire_write_upgrade");
    #####:  106:  return 0;
        -:  107:}
        -:  108:
        -:  109:ACE_INLINE int
        -:  110:ACE_Token::acquire_write (void (*sleep_hook_func)(void *),
        -:  111:                          void *arg,
        -:  112:                          ACE_Time_Value *timeout)
        -:  113:{
        -:  114:  ACE_TRACE ("ACE_Token::acquire_write");
        -:  115:  return this->shared_acquire (sleep_hook_func, arg, timeout, ACE_Token::WRITE_TOKEN);
        -:  116:}
        -:  117:
        -:  118:ACE_INLINE int
        -:  119:ACE_Token::ACE_Token_Queue_Entry::wait (ACE_Time_Value *timeout, ACE_Thread_Mutex &lock)
        -:  120:{
        -:  121:#if defined (ACE_TOKEN_USES_SEMAPHORE)
        -:  122:  lock.release ();
        -:  123:  int const retv = (timeout == 0 ?
        -:  124:                    this->cv_.acquire () :
        -:  125:                    this->cv_.acquire (*timeout));
        -:  126:  lock.acquire ();
        -:  127:  return retv;
        -:  128:#else
        -:  129:  ACE_UNUSED_ARG (lock);
        -:  130:  return this->cv_.wait (timeout);
        -:  131:#endif /* ACE_TOKEN_USES_SEMAPHORE */
        -:  132:}
        -:  133:
        -:  134:ACE_INLINE int
        -:  135:ACE_Token::ACE_Token_Queue_Entry::signal (void)
        -:  136:{
        -:  137:  return
        -:  138:#if defined (ACE_TOKEN_USES_SEMAPHORE)
        -:  139:    this->cv_.release ();
        -:  140:#else
        -:  141:    this->cv_.signal ();
        -:  142:#endif /* ACE_TOKEN_USES_SEMAPHORE */
        -:  143:}
        -:  144:
        -:  145:ACE_END_VERSIONED_NAMESPACE_DECL
        -:  146:
        -:  147:#endif /* ACE_HAS_THREADS */
        -:  148:
        -:  149:/*****************************************************************************/
        -:  150:
        -:  151:ACE_BEGIN_VERSIONED_NAMESPACE_DECL
        -:  152:
        -:  153:ACE_INLINE int
        -:  154:ACE_Noop_Token::queueing_strategy (void)
        -:  155:{
        -:  156:  return -1;
        -:  157:}
        -:  158:
        -:  159:ACE_INLINE void
        -:  160:ACE_Noop_Token::queueing_strategy (int /* queueing_strategy */)
        -:  161:{
        -:  162:}
        -:  163:
        -:  164:ACE_INLINE int
        -:  165:ACE_Noop_Token::renew (int, ACE_Time_Value *)
        -:  166:{
        -:  167:  return 0;
        -:  168:}
        -:  169:
        -:  170:ACE_INLINE void
        -:  171:ACE_Noop_Token::dump (void) const
        -:  172:{
        -:  173:}
        -:  174:
        -:  175:ACE_END_VERSIONED_NAMESPACE_DECL
        -:  176:
