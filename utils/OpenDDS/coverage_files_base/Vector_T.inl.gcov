        -:    0:Source:/home/ryan/git/TARGETS/OpenDDS-debloat/ACE_wrappers/ace/Vector_T.inl
        -:    0:Programs:70
        -:    1:// -*- C++ -*-
        -:    2://
        -:    3:// $Id$
        -:    4:
        -:    5:#include <algorithm>
        -:    6:
        -:    7:ACE_BEGIN_VERSIONED_NAMESPACE_DECL
        -:    8:
        -:    9:template <class T, size_t DEFAULT_SIZE> ACE_INLINE
       6*:   10:ACE_Vector<T, DEFAULT_SIZE>::ACE_Vector (const size_t init_size,
        -:   11:                                         ACE_Allocator* alloc)
        -:   12:  : ACE_Array<T> (init_size == 0 ? DEFAULT_SIZE : init_size, alloc),
       6*:   13:    length_ (0)
        -:   14:{
       6*:   15:  this->curr_max_size_ = this->max_size ();
       6*:   16:}
------------------
_ZN10ACE_VectorIPN7OpenDDS4DCPS19ReceivedDataElementELm20EEC2EmP13ACE_Allocator:
    #####:   10:ACE_Vector<T, DEFAULT_SIZE>::ACE_Vector (const size_t init_size,
        -:   11:                                         ACE_Allocator* alloc)
        -:   12:  : ACE_Array<T> (init_size == 0 ? DEFAULT_SIZE : init_size, alloc),
    #####:   13:    length_ (0)
        -:   14:{
    #####:   15:  this->curr_max_size_ = this->max_size ();
    #####:   16:}
------------------
_ZN10ACE_VectorIPN7OpenDDS4DCPS19ReceivedDataElementELm20EEC2EmP13ACE_Allocator:
    #####:   10:ACE_Vector<T, DEFAULT_SIZE>::ACE_Vector (const size_t init_size,
        -:   11:                                         ACE_Allocator* alloc)
        -:   12:  : ACE_Array<T> (init_size == 0 ? DEFAULT_SIZE : init_size, alloc),
    #####:   13:    length_ (0)
        -:   14:{
    #####:   15:  this->curr_max_size_ = this->max_size ();
    #####:   16:}
------------------
_ZN10ACE_VectorIPN7OpenDDS4DCPS19ReceivedDataElementELm20EEC2EmP13ACE_Allocator:
    #####:   10:ACE_Vector<T, DEFAULT_SIZE>::ACE_Vector (const size_t init_size,
        -:   11:                                         ACE_Allocator* alloc)
        -:   12:  : ACE_Array<T> (init_size == 0 ? DEFAULT_SIZE : init_size, alloc),
    #####:   13:    length_ (0)
        -:   14:{
    #####:   15:  this->curr_max_size_ = this->max_size ();
    #####:   16:}
------------------
_ZN10ACE_VectorIcLm32EEC2EmP13ACE_Allocator:
    #####:   10:ACE_Vector<T, DEFAULT_SIZE>::ACE_Vector (const size_t init_size,
        -:   11:                                         ACE_Allocator* alloc)
        -:   12:  : ACE_Array<T> (init_size == 0 ? DEFAULT_SIZE : init_size, alloc),
    #####:   13:    length_ (0)
        -:   14:{
    #####:   15:  this->curr_max_size_ = this->max_size ();
    #####:   16:}
------------------
_ZN10ACE_VectorIPN7OpenDDS4DCPS19ReceivedDataElementELm20EEC2EmP13ACE_Allocator:
    #####:   10:ACE_Vector<T, DEFAULT_SIZE>::ACE_Vector (const size_t init_size,
        -:   11:                                         ACE_Allocator* alloc)
        -:   12:  : ACE_Array<T> (init_size == 0 ? DEFAULT_SIZE : init_size, alloc),
    #####:   13:    length_ (0)
        -:   14:{
    #####:   15:  this->curr_max_size_ = this->max_size ();
    #####:   16:}
------------------
_ZN10ACE_VectorIPN3DDS10DataReaderELm32EEC2EmP13ACE_Allocator:
        6:   10:ACE_Vector<T, DEFAULT_SIZE>::ACE_Vector (const size_t init_size,
        -:   11:                                         ACE_Allocator* alloc)
        -:   12:  : ACE_Array<T> (init_size == 0 ? DEFAULT_SIZE : init_size, alloc),
       6*:   13:    length_ (0)
        -:   14:{
        6:   15:  this->curr_max_size_ = this->max_size ();
        6:   16:}
------------------
        -:   17:
        -:   18:template <class T, size_t DEFAULT_SIZE> ACE_INLINE
       6*:   19:ACE_Vector<T, DEFAULT_SIZE>::~ACE_Vector ()
        -:   20:{
       6*:   21:}
------------------
_ZN10ACE_VectorIPN7OpenDDS4DCPS19ReceivedDataElementELm20EED2Ev:
    #####:   19:ACE_Vector<T, DEFAULT_SIZE>::~ACE_Vector ()
        -:   20:{
    #####:   21:}
------------------
_ZN10ACE_VectorIPN7OpenDDS4DCPS19ReceivedDataElementELm20EED2Ev:
    #####:   19:ACE_Vector<T, DEFAULT_SIZE>::~ACE_Vector ()
        -:   20:{
    #####:   21:}
------------------
_ZN10ACE_VectorIPN7OpenDDS4DCPS19ReceivedDataElementELm20EED2Ev:
    #####:   19:ACE_Vector<T, DEFAULT_SIZE>::~ACE_Vector ()
        -:   20:{
    #####:   21:}
------------------
_ZN10ACE_VectorIcLm32EED2Ev:
    #####:   19:ACE_Vector<T, DEFAULT_SIZE>::~ACE_Vector ()
        -:   20:{
    #####:   21:}
------------------
_ZN10ACE_VectorIPN7OpenDDS4DCPS19ReceivedDataElementELm20EED2Ev:
    #####:   19:ACE_Vector<T, DEFAULT_SIZE>::~ACE_Vector ()
        -:   20:{
    #####:   21:}
------------------
_ZN10ACE_VectorIPN3DDS10DataReaderELm32EED2Ev:
        6:   19:ACE_Vector<T, DEFAULT_SIZE>::~ACE_Vector ()
        -:   20:{
        6:   21:}
------------------
        -:   22:
        -:   23:template <class T, size_t DEFAULT_SIZE> ACE_INLINE
        -:   24:size_t ACE_Vector<T, DEFAULT_SIZE>::capacity (void) const
        -:   25:{
        -:   26:  return curr_max_size_;
        -:   27:}
        -:   28:
        -:   29:template <class T, size_t DEFAULT_SIZE> ACE_INLINE
      21*:   30:size_t ACE_Vector<T, DEFAULT_SIZE>::size (void) const
        -:   31:{
      21*:   32:  return length_;
        -:   33:}
------------------
_ZNK10ACE_VectorIPN7OpenDDS4DCPS19ReceivedDataElementELm20EE4sizeEv:
    #####:   30:size_t ACE_Vector<T, DEFAULT_SIZE>::size (void) const
        -:   31:{
    #####:   32:  return length_;
        -:   33:}
------------------
_ZNK10ACE_VectorIPN7OpenDDS4DCPS19ReceivedDataElementELm20EE4sizeEv:
    #####:   30:size_t ACE_Vector<T, DEFAULT_SIZE>::size (void) const
        -:   31:{
    #####:   32:  return length_;
        -:   33:}
------------------
_ZNK10ACE_VectorIPN7OpenDDS4DCPS19ReceivedDataElementELm20EE4sizeEv:
    #####:   30:size_t ACE_Vector<T, DEFAULT_SIZE>::size (void) const
        -:   31:{
    #####:   32:  return length_;
        -:   33:}
------------------
_ZNK10ACE_VectorIcLm32EE4sizeEv:
    #####:   30:size_t ACE_Vector<T, DEFAULT_SIZE>::size (void) const
        -:   31:{
    #####:   32:  return length_;
        -:   33:}
------------------
_ZNK10ACE_VectorIPN7OpenDDS4DCPS19ReceivedDataElementELm20EE4sizeEv:
    #####:   30:size_t ACE_Vector<T, DEFAULT_SIZE>::size (void) const
        -:   31:{
    #####:   32:  return length_;
        -:   33:}
------------------
_ZNK10ACE_VectorIPN3DDS10DataReaderELm32EE4sizeEv:
       21:   30:size_t ACE_Vector<T, DEFAULT_SIZE>::size (void) const
        -:   31:{
       21:   32:  return length_;
        -:   33:}
------------------
        -:   34:
        -:   35:template <class T, size_t DEFAULT_SIZE> ACE_INLINE
        6:   36:void ACE_Vector<T, DEFAULT_SIZE>::clear (void)
        -:   37:{
        6:   38:  length_ = 0;
        6:   39:}
        -:   40:
        -:   41:template <class T, size_t DEFAULT_SIZE> ACE_INLINE
        -:   42:void ACE_Vector<T, DEFAULT_SIZE>::pop_back (void)
        -:   43:{
        -:   44:  if (length_ > 0)
        -:   45:    {
        -:   46:      --length_;
        -:   47:      ACE_Array<T>::size (length_);
        -:   48:    }
        -:   49:}
        -:   50:
        -:   51:template <class T, size_t DEFAULT_SIZE> ACE_INLINE
        -:   52:typename ACE_Array_Base<T>::iterator ACE_Vector<T, DEFAULT_SIZE>::end ()
        -:   53:{
        -:   54:  return ACE_Array_Base<T>::array_ + length_;
        -:   55:}
        -:   56:
        -:   57:template <class T, size_t DEFAULT_SIZE> ACE_INLINE
        -:   58:typename ACE_Array_Base<T>::const_iterator ACE_Vector<T, DEFAULT_SIZE>::end () const
        -:   59:{
        -:   60:  return ACE_Array_Base<T>::array_ + length_;
        -:   61:}
        -:   62:
        -:   63:// Compare this vector with <s> for inequality.
        -:   64:
        -:   65:template <class T, size_t DEFAULT_SIZE> ACE_INLINE bool
        -:   66:ACE_Vector<T, DEFAULT_SIZE>::operator!= (const ACE_Vector<T, DEFAULT_SIZE> &s) const
        -:   67:{
        -:   68:  return !(*this == s);
        -:   69:}
        -:   70:
        -:   71:template <class T, size_t DEFAULT_SIZE> ACE_INLINE void
        -:   72:ACE_Vector<T, DEFAULT_SIZE>::swap (ACE_Vector &rhs)
        -:   73:{
        -:   74:  ACE_Array<T>::swap (rhs);
        -:   75:  std::swap (this->length_, rhs.length_);
        -:   76:  std::swap (this->curr_max_size_, rhs.curr_max_size_);
        -:   77:}
        -:   78:
        -:   79:// ****************************************************************
        -:   80:
        -:   81:template <class T, size_t DEFAULT_SIZE> ACE_INLINE void
        -:   82:ACE_Vector_Iterator<T, DEFAULT_SIZE>::dump (void) const
        -:   83:{
        -:   84:  // ACE_TRACE ("ACE_Vector_Iterator<T>::dump");
        -:   85:}
        -:   86:
        -:   87:template <class T, size_t DEFAULT_SIZE> ACE_INLINE
        -:   88:ACE_Vector_Iterator<T, DEFAULT_SIZE>::ACE_Vector_Iterator (ACE_Vector<T, DEFAULT_SIZE> &v)
        -:   89:    : current_ (0),
        -:   90:      vector_ (v)
        -:   91:{
        -:   92:  // ACE_TRACE ("ACE_Vector_Iterator<T>::ACE_Vector_Iterator");
        -:   93:}
        -:   94:
        -:   95:template <class T, size_t DEFAULT_SIZE> ACE_INLINE int
        -:   96:ACE_Vector_Iterator<T, DEFAULT_SIZE>::advance (void)
        -:   97:{
        -:   98:  // ACE_TRACE ("ACE_Vector_Iterator<T>::advance");
        -:   99:
        -:  100:  if (this->current_ < vector_.size ())
        -:  101:    {
        -:  102:      ++this->current_;
        -:  103:      return 1;
        -:  104:    }
        -:  105:  else
        -:  106:    // Already finished iterating.
        -:  107:    return 0;
        -:  108:}
        -:  109:
        -:  110:template <class T, size_t DEFAULT_SIZE> ACE_INLINE int
        -:  111:ACE_Vector_Iterator<T, DEFAULT_SIZE>::done (void) const
        -:  112:{
        -:  113:  ACE_TRACE ("ACE_Vector_Iterator<T>::done");
        -:  114:
        -:  115:  return this->current_ >= vector_.size ();
        -:  116:}
        -:  117:
        -:  118:ACE_END_VERSIONED_NAMESPACE_DECL
        -:  119:
