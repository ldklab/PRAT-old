        -:    0:Source:/home/ryan/git/TARGETS/OpenDDS-debloat/ACE_wrappers/ace/CDR_Stream.inl
        -:    0:Programs:51
        -:    1:// -*- C++ -*-
        -:    2://
        -:    3:// $Id$
        -:    4:
        -:    5:#include "ace/OS_NS_string.h"
        -:    6:#include "ace/OS_Memory.h"
        -:    7:
        -:    8:// ****************************************************************
        -:    9:
        -:   10:ACE_BEGIN_VERSIONED_NAMESPACE_DECL
        -:   11:
        -:   12:// implementing the special types
        -:   13:ACE_INLINE
    #####:   14:ACE_OutputCDR::from_boolean::from_boolean (ACE_CDR::Boolean b)
    #####:   15:  : val_ (b)
        -:   16:{
    #####:   17:}
        -:   18:
        -:   19:ACE_INLINE
    #####:   20:ACE_InputCDR::to_boolean::to_boolean (ACE_CDR::Boolean &b)
    #####:   21:  : ref_ (b)
        -:   22:{
    #####:   23:}
        -:   24:
        -:   25:ACE_INLINE
    #####:   26:ACE_OutputCDR::from_octet::from_octet (ACE_CDR::Octet o)
    #####:   27:  : val_ (o)
        -:   28:{
    #####:   29:}
------------------
_ZN13ACE_OutputCDR10from_octetC2Eh:
    #####:   26:ACE_OutputCDR::from_octet::from_octet (ACE_CDR::Octet o)
    #####:   27:  : val_ (o)
        -:   28:{
    #####:   29:}
------------------
_ZN13ACE_OutputCDR10from_octetC2Eh:
    #####:   26:ACE_OutputCDR::from_octet::from_octet (ACE_CDR::Octet o)
    #####:   27:  : val_ (o)
        -:   28:{
    #####:   29:}
------------------
        -:   30:
        -:   31:ACE_INLINE
    #####:   32:ACE_InputCDR::to_octet::to_octet (ACE_CDR::Octet &o)
    #####:   33:  : ref_ (o)
        -:   34:{
    #####:   35:}
        -:   36:
        -:   37:ACE_INLINE
        -:   38:ACE_OutputCDR::from_char::from_char (ACE_CDR::Char c)
        -:   39:  : val_ (c)
        -:   40:{
        -:   41:}
        -:   42:
        -:   43:ACE_INLINE
        -:   44:ACE_InputCDR::to_char::to_char (ACE_CDR::Char &c)
        -:   45:  : ref_ (c)
        -:   46:{
        -:   47:}
        -:   48:
        -:   49:ACE_INLINE
        -:   50:ACE_OutputCDR::from_wchar::from_wchar (ACE_CDR::WChar wc)
        -:   51:  : val_ (wc)
        -:   52:{
        -:   53:}
        -:   54:
        -:   55:ACE_INLINE
        -:   56:ACE_InputCDR::to_wchar::to_wchar (ACE_CDR::WChar &wc)
        -:   57:  : ref_ (wc)
        -:   58:{
        -:   59:}
        -:   60:
        -:   61:ACE_INLINE
        -:   62:ACE_OutputCDR::from_string::from_string (ACE_CDR::Char *s,
        -:   63:                                         ACE_CDR::ULong b,
        -:   64:                                         ACE_CDR::Boolean nocopy)
        -:   65:  : val_ (s),
        -:   66:    bound_ (b),
        -:   67:    nocopy_ (nocopy)
        -:   68:{
        -:   69:}
        -:   70:
        -:   71:ACE_INLINE
        -:   72:ACE_OutputCDR::from_string::from_string (const ACE_CDR::Char *s,
        -:   73:                                         ACE_CDR::ULong b,
        -:   74:                                         ACE_CDR::Boolean nocopy)
        -:   75:  : val_ (const_cast<ACE_CDR::Char *> (s)),
        -:   76:    bound_ (b),
        -:   77:    nocopy_ (nocopy)
        -:   78:{
        -:   79:}
        -:   80:
        -:   81:ACE_INLINE
        -:   82:ACE_InputCDR::to_string::to_string (ACE_CDR::Char *&s,
        -:   83:                                    ACE_CDR::ULong b)
        -:   84:  : val_ (const_cast<const ACE_CDR::Char *&> (s)),
        -:   85:    bound_ (b)
        -:   86:{
        -:   87:}
        -:   88:
        -:   89:ACE_INLINE
        -:   90:ACE_InputCDR::to_string::to_string (const ACE_CDR::Char *&s,
        -:   91:                                    ACE_CDR::ULong b)
        -:   92:  : val_ (s),
        -:   93:    bound_ (b)
        -:   94:{
        -:   95:}
        -:   96:
        -:   97:ACE_INLINE
        -:   98:ACE_OutputCDR::from_wstring::from_wstring (ACE_CDR::WChar *ws,
        -:   99:                                           ACE_CDR::ULong b,
        -:  100:                                           ACE_CDR::Boolean nocopy)
        -:  101:  : val_ (ws),
        -:  102:    bound_ (b),
        -:  103:    nocopy_ (nocopy)
        -:  104:{
        -:  105:}
        -:  106:
        -:  107:ACE_INLINE
        -:  108:ACE_OutputCDR::from_wstring::from_wstring (const ACE_CDR::WChar *ws,
        -:  109:                                           ACE_CDR::ULong b,
        -:  110:                                           ACE_CDR::Boolean nocopy)
        -:  111:  : val_ (const_cast<ACE_CDR::WChar *> (ws)),
        -:  112:    bound_ (b),
        -:  113:    nocopy_ (nocopy)
        -:  114:{
        -:  115:}
        -:  116:
        -:  117:ACE_INLINE
        -:  118:ACE_InputCDR::to_wstring::to_wstring (ACE_CDR::WChar *&ws,
        -:  119:                                      ACE_CDR::ULong b)
        -:  120:  : val_ (const_cast<const ACE_CDR::WChar *&> (ws)),
        -:  121:    bound_ (b)
        -:  122:{
        -:  123:}
        -:  124:
        -:  125:ACE_INLINE
        -:  126:ACE_InputCDR::to_wstring::to_wstring (const ACE_CDR::WChar *&ws,
        -:  127:                                      ACE_CDR::ULong b)
        -:  128:  : val_ (ws),
        -:  129:    bound_ (b)
        -:  130:{
        -:  131:}
        -:  132:
        -:  133:ACE_INLINE
        -:  134:ACE_InputCDR::Transfer_Contents::Transfer_Contents (ACE_InputCDR &rhs)
        -:  135:  :  rhs_ (rhs)
        -:  136:{
        -:  137:}
        -:  138:
        -:  139:// ****************************************************************
        -:  140:
        -:  141:ACE_INLINE
        -:  142:ACE_OutputCDR::~ACE_OutputCDR (void)
        -:  143:{
        -:  144:  if (this->start_.cont () != 0)
        -:  145:    {
        -:  146:      ACE_Message_Block::release (this->start_.cont ());
        -:  147:      this->start_.cont (0);
        -:  148:    }
        -:  149:
        -:  150:  this->current_ = 0;
        -:  151:
        -:  152:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  153:  this->monitor_->remove_ref ();
        -:  154:#endif /* ACE_HAS_MONITOR_POINTS==1 */
        -:  155:}
        -:  156:
        -:  157:ACE_INLINE void
        -:  158:ACE_OutputCDR::reset (void)
        -:  159:{
        -:  160:  this->current_ = &this->start_;
        -:  161:  this->current_is_writable_ = true;
        -:  162:  ACE_CDR::mb_align (&this->start_);
        -:  163:
        -:  164:#if !defined (ACE_LACKS_CDR_ALIGNMENT)
        -:  165:  this->current_alignment_ = 0;
        -:  166:#endif /* ACE_LACKS_CDR_ALIGNMENT */
        -:  167:
        -:  168:  // It is tempting not to remove the memory, but we need to do so to
        -:  169:  // release any potential user buffers chained in the continuation
        -:  170:  // field.
        -:  171:
        -:  172:  ACE_Message_Block * const cont = this->start_.cont ();
        -:  173:  if (cont)
        -:  174:    {
        -:  175:      ACE_Message_Block::release (cont);
        -:  176:      this->start_.cont (0);
        -:  177:    }
        -:  178:
        -:  179:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  180:  this->monitor_->receive (this->start_.total_size ());
        -:  181:#endif /* ACE_HAS_MONITOR_POINTS==1 */
        -:  182:}
        -:  183:
        -:  184:// Encode the CDR stream.
        -:  185:
        -:  186:ACE_INLINE ACE_CDR::Boolean
    #####:  187:ACE_OutputCDR::write_octet (ACE_CDR::Octet x)
        -:  188:{
    #####:  189:  return this->write_1 (&x);
        -:  190:}
        -:  191:
        -:  192:ACE_INLINE ACE_CDR::Boolean
    #####:  193:ACE_OutputCDR::write_boolean (ACE_CDR::Boolean x)
        -:  194:{
        -:  195:  return
        -:  196:    static_cast<ACE_CDR::Boolean> (
    #####:  197:      this->write_octet (
        -:  198:        x
        -:  199:        ? static_cast<ACE_CDR::Octet> (1)
    #####:  200:        : static_cast<ACE_CDR::Octet> (0)));
        -:  201:}
        -:  202:
        -:  203:ACE_INLINE ACE_CDR::Boolean
        -:  204:ACE_OutputCDR::write_char (ACE_CDR::Char x)
        -:  205:{
        -:  206:  if (this->char_translator_ == 0)
        -:  207:    {
        -:  208:      ACE_CDR::Octet temp = static_cast<ACE_CDR::Octet> (x);
        -:  209:      return this->write_1 (&temp);
        -:  210:    }
        -:  211:  return this->char_translator_->write_char (*this, x);
        -:  212:}
        -:  213:
        -:  214:ACE_INLINE ACE_CDR::Boolean
        -:  215:ACE_OutputCDR::write_short (ACE_CDR::Short x)
        -:  216:{
        -:  217:  ACE_CDR::UShort temp = static_cast<ACE_CDR::UShort> (x);
        -:  218:  return this->write_2 (&temp);
        -:  219:}
        -:  220:
        -:  221:ACE_INLINE ACE_CDR::Boolean
        -:  222:ACE_OutputCDR::write_ushort (ACE_CDR::UShort x)
        -:  223:{
        -:  224:  return this->write_2 (&x);
        -:  225:}
        -:  226:
        -:  227:ACE_INLINE ACE_CDR::Boolean
        -:  228:ACE_OutputCDR::write_long (ACE_CDR::Long x)
        -:  229:{
        -:  230:  ACE_CDR::ULong temp = static_cast<ACE_CDR::ULong> (x);
        -:  231:  return this->write_4 (&temp);
        -:  232:}
        -:  233:
        -:  234:ACE_INLINE ACE_CDR::Boolean
        -:  235:ACE_OutputCDR::write_ulong (ACE_CDR::ULong x)
        -:  236:{
        -:  237:  return this->write_4 (&x);
        -:  238:}
        -:  239:
        -:  240:ACE_INLINE ACE_CDR::Boolean
        -:  241:ACE_OutputCDR::write_longlong (const ACE_CDR::LongLong &x)
        -:  242:{
        -:  243:  void const * const temp = &x;
        -:  244:  return this->write_8 (reinterpret_cast<ACE_CDR::ULongLong const *> (temp));
        -:  245:}
        -:  246:
        -:  247:ACE_INLINE ACE_CDR::Boolean
        -:  248:ACE_OutputCDR::write_ulonglong (const ACE_CDR::ULongLong &x)
        -:  249:{
        -:  250:  return this->write_8 (&x);
        -:  251:}
        -:  252:
        -:  253:ACE_INLINE ACE_CDR::Boolean
        -:  254:ACE_OutputCDR::write_float (ACE_CDR::Float x)
        -:  255:{
        -:  256:  void const * const temp = &x;
        -:  257:  return this->write_4 (reinterpret_cast<ACE_CDR::ULong const *> (temp));
        -:  258:}
        -:  259:
        -:  260:ACE_INLINE ACE_CDR::Boolean
        -:  261:ACE_OutputCDR::write_double (const ACE_CDR::Double &x)
        -:  262:{
        -:  263:  void const * const temp = &x;
        -:  264:  return this->write_8 (reinterpret_cast<ACE_CDR::ULongLong const *> (temp));
        -:  265:}
        -:  266:
        -:  267:ACE_INLINE ACE_CDR::Boolean
        -:  268:ACE_OutputCDR::write_longdouble (const ACE_CDR::LongDouble &x)
        -:  269:{
        -:  270:  return this->write_16 (&x);
        -:  271:}
        -:  272:
        -:  273:ACE_INLINE ACE_CDR::Boolean
        -:  274:ACE_OutputCDR::write_fixed (const ACE_CDR::Fixed &x)
        -:  275:{
        -:  276:  int n;
        -:  277:  const ACE_CDR::Octet *arr = x.to_octets (n);
        -:  278:  return this->write_array (arr, ACE_CDR::OCTET_SIZE, ACE_CDR::OCTET_ALIGN, n);
        -:  279:}
        -:  280:
        -:  281:ACE_INLINE ACE_CDR::Boolean
    #####:  282:ACE_OutputCDR::write_string (const ACE_CDR::Char *x)
        -:  283:{
    #####:  284:  if (x)
        -:  285:    {
        -:  286:      ACE_CDR::ULong const len =
    #####:  287:        static_cast<ACE_CDR::ULong> (ACE_OS::strlen (x));
    #####:  288:      return this->write_string (len, x);
        -:  289:    }
        -:  290:
    #####:  291:  return this->write_string (0, 0);
        -:  292:}
        -:  293:
        -:  294:ACE_INLINE ACE_CDR::Boolean
        -:  295:ACE_OutputCDR::write_wstring (const ACE_CDR::WChar *x)
        -:  296:{
        -:  297:  if (x)
        -:  298:    {
        -:  299:      ACE_CDR::ULong const len =
        -:  300:        static_cast<ACE_CDR::ULong> (ACE_OS::strlen (x));
        -:  301:      return this->write_wstring (len, x);
        -:  302:    }
        -:  303:
        -:  304:  return this->write_wstring (0, 0);
        -:  305:}
        -:  306:
        -:  307:ACE_INLINE ACE_CDR::Boolean
        -:  308:ACE_OutputCDR::write_char_array (const ACE_CDR::Char *x,
        -:  309:                                 ACE_CDR::ULong length)
        -:  310:{
        -:  311:  if (this->char_translator_ == 0)
        -:  312:    return this->write_array (x,
        -:  313:                              ACE_CDR::OCTET_SIZE,
        -:  314:                              ACE_CDR::OCTET_ALIGN,
        -:  315:                              length);
        -:  316:  return this->char_translator_->write_char_array (*this, x, length);
        -:  317:}
        -:  318:
        -:  319:ACE_INLINE ACE_CDR::Boolean
        -:  320:ACE_OutputCDR::write_wchar_array (const ACE_CDR::WChar* x,
        -:  321:                                  ACE_CDR::ULong length)
        -:  322:{
        -:  323:  if (this->wchar_translator_)
        -:  324:    return this->wchar_translator_->write_wchar_array (*this, x, length);
        -:  325:
        -:  326:  if (ACE_OutputCDR::wchar_maxbytes_ == 0)
        -:  327:    {
        -:  328:      errno = EACCES;
        -:  329:      return (ACE_CDR::Boolean) (this->good_bit_ = false);
        -:  330:    }
        -:  331:
        -:  332:  if (ACE_OutputCDR::wchar_maxbytes_ == sizeof (ACE_CDR::WChar))
        -:  333:    return this->write_array (x,
        -:  334:                              sizeof (ACE_CDR::WChar),
        -:  335:                              sizeof (ACE_CDR::WChar) == 2
        -:  336:                              ? ACE_CDR::SHORT_ALIGN
        -:  337:                              : ACE_CDR::LONG_ALIGN,
        -:  338:                              length);
        -:  339:  return this->write_wchar_array_i (x,length);
        -:  340:}
        -:  341:
        -:  342:ACE_INLINE ACE_CDR::Boolean
        -:  343:ACE_OutputCDR::write_octet_array (const ACE_CDR::Octet* x,
        -:  344:                                  ACE_CDR::ULong length)
        -:  345:{
        -:  346:  return this->write_array (x,
        -:  347:                            ACE_CDR::OCTET_SIZE,
        -:  348:                            ACE_CDR::OCTET_ALIGN,
        -:  349:                            length);
        -:  350:}
        -:  351:
        -:  352:ACE_INLINE ACE_CDR::Boolean
        -:  353:ACE_OutputCDR::write_short_array (const ACE_CDR::Short *x,
        -:  354:                                  ACE_CDR::ULong length)
        -:  355:{
        -:  356:  return this->write_array (x,
        -:  357:                            ACE_CDR::SHORT_SIZE,
        -:  358:                            ACE_CDR::SHORT_ALIGN,
        -:  359:                            length);
        -:  360:}
        -:  361:
        -:  362:ACE_INLINE ACE_CDR::Boolean
        -:  363:ACE_OutputCDR::write_ushort_array (const ACE_CDR::UShort *x,
        -:  364:                                   ACE_CDR::ULong length)
        -:  365:{
        -:  366:  return this->write_array (x,
        -:  367:                            ACE_CDR::SHORT_SIZE,
        -:  368:                            ACE_CDR::SHORT_ALIGN,
        -:  369:                            length);
        -:  370:}
        -:  371:
        -:  372:ACE_INLINE ACE_CDR::Boolean
        -:  373:ACE_OutputCDR::write_long_array (const ACE_CDR::Long *x,
        -:  374:                                 ACE_CDR::ULong length)
        -:  375:{
        -:  376:  return this->write_array (x,
        -:  377:                            ACE_CDR::LONG_SIZE,
        -:  378:                            ACE_CDR::LONG_ALIGN,
        -:  379:                            length);
        -:  380:}
        -:  381:
        -:  382:ACE_INLINE ACE_CDR::Boolean
        -:  383:ACE_OutputCDR::write_ulong_array (const ACE_CDR::ULong *x,
        -:  384:                                  ACE_CDR::ULong length)
        -:  385:{
        -:  386:  return this->write_array (x,
        -:  387:                            ACE_CDR::LONG_SIZE,
        -:  388:                            ACE_CDR::LONG_ALIGN,
        -:  389:                            length);
        -:  390:}
        -:  391:
        -:  392:ACE_INLINE ACE_CDR::Boolean
        -:  393:ACE_OutputCDR::write_longlong_array (const ACE_CDR::LongLong *x,
        -:  394:                                     ACE_CDR::ULong length)
        -:  395:{
        -:  396:  return this->write_array (x,
        -:  397:                            ACE_CDR::LONGLONG_SIZE,
        -:  398:                            ACE_CDR::LONGLONG_ALIGN,
        -:  399:                            length);
        -:  400:}
        -:  401:
        -:  402:ACE_INLINE ACE_CDR::Boolean
        -:  403:ACE_OutputCDR::write_ulonglong_array (const ACE_CDR::ULongLong *x,
        -:  404:                                      ACE_CDR::ULong length)
        -:  405:{
        -:  406:  return this->write_array (x,
        -:  407:                            ACE_CDR::LONGLONG_SIZE,
        -:  408:                            ACE_CDR::LONGLONG_ALIGN,
        -:  409:                            length);
        -:  410:}
        -:  411:
        -:  412:ACE_INLINE ACE_CDR::Boolean
        -:  413:ACE_OutputCDR::write_float_array (const ACE_CDR::Float *x,
        -:  414:                                  ACE_CDR::ULong length)
        -:  415:{
        -:  416:  return this->write_array (x,
        -:  417:                            ACE_CDR::LONG_SIZE,
        -:  418:                            ACE_CDR::LONG_ALIGN,
        -:  419:                            length);
        -:  420:}
        -:  421:
        -:  422:
        -:  423:ACE_INLINE ACE_CDR::Boolean
        -:  424:ACE_OutputCDR::write_double_array (const ACE_CDR::Double *x,
        -:  425:                                   ACE_CDR::ULong length)
        -:  426:{
        -:  427:  return this->write_array (x,
        -:  428:                            ACE_CDR::LONGLONG_SIZE,
        -:  429:                            ACE_CDR::LONGLONG_ALIGN,
        -:  430:                            length);
        -:  431:}
        -:  432:
        -:  433:ACE_INLINE ACE_CDR::Boolean
        -:  434:ACE_OutputCDR::write_longdouble_array (const ACE_CDR::LongDouble* x,
        -:  435:                                       ACE_CDR::ULong length)
        -:  436:{
        -:  437:  return this->write_array (x,
        -:  438:                            ACE_CDR::LONGDOUBLE_SIZE,
        -:  439:                            ACE_CDR::LONGDOUBLE_ALIGN,
        -:  440:                            length);
        -:  441:}
        -:  442:
        -:  443:ACE_INLINE bool
    #####:  444:ACE_OutputCDR::good_bit (void) const
        -:  445:{
    #####:  446:  return this->good_bit_;
        -:  447:}
        -:  448:
        -:  449:ACE_INLINE int
        -:  450:ACE_OutputCDR::adjust (size_t size,
        -:  451:                       size_t align,
        -:  452:                       char*& buf)
        -:  453:{
        -:  454:  if (!this->current_is_writable_)
        -:  455:    return this->grow_and_adjust (size, align, buf);
        -:  456:
        -:  457:#if !defined (ACE_LACKS_CDR_ALIGNMENT)
        -:  458:  size_t const offset =
        -:  459:    ACE_align_binary (this->current_alignment_, align)
        -:  460:    - this->current_alignment_;
        -:  461:
        -:  462:  buf = this->current_->wr_ptr () + offset;
        -:  463:#else
        -:  464:  buf = this->current_->wr_ptr ();
        -:  465:#endif /* ACE_LACKS_CDR_ALIGNMENT */
        -:  466:
        -:  467:  char * const end = buf + size;
        -:  468:
        -:  469:  if (end <= this->current_->end () &&
        -:  470:      end >= buf)
        -:  471:    {
        -:  472:#if !defined (ACE_LACKS_CDR_ALIGNMENT)
        -:  473:      this->current_alignment_ += offset + size;
        -:  474:#endif /* ACE_LACKS_CDR_ALIGNMENT */
        -:  475:      this->current_->wr_ptr (end);
        -:  476:
        -:  477:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  478:      this->monitor_->receive (this->total_length ());
        -:  479:#endif /* ACE_HAS_MONITOR_POINTS==1 */
        -:  480:
        -:  481:      return 0;
        -:  482:    }
        -:  483:
        -:  484:  return this->grow_and_adjust (size, align, buf);
        -:  485:}
        -:  486:
        -:  487:ACE_INLINE int
        -:  488:ACE_OutputCDR::adjust (size_t size, char*& buf)
        -:  489:{
        -:  490:  return this->adjust (size, size, buf);
        -:  491:}
        -:  492:
        -:  493:ACE_INLINE void
        -:  494:ACE_OutputCDR::set_version (ACE_CDR::Octet major, ACE_CDR::Octet minor)
        -:  495:{
        -:  496:  this->major_version_ = major;
        -:  497:  this->minor_version_ = minor;
        -:  498:}
        -:  499:
        -:  500:ACE_INLINE void
        -:  501:ACE_OutputCDR::get_version (ACE_CDR::Octet &major, ACE_CDR::Octet &minor)
        -:  502:{
        -:  503:  major = this->major_version_;
        -:  504:  minor = this->minor_version_;
        -:  505:}
        -:  506:
        -:  507:
        -:  508:ACE_INLINE const ACE_Message_Block*
        -:  509:ACE_OutputCDR::begin (void) const
        -:  510:{
        -:  511:  return &this->start_;
        -:  512:}
        -:  513:
        -:  514:ACE_INLINE const ACE_Message_Block*
        -:  515:ACE_OutputCDR::end (void) const
        -:  516:{
        -:  517:  return this->current_->cont ();
        -:  518:}
        -:  519:
        -:  520:ACE_INLINE const ACE_Message_Block*
        -:  521:ACE_OutputCDR::current (void) const
        -:  522:{
        -:  523:  return this->current_;
        -:  524:}
        -:  525:
        -:  526:ACE_INLINE size_t
        -:  527:ACE_OutputCDR::total_length (void) const
        -:  528:{
        -:  529:  return ACE_CDR::total_length (this->begin (), this->end ());
        -:  530:}
        -:  531:
        -:  532:ACE_INLINE const char*
        -:  533:ACE_OutputCDR::buffer (void) const
        -:  534:{
        -:  535:  return this->start_.rd_ptr ();
        -:  536:}
        -:  537:
        -:  538:ACE_INLINE size_t
        -:  539:ACE_OutputCDR::length (void) const
        -:  540:{
        -:  541:  return this->start_.length ();
        -:  542:}
        -:  543:
        -:  544:ACE_INLINE bool
        -:  545:ACE_OutputCDR::do_byte_swap (void) const
        -:  546:{
        -:  547:  return this->do_byte_swap_;
        -:  548:}
        -:  549:
        -:  550:ACE_INLINE int
        -:  551:ACE_OutputCDR::byte_order (void) const
        -:  552:{
        -:  553:  if (this->do_byte_swap ())
        -:  554:    return !ACE_CDR_BYTE_ORDER;
        -:  555:  else
        -:  556:    return ACE_CDR_BYTE_ORDER;
        -:  557:}
        -:  558:
        -:  559:ACE_INLINE void
        -:  560:ACE_OutputCDR::reset_byte_order (int byte_order)
        -:  561:{
        -:  562:  this->do_byte_swap_ = (byte_order != ACE_CDR_BYTE_ORDER);
        -:  563:}
        -:  564:
        -:  565:ACE_INLINE size_t
        -:  566:ACE_OutputCDR::current_alignment (void) const
        -:  567:{
        -:  568:#if !defined (ACE_LACKS_CDR_ALIGNMENT)
        -:  569:  return this->current_alignment_;
        -:  570:#else
        -:  571:  // Default value set to 0
        -:  572:  return 0;
        -:  573:#endif /* ACE_LACKS_CDR_ALIGNMENT */
        -:  574:}
        -:  575:
        -:  576:ACE_INLINE void
        -:  577:ACE_OutputCDR::current_alignment (size_t current_alignment)
        -:  578:{
        -:  579:#if !defined (ACE_LACKS_CDR_ALIGNMENT)
        -:  580:  this->current_alignment_ = current_alignment;
        -:  581:#else
        -:  582:  ACE_UNUSED_ARG (current_alignment);
        -:  583:#endif /* ACE_LACKS_CDR_ALIGNMENT */
        -:  584:}
        -:  585:
        -:  586:ACE_INLINE int
        -:  587:ACE_OutputCDR::align_write_ptr (size_t alignment)
        -:  588:{
        -:  589:#if !defined (ACE_LACKS_CDR_ALIGNMENT)
        -:  590:  char *dummy;
        -:  591:  return this->adjust (0, alignment, dummy);
        -:  592:#else
        -:  593:  ACE_UNUSED_ARG (alignment);
        -:  594:  // A return value of -1 from this function is used
        -:  595:  // to indicate failure, returning 0
        -:  596:  return 0;
        -:  597:#endif /* ACE_LACKS_CDR_ALIGNMENT */
        -:  598:}
        -:  599:
        -:  600:ACE_INLINE ACE_Char_Codeset_Translator *
        -:  601:ACE_OutputCDR::char_translator (void) const
        -:  602:{
        -:  603:  return this->char_translator_;
        -:  604:}
        -:  605:
        -:  606:ACE_INLINE ACE_WChar_Codeset_Translator *
        -:  607:ACE_OutputCDR::wchar_translator (void) const
        -:  608:{
        -:  609:  return this->wchar_translator_;
        -:  610:}
        -:  611:
        -:  612:ACE_INLINE void
        -:  613:ACE_OutputCDR::char_translator (ACE_Char_Codeset_Translator * ctran)
        -:  614:{
        -:  615:  this->char_translator_ = ctran;
        -:  616:}
        -:  617:
        -:  618:ACE_INLINE void
        -:  619:ACE_OutputCDR::wchar_translator (ACE_WChar_Codeset_Translator * wctran)
        -:  620:{
        -:  621:  this->wchar_translator_ = wctran;
        -:  622:}
        -:  623:
        -:  624:// ****************************************************************
        -:  625:
        -:  626:ACE_INLINE
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD0Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
_ZN12ACE_InputCDRD2Ev:
    #####:  627:ACE_InputCDR::~ACE_InputCDR (void)
        -:  628:{
        -:  629:#if defined (ACE_HAS_MONITOR_POINTS) && (ACE_HAS_MONITOR_POINTS == 1)
        -:  630:  this->monitor_->remove_ref ();
        -:  631:#endif /* ACE_HAS_MONITOR_POINTS==1 */
    #####:  632:}
------------------
        -:  633:
        -:  634:ACE_INLINE ACE_CDR::Boolean
    #####:  635:ACE_InputCDR::read_octet (ACE_CDR::Octet& x)
        -:  636:{
    #####:  637:  return this->read_1 (&x);
        -:  638:}
        -:  639:
        -:  640:ACE_INLINE ACE_CDR::Boolean
    #####:  641:ACE_InputCDR::read_boolean (ACE_CDR::Boolean& x)
        -:  642:{
    #####:  643:  ACE_CDR::Octet tmp = 0;
    #####:  644:  (void) this->read_octet (tmp);
    #####:  645:  x = tmp ? true : false;
    #####:  646:  return (ACE_CDR::Boolean) this->good_bit_;
        -:  647:}
        -:  648:
        -:  649:ACE_INLINE ACE_CDR::Boolean
        -:  650:ACE_InputCDR::read_char (ACE_CDR::Char &x)
        -:  651:{
        -:  652:  if (this->char_translator_ == 0)
        -:  653:    {
        -:  654:      void *temp = &x;
        -:  655:      return this->read_1 (reinterpret_cast<ACE_CDR::Octet*> (temp));
        -:  656:    }
        -:  657:  return this->char_translator_->read_char (*this, x);
        -:  658:}
        -:  659:
        -:  660:
        -:  661:ACE_INLINE ACE_CDR::Boolean
        -:  662:ACE_InputCDR::read_short (ACE_CDR::Short &x)
        -:  663:{
        -:  664:  void *temp = &x;
        -:  665:  return this->read_2 (reinterpret_cast<ACE_CDR::UShort*> (temp));
        -:  666:}
        -:  667:
        -:  668:ACE_INLINE ACE_CDR::Boolean
        -:  669:ACE_InputCDR::read_ushort (ACE_CDR::UShort &x)
        -:  670:{
        -:  671:  return this->read_2 (&x);
        -:  672:}
        -:  673:
        -:  674:
        -:  675:ACE_INLINE ACE_CDR::Boolean
        -:  676:ACE_InputCDR::read_long (ACE_CDR::Long &x)
        -:  677:{
        -:  678:  void *temp = &x;
        -:  679:  return this->read_4 (reinterpret_cast<ACE_CDR::ULong*> (temp));
        -:  680:}
        -:  681:
        -:  682:
        -:  683:ACE_INLINE ACE_CDR::Boolean
        -:  684:ACE_InputCDR::read_ulong (ACE_CDR::ULong &x)
        -:  685:{
        -:  686:  return this->read_4 (&x);
        -:  687:}
        -:  688:
        -:  689:
        -:  690:ACE_INLINE ACE_CDR::Boolean
        -:  691:ACE_InputCDR::read_longlong (ACE_CDR::LongLong &x)
        -:  692:{
        -:  693:  void *temp = &x;
        -:  694:  return this->read_8 (reinterpret_cast<ACE_CDR::ULongLong*> (temp));
        -:  695:}
        -:  696:
        -:  697:ACE_INLINE ACE_CDR::Boolean
        -:  698:ACE_InputCDR::read_ulonglong (ACE_CDR::ULongLong &x)
        -:  699:{
        -:  700:  return this->read_8 (&x);
        -:  701:}
        -:  702:
        -:  703:ACE_INLINE ACE_CDR::Boolean
        -:  704:ACE_InputCDR::read_float (ACE_CDR::Float &x)
        -:  705:{
        -:  706:  void *temp = &x;
        -:  707:  return this->read_4 (reinterpret_cast<ACE_CDR::ULong*> (temp));
        -:  708:}
        -:  709:
        -:  710:ACE_INLINE ACE_CDR::Boolean
        -:  711:ACE_InputCDR::read_double (ACE_CDR::Double &x)
        -:  712:{
        -:  713:  void *temp = &x;
        -:  714:  return this->read_8 (reinterpret_cast<ACE_CDR::ULongLong*> (temp));
        -:  715:}
        -:  716:
        -:  717:ACE_INLINE ACE_CDR::Boolean
        -:  718:ACE_InputCDR::read_longdouble (ACE_CDR::LongDouble &x)
        -:  719:{
        -:  720:  return this->read_16 (&x);
        -:  721:}
        -:  722:
        -:  723:ACE_INLINE ACE_CDR::Boolean
        -:  724:ACE_InputCDR::read_fixed (ACE_CDR::Fixed &x)
        -:  725:{
        -:  726:  ACE_CDR::Octet a[16];
        -:  727:  for (int i = 0; i < 16; ++i)
        -:  728:    {
        -:  729:      if (!this->read_1 (a + i))
        -:  730:        return false;
        -:  731:      const unsigned low = a[i] & 0xf;
        -:  732:      if (low == ACE_CDR::Fixed::POSITIVE ||
        -:  733:          low == ACE_CDR::Fixed::NEGATIVE)
        -:  734:        {
        -:  735:          x = ACE_CDR::Fixed::from_octets (a, i + 1);
        -:  736:          return true;
        -:  737:        }
        -:  738:    }
        -:  739:
        -:  740:  return false;
        -:  741:}
        -:  742:
        -:  743:ACE_INLINE size_t
        -:  744:ACE_InputCDR::length (void) const
        -:  745:{
        -:  746:  return this->start_.length ();
        -:  747:}
        -:  748:
        -:  749:ACE_INLINE ACE_CDR::Boolean
        -:  750:ACE_InputCDR::read_char_array (ACE_CDR::Char* x,
        -:  751:                               ACE_CDR::ULong length)
        -:  752:{
        -:  753:  // Make sure the length of the array isn't greater than the length of
        -:  754:  // the stream.
        -:  755:  if (length > this->length ())
        -:  756:    {
        -:  757:      this->good_bit_ = false;
        -:  758:      return false;
        -:  759:    }
        -:  760:
        -:  761:  if (this->char_translator_ == 0)
        -:  762:    return this->read_array (x,
        -:  763:                             ACE_CDR::OCTET_SIZE,
        -:  764:                             ACE_CDR::OCTET_ALIGN,
        -:  765:                             length);
        -:  766:  return this->char_translator_->read_char_array (*this, x, length);
        -:  767:}
        -:  768:
        -:  769:ACE_INLINE ACE_CDR::Boolean
        -:  770:ACE_InputCDR::read_wchar_array (ACE_CDR::WChar* x,
        -:  771:                                ACE_CDR::ULong length)
        -:  772:{
        -:  773:  // Make sure the length of the array isn't greater than the length of
        -:  774:  // the stream.
        -:  775:  if (length * ACE_OutputCDR::wchar_maxbytes_ > this->length ())
        -:  776:    {
        -:  777:      this->good_bit_ = false;
        -:  778:      return false;
        -:  779:    }
        -:  780:
        -:  781:  if (this->wchar_translator_ != 0)
        -:  782:    return this->wchar_translator_->read_wchar_array (*this, x, length);
        -:  783:  if (ACE_OutputCDR::wchar_maxbytes_ != sizeof (ACE_CDR::WChar))
        -:  784:    return this->read_wchar_array_i (x, length);
        -:  785:  return this->read_array (x,
        -:  786:                           sizeof (ACE_CDR::WChar),
        -:  787:                           sizeof (ACE_CDR::WChar) == 2
        -:  788:                           ? ACE_CDR::SHORT_ALIGN
        -:  789:                           : ACE_CDR::LONG_ALIGN,
        -:  790:                           length);
        -:  791:}
        -:  792:
        -:  793:ACE_INLINE ACE_CDR::Boolean
        -:  794:ACE_InputCDR::read_octet_array (ACE_CDR::Octet* x,
        -:  795:                                ACE_CDR::ULong length)
        -:  796:{
        -:  797:  // Make sure the length of the array isn't greater than the length of
        -:  798:  // the stream.
        -:  799:  if (length * ACE_CDR::OCTET_SIZE > this->length ())
        -:  800:    {
        -:  801:      this->good_bit_ = false;
        -:  802:      return false;
        -:  803:    }
        -:  804:
        -:  805:  return this->read_array (x,
        -:  806:                           ACE_CDR::OCTET_SIZE,
        -:  807:                           ACE_CDR::OCTET_ALIGN,
        -:  808:                           length);
        -:  809:}
        -:  810:
        -:  811:ACE_INLINE ACE_CDR::Boolean
        -:  812:ACE_InputCDR::read_short_array (ACE_CDR::Short *x,
        -:  813:                                ACE_CDR::ULong length)
        -:  814:{
        -:  815:  // Make sure the length of the array isn't greater than the length of
        -:  816:  // the stream.
        -:  817:  if (length * ACE_CDR::SHORT_SIZE > this->length ())
        -:  818:    {
        -:  819:      this->good_bit_ = false;
        -:  820:      return false;
        -:  821:    }
        -:  822:
        -:  823:  return this->read_array (x,
        -:  824:                           ACE_CDR::SHORT_SIZE,
        -:  825:                           ACE_CDR::SHORT_ALIGN,
        -:  826:                           length);
        -:  827:}
        -:  828:
        -:  829:ACE_INLINE ACE_CDR::Boolean
        -:  830:ACE_InputCDR::read_ushort_array (ACE_CDR::UShort *x,
        -:  831:                                 ACE_CDR::ULong length)
        -:  832:{
        -:  833:  // Make sure the length of the array isn't greater than the length of
        -:  834:  // the stream.
        -:  835:  if (length * ACE_CDR::SHORT_SIZE > this->length ())
        -:  836:    {
        -:  837:      this->good_bit_ = false;
        -:  838:      return false;
        -:  839:    }
        -:  840:
        -:  841:  return this->read_array (x,
        -:  842:                           ACE_CDR::SHORT_SIZE,
        -:  843:                           ACE_CDR::SHORT_ALIGN,
        -:  844:                           length);
        -:  845:}
        -:  846:
        -:  847:ACE_INLINE ACE_CDR::Boolean
        -:  848:ACE_InputCDR::read_long_array (ACE_CDR::Long *x,
        -:  849:                               ACE_CDR::ULong length)
        -:  850:{
        -:  851:  // Make sure the length of the array isn't greater than the length of
        -:  852:  // the stream.
        -:  853:  if (length * ACE_CDR::LONG_SIZE > this->length ())
        -:  854:    {
        -:  855:      this->good_bit_ = false;
        -:  856:      return false;
        -:  857:    }
        -:  858:
        -:  859:  return this->read_array (x,
        -:  860:                           ACE_CDR::LONG_SIZE,
        -:  861:                           ACE_CDR::LONG_ALIGN,
        -:  862:                           length);
        -:  863:}
        -:  864:
        -:  865:ACE_INLINE ACE_CDR::Boolean
        -:  866:ACE_InputCDR::read_ulong_array (ACE_CDR::ULong *x,
        -:  867:                                ACE_CDR::ULong length)
        -:  868:{
        -:  869:  // Make sure the length of the array isn't greater than the length of
        -:  870:  // the stream.
        -:  871:  if (length * ACE_CDR::LONG_SIZE > this->length ())
        -:  872:    {
        -:  873:      this->good_bit_ = false;
        -:  874:      return false;
        -:  875:    }
        -:  876:
        -:  877:  return this->read_array (x,
        -:  878:                           ACE_CDR::LONG_SIZE,
        -:  879:                           ACE_CDR::LONG_ALIGN,
        -:  880:                           length);
        -:  881:}
        -:  882:
        -:  883:ACE_INLINE ACE_CDR::Boolean
        -:  884:ACE_InputCDR::read_longlong_array (ACE_CDR::LongLong *x,
        -:  885:                                   ACE_CDR::ULong length)
        -:  886:{
        -:  887:  // Make sure the length of the array isn't greater than the length of
        -:  888:  // the stream.
        -:  889:  if (length * ACE_CDR::LONGLONG_SIZE > this->length ())
        -:  890:    {
        -:  891:      this->good_bit_ = false;
        -:  892:      return false;
        -:  893:    }
        -:  894:
        -:  895:  return this->read_array (x,
        -:  896:                           ACE_CDR::LONGLONG_SIZE,
        -:  897:                           ACE_CDR::LONGLONG_ALIGN,
        -:  898:                           length);
        -:  899:}
        -:  900:
        -:  901:ACE_INLINE ACE_CDR::Boolean
        -:  902:ACE_InputCDR::read_ulonglong_array (ACE_CDR::ULongLong *x,
        -:  903:                                    ACE_CDR::ULong length)
        -:  904:{
        -:  905:  // Make sure the length of the array isn't greater than the length of
        -:  906:  // the stream.
        -:  907:  if (length * ACE_CDR::LONGLONG_SIZE > this->length ())
        -:  908:    {
        -:  909:      this->good_bit_ = false;
        -:  910:      return false;
        -:  911:    }
        -:  912:
        -:  913:  return this->read_array (x,
        -:  914:                           ACE_CDR::LONGLONG_SIZE,
        -:  915:                           ACE_CDR::LONGLONG_ALIGN,
        -:  916:                           length);
        -:  917:}
        -:  918:
        -:  919:ACE_INLINE ACE_CDR::Boolean
        -:  920:ACE_InputCDR::read_float_array (ACE_CDR::Float *x,
        -:  921:                                ACE_CDR::ULong length)
        -:  922:{
        -:  923:  // Make sure the length of the array isn't greater than the length of
        -:  924:  // the stream.
        -:  925:  if (length * ACE_CDR::LONG_SIZE > this->length ())
        -:  926:    {
        -:  927:      this->good_bit_ = false;
        -:  928:      return false;
        -:  929:    }
        -:  930:
        -:  931:  return this->read_array (x,
        -:  932:                           ACE_CDR::LONG_SIZE,
        -:  933:                           ACE_CDR::LONG_ALIGN,
        -:  934:                           length);
        -:  935:}
        -:  936:
        -:  937:
        -:  938:ACE_INLINE ACE_CDR::Boolean
        -:  939:ACE_InputCDR::read_double_array (ACE_CDR::Double *x,
        -:  940:                                 ACE_CDR::ULong length)
        -:  941:{
        -:  942:  // Make sure the length of the array isn't greater than the length of
        -:  943:  // the stream.
        -:  944:  if (length * ACE_CDR::LONGLONG_SIZE > this->length ())
        -:  945:    {
        -:  946:      this->good_bit_ = false;
        -:  947:      return false;
        -:  948:    }
        -:  949:
        -:  950:  return this->read_array (x,
        -:  951:                           ACE_CDR::LONGLONG_SIZE,
        -:  952:                           ACE_CDR::LONGLONG_ALIGN,
        -:  953:                           length);
        -:  954:}
        -:  955:
        -:  956:ACE_INLINE ACE_CDR::Boolean
        -:  957:ACE_InputCDR::read_longdouble_array (ACE_CDR::LongDouble* x,
        -:  958:                                     ACE_CDR::ULong length)
        -:  959:{
        -:  960:  // Make sure the length of the array isn't greater than the length of
        -:  961:  // the stream.
        -:  962:  if (length * ACE_CDR::LONGDOUBLE_SIZE > this->length ())
        -:  963:    {
        -:  964:      this->good_bit_ = false;
        -:  965:      return false;
        -:  966:    }
        -:  967:  return this->read_array (x,
        -:  968:                           ACE_CDR::LONGDOUBLE_SIZE,
        -:  969:                           ACE_CDR::LONGDOUBLE_ALIGN,
        -:  970:                           length);
        -:  971:}
        -:  972:
        -:  973:ACE_INLINE ACE_CDR::Boolean
        -:  974:ACE_InputCDR::skip_octet (void)
        -:  975:{
        -:  976:  ACE_CDR::Octet x;
        -:  977:  return this->read_1 (&x);
        -:  978:}
        -:  979:
        -:  980:ACE_INLINE ACE_CDR::Boolean
        -:  981:ACE_InputCDR::skip_char (void)
        -:  982:{
        -:  983:  return this->skip_octet ();  // sizeof (Char) == sizeof (Octet)
        -:  984:}
        -:  985:
        -:  986:ACE_INLINE ACE_CDR::Boolean
        -:  987:ACE_InputCDR::skip_boolean (void)
        -:  988:{
        -:  989:  return this->skip_octet () && this->good_bit_;
        -:  990:}
        -:  991:
        -:  992:ACE_INLINE ACE_CDR::Boolean
        -:  993:ACE_InputCDR::skip_ushort (void)
        -:  994:{
        -:  995:  ACE_CDR::UShort x;
        -:  996:  return this->read_2 (&x);
        -:  997:}
        -:  998:
        -:  999:ACE_INLINE ACE_CDR::Boolean
        -: 1000:ACE_InputCDR::skip_short (void)
        -: 1001:{
        -: 1002:  return this->skip_ushort ();
        -: 1003:}
        -: 1004:
        -: 1005:ACE_INLINE ACE_CDR::Boolean
        -: 1006:ACE_InputCDR::skip_ulong (void)
        -: 1007:{
        -: 1008:  ACE_CDR::ULong x;
        -: 1009:  return this->read_4 (&x);
        -: 1010:}
        -: 1011:
        -: 1012:ACE_INLINE ACE_CDR::Boolean
        -: 1013:ACE_InputCDR::skip_long (void)
        -: 1014:{
        -: 1015:  return this->skip_ulong ();  // sizeof (Long) == sizeof (ULong)
        -: 1016:}
        -: 1017:
        -: 1018:ACE_INLINE ACE_CDR::Boolean
        -: 1019:ACE_InputCDR::skip_ulonglong (void)
        -: 1020:{
        -: 1021:  ACE_CDR::ULongLong x;
        -: 1022:  return this->read_8 (&x);
        -: 1023:}
        -: 1024:
        -: 1025:ACE_INLINE ACE_CDR::Boolean
        -: 1026:ACE_InputCDR::skip_longlong (void)
        -: 1027:{
        -: 1028:  return this->skip_ulonglong ();  // sizeof (LongLong) == sizeof (ULongLong)
        -: 1029:}
        -: 1030:
        -: 1031:ACE_INLINE ACE_CDR::Boolean
        -: 1032:ACE_InputCDR::skip_float (void)
        -: 1033:{
        -: 1034:  return this->skip_ulong ();  // sizeof(Float) == sizeof (ULong)
        -: 1035:}
        -: 1036:
        -: 1037:ACE_INLINE ACE_CDR::Boolean
        -: 1038:ACE_InputCDR::skip_double (void)
        -: 1039:{
        -: 1040:  return this->skip_ulonglong ();  // sizeof(Double) == sizeof (ULongLong)
        -: 1041:}
        -: 1042:
        -: 1043:ACE_INLINE ACE_CDR::Boolean
        -: 1044:ACE_InputCDR::skip_longdouble (void)
        -: 1045:{
        -: 1046:  ACE_CDR::LongDouble x;
        -: 1047:  return this->read_16 (&x);
        -: 1048:}
        -: 1049:
        -: 1050:ACE_INLINE ACE_CDR::Boolean
        -: 1051:ACE_InputCDR::skip_fixed (void)
        -: 1052:{
        -: 1053:  for (int i = 0; i < 16; ++i)
        -: 1054:    {
        -: 1055:      ACE_CDR::Octet x;
        -: 1056:      if (!this->read_1 (&x))
        -: 1057:        return false;
        -: 1058:      const unsigned low = x & 0xf;
        -: 1059:      if (low == 0xc || low == 0xd)
        -: 1060:        return true;
        -: 1061:    }
        -: 1062:  return false;
        -: 1063:}
        -: 1064:
        -: 1065:ACE_INLINE char*
        -: 1066:ACE_InputCDR::end (void)
        -: 1067:{
        -: 1068:  return this->start_.end ();
        -: 1069:}
        -: 1070:
        -: 1071:ACE_INLINE void
        -: 1072:ACE_InputCDR::rd_ptr (size_t offset)
        -: 1073:{
        -: 1074:  this->start_.rd_ptr (offset);
        -: 1075:}
        -: 1076:
        -: 1077:ACE_INLINE char*
        -: 1078:ACE_InputCDR::rd_ptr (void)
        -: 1079:{
        -: 1080:  return this->start_.rd_ptr ();
        -: 1081:}
        -: 1082:
        -: 1083:ACE_INLINE char*
        -: 1084:ACE_InputCDR::wr_ptr (void)
        -: 1085:{
        -: 1086:  return this->start_.wr_ptr ();
        -: 1087:}
        -: 1088:
        -: 1089:ACE_INLINE int
        -: 1090:ACE_InputCDR::adjust (size_t size,
        -: 1091:                      size_t align,
        -: 1092:                      char*& buf)
        -: 1093:{
        -: 1094:#if !defined (ACE_LACKS_CDR_ALIGNMENT)
        -: 1095:  buf = ACE_ptr_align_binary (this->rd_ptr (), align);
        -: 1096:#else
        -: 1097:  buf = this->rd_ptr ();
        -: 1098:#endif /* ACE_LACKS_CDR_ALIGNMENT */
        -: 1099:
        -: 1100:  char * const end = buf + size;
        -: 1101:  if (end <= this->wr_ptr ())
        -: 1102:    {
        -: 1103:      this->start_.rd_ptr (end);
        -: 1104:      return 0;
        -: 1105:    }
        -: 1106:
        -: 1107:  this->good_bit_ = false;
        -: 1108:  return -1;
        -: 1109:#if defined (ACE_LACKS_CDR_ALIGNMENT)
        -: 1110:  ACE_UNUSED_ARG (align);
        -: 1111:#endif /* ACE_LACKS_CDR_ALIGNMENT */
        -: 1112:}
        -: 1113:
        -: 1114:ACE_INLINE int
        -: 1115:ACE_InputCDR::adjust (size_t size,
        -: 1116:                      char*& buf)
        -: 1117:{
        -: 1118:  return this->adjust (size, size, buf);
        -: 1119:}
        -: 1120:
        -: 1121:ACE_INLINE const ACE_Message_Block*
        -: 1122:ACE_InputCDR::start (void) const
        -: 1123:{
        -: 1124:  return &this->start_;
        -: 1125:}
        -: 1126:
        -: 1127:ACE_INLINE bool
    #####: 1128:ACE_InputCDR::good_bit (void) const
        -: 1129:{
    #####: 1130:  return this->good_bit_;
        -: 1131:}
        -: 1132:
        -: 1133:// ****************************************************************
        -: 1134:
        -: 1135:ACE_INLINE ACE_CDR::Boolean
        -: 1136:operator<< (ACE_OutputCDR &os, ACE_CDR::Char x)
        -: 1137:{
        -: 1138:  os.write_char (x);
        -: 1139:  return (ACE_CDR::Boolean) os.good_bit ();
        -: 1140:}
        -: 1141:
        -: 1142:ACE_INLINE ACE_CDR::Boolean
        -: 1143:operator<< (ACE_OutputCDR &os, ACE_CDR::Short x)
        -: 1144:{
        -: 1145:  os.write_short (x);
        -: 1146:  return (ACE_CDR::Boolean) os.good_bit ();
        -: 1147:}
        -: 1148:
        -: 1149:ACE_INLINE ACE_CDR::Boolean
        -: 1150:operator<< (ACE_OutputCDR &os, ACE_CDR::UShort x)
        -: 1151:{
        -: 1152:  os.write_ushort (x);
        -: 1153:  return (ACE_CDR::Boolean) os.good_bit ();
        -: 1154:}
        -: 1155:
        -: 1156:ACE_INLINE ACE_CDR::Boolean
        -: 1157:operator<< (ACE_OutputCDR &os, ACE_CDR::Long x)
        -: 1158:{
        -: 1159:  os.write_long (x);
        -: 1160:  return (ACE_CDR::Boolean) os.good_bit ();
        -: 1161:}
        -: 1162:
        -: 1163:ACE_INLINE ACE_CDR::Boolean
        -: 1164:operator<< (ACE_OutputCDR &os, ACE_CDR::ULong x)
        -: 1165:{
        -: 1166:  os.write_ulong (x);
        -: 1167:  return (ACE_CDR::Boolean) os.good_bit ();
        -: 1168:}
        -: 1169:
        -: 1170:ACE_INLINE ACE_CDR::Boolean
        -: 1171:operator<< (ACE_OutputCDR &os, ACE_CDR::LongLong x)
        -: 1172:{
        -: 1173:  os.write_longlong (x);
        -: 1174:  return (ACE_CDR::Boolean) os.good_bit ();
        -: 1175:}
        -: 1176:
        -: 1177:ACE_INLINE ACE_CDR::Boolean
        -: 1178:operator<< (ACE_OutputCDR &os, ACE_CDR::ULongLong x)
        -: 1179:{
        -: 1180:  os.write_ulonglong (x);
        -: 1181:  return (ACE_CDR::Boolean) os.good_bit ();
        -: 1182:}
        -: 1183:
        -: 1184:ACE_INLINE ACE_CDR::Boolean
        -: 1185:operator<< (ACE_OutputCDR &os, ACE_CDR::LongDouble x)
        -: 1186:{
        -: 1187:  os.write_longdouble (x);
        -: 1188:  return (ACE_CDR::Boolean) os.good_bit ();
        -: 1189:}
        -: 1190:
        -: 1191:ACE_INLINE ACE_CDR::Boolean
        -: 1192:operator<< (ACE_OutputCDR &os, ACE_CDR::Float x)
        -: 1193:{
        -: 1194:  os.write_float (x);
        -: 1195:  return (ACE_CDR::Boolean) os.good_bit ();
        -: 1196:}
        -: 1197:
        -: 1198:ACE_INLINE ACE_CDR::Boolean
        -: 1199:operator<< (ACE_OutputCDR &os, ACE_CDR::Double x)
        -: 1200:{
        -: 1201:  os.write_double (x);
        -: 1202:  return (ACE_CDR::Boolean) os.good_bit ();
        -: 1203:}
        -: 1204:
        -: 1205:ACE_INLINE ACE_CDR::Boolean
        -: 1206:operator<< (ACE_OutputCDR &os, const ACE_CDR::Fixed &x)
        -: 1207:{
        -: 1208:  os.write_fixed (x);
        -: 1209:  return (ACE_CDR::Boolean) os.good_bit ();
        -: 1210:}
        -: 1211:
        -: 1212:ACE_INLINE ACE_CDR::Boolean
    #####: 1213:operator<< (ACE_OutputCDR &os, const ACE_CDR::Char *x)
        -: 1214:{
    #####: 1215:  os.write_string (x);
    #####: 1216:  return (ACE_CDR::Boolean) os.good_bit ();
        -: 1217:}
        -: 1218:
        -: 1219:ACE_INLINE ACE_CDR::Boolean
        -: 1220:operator<< (ACE_OutputCDR &os, const ACE_CDR::WChar *x)
        -: 1221:{
        -: 1222:  os.write_wstring (x);
        -: 1223:  return (ACE_CDR::Boolean) os.good_bit ();
        -: 1224:}
        -: 1225:
        -: 1226:// The following use the helper classes
        -: 1227:ACE_INLINE ACE_CDR::Boolean
    #####: 1228:operator<< (ACE_OutputCDR &os, ACE_OutputCDR::from_boolean x)
        -: 1229:{
    #####: 1230:  (void) os.write_boolean (x.val_);
    #####: 1231:  return (ACE_CDR::Boolean) os.good_bit ();
        -: 1232:}
        -: 1233:
        -: 1234:ACE_INLINE ACE_CDR::Boolean
        -: 1235:operator<< (ACE_OutputCDR &os, ACE_OutputCDR::from_char x)
        -: 1236:{
        -: 1237:  os.write_char (x.val_);
        -: 1238:  return (ACE_CDR::Boolean) os.good_bit ();
        -: 1239:}
        -: 1240:
        -: 1241:ACE_INLINE ACE_CDR::Boolean
        -: 1242:operator<< (ACE_OutputCDR &os, ACE_OutputCDR::from_wchar x)
        -: 1243:{
        -: 1244:  os.write_wchar (x.val_);
        -: 1245:  return (ACE_CDR::Boolean) os.good_bit ();
        -: 1246:}
        -: 1247:
        -: 1248:ACE_INLINE ACE_CDR::Boolean
    #####: 1249:operator<< (ACE_OutputCDR &os, ACE_OutputCDR::from_octet x)
        -: 1250:{
    #####: 1251:  os.write_octet (x.val_);
    #####: 1252:  return (ACE_CDR::Boolean) os.good_bit ();
        -: 1253:}
        -: 1254:
        -: 1255:ACE_INLINE ACE_CDR::Boolean
        -: 1256:operator<< (ACE_OutputCDR &os, ACE_OutputCDR::from_string x)
        -: 1257:{
        -: 1258:  ACE_CDR::ULong len = 0;
        -: 1259:
        -: 1260:  if (x.val_ != 0)
        -: 1261:    {
        -: 1262:      len = static_cast<ACE_CDR::ULong> (ACE_OS::strlen (x.val_));
        -: 1263:    }
        -: 1264:
        -: 1265:  os.write_string (len, x.val_);
        -: 1266:  return
        -: 1267:    (ACE_CDR::Boolean) (os.good_bit () && (!x.bound_ || len <= x.bound_));
        -: 1268:}
        -: 1269:
        -: 1270:ACE_INLINE ACE_CDR::Boolean
        -: 1271:operator<< (ACE_OutputCDR &os, ACE_OutputCDR::from_wstring x)
        -: 1272:{
        -: 1273:  ACE_CDR::ULong len = 0;
        -: 1274:
        -: 1275:  if (x.val_ != 0)
        -: 1276:    {
        -: 1277:      len = static_cast<ACE_CDR::ULong> (ACE_OS::strlen (x.val_));
        -: 1278:    }
        -: 1279:
        -: 1280:  os.write_wstring (len, x.val_);
        -: 1281:  return
        -: 1282:    (ACE_CDR::Boolean) (os.good_bit () && (!x.bound_ || len <= x.bound_));
        -: 1283:}
        -: 1284:
        -: 1285:// ****************************************************************
        -: 1286:
        -: 1287:ACE_INLINE ACE_CDR::Boolean
        -: 1288:operator>> (ACE_InputCDR &is, ACE_CDR::Char &x)
        -: 1289:{
        -: 1290:  return is.read_char (x) && is.good_bit ();
        -: 1291:}
        -: 1292:
        -: 1293:ACE_INLINE ACE_CDR::Boolean
        -: 1294:operator>> (ACE_InputCDR &is, ACE_CDR::Short &x)
        -: 1295:{
        -: 1296:  return is.read_short (x) && is.good_bit ();
        -: 1297:}
        -: 1298:
        -: 1299:ACE_INLINE ACE_CDR::Boolean
        -: 1300:operator>> (ACE_InputCDR &is, ACE_CDR::UShort &x)
        -: 1301:{
        -: 1302:  return is.read_ushort (x) && is.good_bit ();
        -: 1303:}
        -: 1304:
        -: 1305:ACE_INLINE ACE_CDR::Boolean
        -: 1306:operator>>(ACE_InputCDR &is, ACE_CDR::Long &x)
        -: 1307:{
        -: 1308:  return is.read_long (x) && is.good_bit ();
        -: 1309:}
        -: 1310:
        -: 1311:ACE_INLINE ACE_CDR::Boolean
        -: 1312:operator>> (ACE_InputCDR &is, ACE_CDR::ULong &x)
        -: 1313:{
        -: 1314:  return is.read_ulong (x) && is.good_bit ();
        -: 1315:}
        -: 1316:
        -: 1317:ACE_INLINE ACE_CDR::Boolean
        -: 1318:operator>> (ACE_InputCDR& is, ACE_CDR::LongLong &x)
        -: 1319:{
        -: 1320:  return is.read_longlong (x) && is.good_bit ();
        -: 1321:}
        -: 1322:
        -: 1323:ACE_INLINE ACE_CDR::Boolean
        -: 1324:operator>> (ACE_InputCDR& is, ACE_CDR::ULongLong &x)
        -: 1325:{
        -: 1326:  return is.read_ulonglong (x) && is.good_bit ();
        -: 1327:}
        -: 1328:
        -: 1329:ACE_INLINE ACE_CDR::Boolean
        -: 1330:operator>> (ACE_InputCDR& is, ACE_CDR::LongDouble &x)
        -: 1331:{
        -: 1332:  return is.read_longdouble (x) && is.good_bit ();
        -: 1333:}
        -: 1334:
        -: 1335:ACE_INLINE ACE_CDR::Boolean
        -: 1336:operator>> (ACE_InputCDR &is, ACE_CDR::Float &x)
        -: 1337:{
        -: 1338:  return is.read_float (x) && is.good_bit ();
        -: 1339:}
        -: 1340:
        -: 1341:ACE_INLINE ACE_CDR::Boolean
        -: 1342:operator>> (ACE_InputCDR &is, ACE_CDR::Double &x)
        -: 1343:{
        -: 1344:  return is.read_double (x) && is.good_bit ();
        -: 1345:}
        -: 1346:
        -: 1347:ACE_INLINE ACE_CDR::Boolean
        -: 1348:operator>> (ACE_InputCDR &is, ACE_CDR::Fixed &x)
        -: 1349:{
        -: 1350:  return is.read_fixed (x) && is.good_bit ();
        -: 1351:}
        -: 1352:
        -: 1353:ACE_INLINE ACE_CDR::Boolean
    #####: 1354:operator>> (ACE_InputCDR &is, ACE_CDR::Char *&x)
        -: 1355:{
    #####: 1356:  return is.read_string (x) && is.good_bit ();
        -: 1357:}
        -: 1358:
        -: 1359:ACE_INLINE ACE_CDR::Boolean
        -: 1360:operator>> (ACE_InputCDR &is, ACE_CDR::WChar *&x)
        -: 1361:{
        -: 1362:  return is.read_wstring (x) && is.good_bit ();
        -: 1363:}
        -: 1364:
        -: 1365:// The following use the helper classes
        -: 1366:ACE_INLINE ACE_CDR::Boolean
    #####: 1367:operator>> (ACE_InputCDR &is, ACE_InputCDR::to_boolean x)
        -: 1368:{
    #####: 1369:  return is.read_boolean (x.ref_);
        -: 1370:}
        -: 1371:
        -: 1372:ACE_INLINE ACE_CDR::Boolean
        -: 1373:operator>> (ACE_InputCDR &is, ACE_InputCDR::to_char x)
        -: 1374:{
        -: 1375:  return is.read_char (x.ref_) && is.good_bit ();
        -: 1376:}
        -: 1377:
        -: 1378:ACE_INLINE ACE_CDR::Boolean
        -: 1379:operator>> (ACE_InputCDR &is, ACE_InputCDR::to_wchar x)
        -: 1380:{
        -: 1381:  return is.read_wchar (x.ref_) && is.good_bit ();
        -: 1382:}
        -: 1383:
        -: 1384:ACE_INLINE ACE_CDR::Boolean
    #####: 1385:operator>> (ACE_InputCDR &is, ACE_InputCDR::to_octet x)
        -: 1386:{
    #####: 1387:  return is.read_octet (x.ref_) && is.good_bit ();
        -: 1388:}
        -: 1389:
        -: 1390:ACE_INLINE ACE_CDR::Boolean
        -: 1391:operator>> (ACE_InputCDR &is, ACE_InputCDR::to_string x)
        -: 1392:{
        -: 1393:  // check if the bounds are satisfied
        -: 1394:  return
        -: 1395:    (is.read_string (const_cast<char *&> (x.val_))
        -: 1396:     && is.good_bit ()
        -: 1397:     && (!x.bound_
        -: 1398:         || ACE_OS::strlen (x.val_) <= x.bound_));
        -: 1399:}
        -: 1400:
        -: 1401:ACE_INLINE ACE_CDR::Boolean
        -: 1402:operator>> (ACE_InputCDR &is, ACE_InputCDR::to_wstring x)
        -: 1403:{
        -: 1404:  // check if the bounds are satisfied
        -: 1405:  return
        -: 1406:    (is.read_wstring (const_cast<ACE_CDR::WChar *&> (x.val_))
        -: 1407:     && is.good_bit ()
        -: 1408:     && (!x.bound_
        -: 1409:         || ACE_OS::strlen (x.val_) <= x.bound_));
        -: 1410:}
        -: 1411:
        -: 1412:// ***************************************************************************
        -: 1413:// We must define these methods here because they use the "read_*" inlined
        -: 1414:// methods of the ACE_InputCDR class
        -: 1415:// ***************************************************************************
        -: 1416:
        -: 1417:ACE_INLINE ACE_CDR::Boolean
        -: 1418:ACE_OutputCDR::append_boolean (ACE_InputCDR &stream)
        -: 1419:{
        -: 1420:  ACE_CDR::Boolean x;
        -: 1421:  return stream.read_boolean (x) ? this->write_boolean (x) : false;
        -: 1422:}
        -: 1423:
        -: 1424:ACE_INLINE ACE_CDR::Boolean
        -: 1425:ACE_OutputCDR::append_char (ACE_InputCDR &stream)
        -: 1426:{
        -: 1427:  ACE_CDR::Char x;
        -: 1428:  return stream.read_char (x) ? this->write_char (x) : false;
        -: 1429:}
        -: 1430:
        -: 1431:ACE_INLINE ACE_CDR::Boolean
        -: 1432:ACE_OutputCDR::append_wchar (ACE_InputCDR &stream)
        -: 1433:{
        -: 1434:  ACE_CDR::WChar x;
        -: 1435:  return stream.read_wchar (x) ? this->write_wchar (x) : false;
        -: 1436:}
        -: 1437:
        -: 1438:ACE_INLINE ACE_CDR::Boolean
        -: 1439:ACE_OutputCDR::append_octet (ACE_InputCDR &stream)
        -: 1440:{
        -: 1441:  ACE_CDR::Octet x;
        -: 1442:  return stream.read_octet (x) ? this->write_octet (x) : false;
        -: 1443:}
        -: 1444:
        -: 1445:ACE_INLINE ACE_CDR::Boolean
        -: 1446:ACE_OutputCDR::append_short (ACE_InputCDR &stream)
        -: 1447:{
        -: 1448:  ACE_CDR::Short x;
        -: 1449:  return stream.read_short (x) ? this->write_short (x) : false;
        -: 1450:}
        -: 1451:
        -: 1452:ACE_INLINE ACE_CDR::Boolean
        -: 1453:ACE_OutputCDR::append_ushort (ACE_InputCDR &stream)
        -: 1454:{
        -: 1455:  ACE_CDR::UShort x;
        -: 1456:  return stream.read_ushort (x) ? this->write_ushort (x) : false;
        -: 1457:}
        -: 1458:
        -: 1459:ACE_INLINE ACE_CDR::Boolean
        -: 1460:ACE_OutputCDR::append_long (ACE_InputCDR &stream)
        -: 1461:{
        -: 1462:  ACE_CDR::Long x;
        -: 1463:  return stream.read_long (x) ? this->write_long (x) : false;
        -: 1464:}
        -: 1465:
        -: 1466:ACE_INLINE ACE_CDR::Boolean
        -: 1467:ACE_OutputCDR::append_ulong (ACE_InputCDR &stream)
        -: 1468:{
        -: 1469:  ACE_CDR::ULong x;
        -: 1470:  return stream.read_ulong (x) ? this->write_ulong (x) : false;
        -: 1471:}
        -: 1472:
        -: 1473:ACE_INLINE ACE_CDR::Boolean
        -: 1474:ACE_OutputCDR::append_longlong (ACE_InputCDR &stream)
        -: 1475:{
        -: 1476:  ACE_CDR::LongLong x;
        -: 1477:  return stream.read_longlong (x) ? this->write_longlong (x) : false;
        -: 1478:}
        -: 1479:
        -: 1480:ACE_INLINE ACE_CDR::Boolean
        -: 1481:ACE_OutputCDR::append_ulonglong (ACE_InputCDR &stream)
        -: 1482:{
        -: 1483:  ACE_CDR::ULongLong x;
        -: 1484:  return stream.read_ulonglong (x) ? this->write_ulonglong (x) : false;
        -: 1485:}
        -: 1486:
        -: 1487:ACE_INLINE ACE_CDR::Boolean
        -: 1488:ACE_OutputCDR::append_float (ACE_InputCDR &stream)
        -: 1489:{
        -: 1490:  ACE_CDR::Float x;
        -: 1491:  return stream.read_float (x) ? this->write_float (x) : false;
        -: 1492:}
        -: 1493:
        -: 1494:ACE_INLINE ACE_CDR::Boolean
        -: 1495:ACE_OutputCDR::append_double (ACE_InputCDR &stream)
        -: 1496:{
        -: 1497:  ACE_CDR::Double x;
        -: 1498:  return stream.read_double (x) ? this->write_double (x) : false;
        -: 1499:}
        -: 1500:
        -: 1501:ACE_INLINE ACE_CDR::Boolean
        -: 1502:ACE_OutputCDR::append_longdouble (ACE_InputCDR &stream)
        -: 1503:{
        -: 1504:  ACE_CDR::LongDouble x;
        -: 1505:  return stream.read_longdouble (x) ? this->write_longdouble (x) : false;
        -: 1506:}
        -: 1507:
        -: 1508:ACE_INLINE ACE_CDR::Boolean
        -: 1509:ACE_OutputCDR::append_fixed (ACE_InputCDR &stream)
        -: 1510:{
        -: 1511:  ACE_CDR::Fixed x;
        -: 1512:  return stream.read_fixed (x) ? this->write_fixed (x) : false;
        -: 1513:}
        -: 1514:
        -: 1515:ACE_INLINE ACE_CDR::Boolean
        -: 1516:ACE_OutputCDR::append_string (ACE_InputCDR &stream)
        -: 1517:{
        -: 1518:  ACE_CDR::Char *x = 0;
        -: 1519:  ACE_CDR::Boolean const flag =
        -: 1520:    (stream.read_string (x) ? this->write_string (x) : false);
        -: 1521:#if defined (ACE_HAS_ALLOC_HOOKS)
        -: 1522:  ACE_Allocator::instance()->free(x);
        -: 1523:#else
        -: 1524:  delete [] x;
        -: 1525:#endif /* ACE_HAS_ALLOC_HOOKS */
        -: 1526:  return flag;
        -: 1527:}
        -: 1528:
        -: 1529:ACE_INLINE ACE_CDR::Boolean
        -: 1530:ACE_OutputCDR::append_wstring (ACE_InputCDR &stream)
        -: 1531:{
        -: 1532:  ACE_CDR::WChar *x = 0;
        -: 1533:  ACE_CDR::Boolean const flag =
        -: 1534:    (stream.read_wstring (x) ? this->write_wstring (x) : false);
        -: 1535:#if defined (ACE_HAS_ALLOC_HOOKS)
        -: 1536:  ACE_Allocator::instance()->free(x);
        -: 1537:#else
        -: 1538:  delete [] x;
        -: 1539:#endif /* ACE_HAS_ALLOC_HOOKS */
        -: 1540:  return flag;
        -: 1541:}
        -: 1542:
        -: 1543:ACE_INLINE void
      172: 1544:ACE_InputCDR::reset_byte_order (int byte_order)
        -: 1545:{
      172: 1546:  this->do_byte_swap_ = (byte_order != ACE_CDR_BYTE_ORDER);
      172: 1547:}
        -: 1548:
        -: 1549:ACE_INLINE bool
        -: 1550:ACE_InputCDR::do_byte_swap (void) const
        -: 1551:{
        -: 1552:  return this->do_byte_swap_;
        -: 1553:}
        -: 1554:
        -: 1555:ACE_INLINE int
        -: 1556:ACE_InputCDR::byte_order (void) const
        -: 1557:{
        -: 1558:  return this->do_byte_swap () ? !ACE_CDR_BYTE_ORDER : ACE_CDR_BYTE_ORDER;
        -: 1559:}
        -: 1560:
        -: 1561:ACE_INLINE int
        -: 1562:ACE_InputCDR::align_read_ptr (size_t alignment)
        -: 1563:{
        -: 1564:#if !defined (ACE_LACKS_CDR_ALIGNMENT)
        -: 1565:  char *buf = ACE_ptr_align_binary (this->rd_ptr (),
        -: 1566:                                    alignment);
        -: 1567:#else
        -: 1568:  char *buf = this->rd_ptr ();
        -: 1569:#endif /* ACE_LACKS_CDR_ALIGNMENT */
        -: 1570:
        -: 1571:  if (buf <= this->wr_ptr ())
        -: 1572:    {
        -: 1573:      this->start_.rd_ptr (buf);
        -: 1574:      return 0;
        -: 1575:    }
        -: 1576:
        -: 1577:  this->good_bit_ = false;
        -: 1578:  return -1;
        -: 1579:}
        -: 1580:
        -: 1581:ACE_INLINE void
        -: 1582:ACE_InputCDR::set_version (ACE_CDR::Octet major, ACE_CDR::Octet minor)
        -: 1583:{
        -: 1584:  this->major_version_ = major;
        -: 1585:  this->minor_version_ = minor;
        -: 1586:}
        -: 1587:
        -: 1588:ACE_INLINE void
        -: 1589:ACE_InputCDR::get_version (ACE_CDR::Octet &major, ACE_CDR::Octet &minor)
        -: 1590:{
        -: 1591:  major = this->major_version_;
        -: 1592:  minor = this->minor_version_;
        -: 1593:}
        -: 1594:
        -: 1595:ACE_INLINE ACE_Char_Codeset_Translator *
        -: 1596:ACE_InputCDR::char_translator (void) const
        -: 1597:{
        -: 1598:  return this->char_translator_;
        -: 1599:}
        -: 1600:
        -: 1601:ACE_INLINE ACE_WChar_Codeset_Translator *
        -: 1602:ACE_InputCDR::wchar_translator (void) const
        -: 1603:{
        -: 1604:  return this->wchar_translator_;
        -: 1605:}
        -: 1606:
        -: 1607:
        -: 1608:ACE_INLINE void
        -: 1609:ACE_InputCDR::char_translator (ACE_Char_Codeset_Translator * ctran)
        -: 1610:{
        -: 1611:  this->char_translator_ = ctran;
        -: 1612:}
        -: 1613:
        -: 1614:ACE_INLINE void
        -: 1615:ACE_InputCDR::wchar_translator (ACE_WChar_Codeset_Translator * wctran)
        -: 1616:{
        -: 1617:  this->wchar_translator_ = wctran;
        -: 1618:}
        -: 1619:
        -: 1620:// ****************************************************************
        -: 1621:
        -: 1622:ACE_INLINE ACE_CDR::Boolean
        -: 1623:ACE_Char_Codeset_Translator::read_1 (ACE_InputCDR& input,
        -: 1624:                                     ACE_CDR::Octet *x)
        -: 1625:{
        -: 1626:  return input.read_1 (x);
        -: 1627:}
        -: 1628:
        -: 1629:ACE_INLINE ACE_CDR::Boolean
        -: 1630:ACE_Char_Codeset_Translator::write_1 (ACE_OutputCDR& output,
        -: 1631:                                      const ACE_CDR::Octet *x)
        -: 1632:{
        -: 1633:  return output.write_1 (x);
        -: 1634:}
        -: 1635:
        -: 1636:ACE_INLINE ACE_CDR::Boolean
        -: 1637:ACE_Char_Codeset_Translator::read_array (ACE_InputCDR& in,
        -: 1638:                                         void* x,
        -: 1639:                                         size_t size,
        -: 1640:                                         size_t align,
        -: 1641:                                         ACE_CDR::ULong length)
        -: 1642:{
        -: 1643:  return in.read_array (x, size, align, length);
        -: 1644:}
        -: 1645:
        -: 1646:ACE_INLINE ACE_CDR::Boolean
        -: 1647:ACE_Char_Codeset_Translator::write_array (ACE_OutputCDR& out,
        -: 1648:                                          const void *x,
        -: 1649:                                          size_t size,
        -: 1650:                                          size_t align,
        -: 1651:                                          ACE_CDR::ULong length)
        -: 1652:{
        -: 1653:  return out.write_array(x, size, align, length);
        -: 1654:}
        -: 1655:
        -: 1656:ACE_INLINE int
        -: 1657:ACE_Char_Codeset_Translator::adjust (ACE_OutputCDR& out,
        -: 1658:                                     size_t size,
        -: 1659:                                     size_t align,
        -: 1660:                                     char *&buf)
        -: 1661:{
        -: 1662:  return out.adjust(size, align, buf);
        -: 1663:}
        -: 1664:
        -: 1665:ACE_INLINE void
        -: 1666:ACE_Char_Codeset_Translator::good_bit (ACE_OutputCDR& out, bool bit)
        -: 1667:{
        -: 1668:  out.good_bit_ = bit;
        -: 1669:}
        -: 1670:
        -: 1671:ACE_INLINE ACE_CDR::Octet
        -: 1672:ACE_Char_Codeset_Translator::major_version (ACE_InputCDR& input)
        -: 1673:{
        -: 1674:  return input.major_version_;
        -: 1675:}
        -: 1676:
        -: 1677:ACE_INLINE ACE_CDR::Octet
        -: 1678:ACE_Char_Codeset_Translator::minor_version (ACE_InputCDR& input)
        -: 1679:{
        -: 1680:  return input.minor_version_;
        -: 1681:}
        -: 1682:
        -: 1683:ACE_INLINE ACE_CDR::Octet
        -: 1684:ACE_Char_Codeset_Translator::major_version (ACE_OutputCDR& output)
        -: 1685:{
        -: 1686:  return output.major_version_;
        -: 1687:}
        -: 1688:
        -: 1689:ACE_INLINE ACE_CDR::Octet
        -: 1690:ACE_Char_Codeset_Translator::minor_version (ACE_OutputCDR& output)
        -: 1691:{
        -: 1692:  return output.minor_version_;
        -: 1693:}
        -: 1694:
        -: 1695:// ****************************************************************
        -: 1696:
        -: 1697:ACE_INLINE ACE_CDR::Boolean
        -: 1698:ACE_WChar_Codeset_Translator::read_1 (ACE_InputCDR& input,
        -: 1699:                                      ACE_CDR::Octet *x)
        -: 1700:{
        -: 1701:  return input.read_1 (x);
        -: 1702:}
        -: 1703:
        -: 1704:ACE_INLINE ACE_CDR::Boolean
        -: 1705:ACE_WChar_Codeset_Translator::read_2 (ACE_InputCDR& input,
        -: 1706:                                      ACE_CDR::UShort *x)
        -: 1707:{
        -: 1708:  return input.read_2 (x);
        -: 1709:}
        -: 1710:
        -: 1711:ACE_INLINE ACE_CDR::Boolean
        -: 1712:ACE_WChar_Codeset_Translator::read_4 (ACE_InputCDR& input,
        -: 1713:                                      ACE_CDR::ULong *x)
        -: 1714:{
        -: 1715:  return input.read_4 (x);
        -: 1716:}
        -: 1717:
        -: 1718:ACE_INLINE ACE_CDR::Boolean
        -: 1719:ACE_WChar_Codeset_Translator::write_1 (ACE_OutputCDR& output,
        -: 1720:                                       const ACE_CDR::Octet *x)
        -: 1721:{
        -: 1722:  return output.write_1 (x);
        -: 1723:}
        -: 1724:
        -: 1725:ACE_INLINE ACE_CDR::Boolean
        -: 1726:ACE_WChar_Codeset_Translator::write_2 (ACE_OutputCDR& output,
        -: 1727:                                       const ACE_CDR::UShort *x)
        -: 1728:{
        -: 1729:  return output.write_2 (x);
        -: 1730:}
        -: 1731:
        -: 1732:ACE_INLINE ACE_CDR::Boolean
        -: 1733:ACE_WChar_Codeset_Translator::write_4 (ACE_OutputCDR& output,
        -: 1734:                                       const ACE_CDR::ULong *x)
        -: 1735:{
        -: 1736:  return output.write_4 (x);
        -: 1737:}
        -: 1738:
        -: 1739:ACE_INLINE ACE_CDR::Boolean
        -: 1740:ACE_WChar_Codeset_Translator::read_array (ACE_InputCDR& in,
        -: 1741:                                          void* x,
        -: 1742:                                          size_t size,
        -: 1743:                                          size_t align,
        -: 1744:                                          ACE_CDR::ULong length)
        -: 1745:{
        -: 1746:  return in.read_array (x, size, align, length);
        -: 1747:}
        -: 1748:
        -: 1749:ACE_INLINE ACE_CDR::Boolean
        -: 1750:ACE_WChar_Codeset_Translator::write_array (ACE_OutputCDR& out,
        -: 1751:                                           const void *x,
        -: 1752:                                           size_t size,
        -: 1753:                                           size_t align,
        -: 1754:                                           ACE_CDR::ULong length)
        -: 1755:{
        -: 1756:  return out.write_array(x, size, align, length);
        -: 1757:}
        -: 1758:
        -: 1759:ACE_INLINE int
        -: 1760:ACE_WChar_Codeset_Translator::adjust (ACE_OutputCDR& out,
        -: 1761:                                      size_t size,
        -: 1762:                                      size_t align,
        -: 1763:                                      char *&buf)
        -: 1764:{
        -: 1765:  return out.adjust(size, align, buf);
        -: 1766:}
        -: 1767:
        -: 1768:ACE_INLINE void
        -: 1769:ACE_WChar_Codeset_Translator::good_bit (ACE_OutputCDR& out, bool bit)
        -: 1770:{
        -: 1771:  out.good_bit_ = bit;
        -: 1772:}
        -: 1773:
        -: 1774:ACE_INLINE ACE_CDR::Octet
        -: 1775:ACE_WChar_Codeset_Translator::major_version (ACE_InputCDR& input)
        -: 1776:{
        -: 1777:  return input.major_version_;
        -: 1778:}
        -: 1779:
        -: 1780:ACE_INLINE ACE_CDR::Octet
        -: 1781:ACE_WChar_Codeset_Translator::minor_version (ACE_InputCDR& input)
        -: 1782:{
        -: 1783:  return input.minor_version_;
        -: 1784:}
        -: 1785:
        -: 1786:ACE_INLINE ACE_CDR::Octet
        -: 1787:ACE_WChar_Codeset_Translator::major_version (ACE_OutputCDR& output)
        -: 1788:{
        -: 1789:  return output.major_version_;
        -: 1790:}
        -: 1791:
        -: 1792:ACE_INLINE ACE_CDR::Octet
        -: 1793:ACE_WChar_Codeset_Translator::minor_version (ACE_OutputCDR& output)
        -: 1794:{
        -: 1795:  return output.minor_version_;
        -: 1796:}
        -: 1797:
        -: 1798:ACE_END_VERSIONED_NAMESPACE_DECL
