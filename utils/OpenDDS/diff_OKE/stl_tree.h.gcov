1,2c1,2
<         -:    0:Source:/usr/include/c++/8/bits/stl_tree.h
<         -:    0:Programs:51
---
>         -:    0:Source:/usr/include/c++/7/bits/stl_tree.h
>         -:    0:Programs:3
5c5
<         -:    3:// Copyright (C) 2001-2018 Free Software Foundation, Inc.
---
>         -:    3:// Copyright (C) 2001-2017 Free Software Foundation, Inc.
96c96
<         -:   94:  //
---
>         -:   94:  // 
114c114
<     #####:  112:    _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
---
>         -:  112:    _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
116,117c116,117
<     #####:  114:      while (__x->_M_left != 0) __x = __x->_M_left;
<     #####:  115:      return __x;
---
>         -:  114:      while (__x->_M_left != 0) __x = __x->_M_left;
>         -:  115:      return __x;
128c128
<     #####:  126:    _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
---
>         -:  126:    _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
130,131c130,131
<     #####:  128:      while (__x->_M_right != 0) __x = __x->_M_right;
<     #####:  129:      return __x;
---
>         -:  128:      while (__x->_M_right != 0) __x = __x->_M_right;
>         -:  129:      return __x;
148,175d147
<        5*:  146:      _Rb_tree_key_compare()
<         -:  147:      _GLIBCXX_NOEXCEPT_IF(
<         -:  148:	is_nothrow_default_constructible<_Key_compare>::value)
<         -:  149:      : _M_key_compare()
<        5*:  150:      { }
< ------------------
< _ZNSt20_Rb_tree_key_compareIN7OpenDDS4DCPS17GUID_tKeyLessThanEEC2Ev:
<     #####:  146:      _Rb_tree_key_compare()
<         -:  147:      _GLIBCXX_NOEXCEPT_IF(
<         -:  148:	is_nothrow_default_constructible<_Key_compare>::value)
<         -:  149:      : _M_key_compare()
<     #####:  150:      { }
< ------------------
< _ZNSt20_Rb_tree_key_compareISt4lessImEEC2Ev:
<     #####:  146:      _Rb_tree_key_compare()
<         -:  147:      _GLIBCXX_NOEXCEPT_IF(
<         -:  148:	is_nothrow_default_constructible<_Key_compare>::value)
<         -:  149:      : _M_key_compare()
<     #####:  150:      { }
< ------------------
< _ZNSt20_Rb_tree_key_compareIN7OpenDDS4DCPS17GUID_tKeyLessThanEEC2Ev:
<     #####:  146:      _Rb_tree_key_compare()
<         -:  147:      _GLIBCXX_NOEXCEPT_IF(
<         -:  148:	is_nothrow_default_constructible<_Key_compare>::value)
<         -:  149:      : _M_key_compare()
<     #####:  150:      { }
< ------------------
< _ZNSt20_Rb_tree_key_compareISt4lessImEEC2Ev:
181,216d152
< ------------------
< _ZNSt20_Rb_tree_key_compareIN7OpenDDS4DCPS17GUID_tKeyLessThanEEC2Ev:
<     #####:  146:      _Rb_tree_key_compare()
<         -:  147:      _GLIBCXX_NOEXCEPT_IF(
<         -:  148:	is_nothrow_default_constructible<_Key_compare>::value)
<         -:  149:      : _M_key_compare()
<     #####:  150:      { }
< ------------------
< _ZNSt20_Rb_tree_key_compareISt4lessIN7OpenDDS4DCPS12WeakRcHandleINS2_15TransportClientEEEEEC2Ev:
<         5:  146:      _Rb_tree_key_compare()
<         -:  147:      _GLIBCXX_NOEXCEPT_IF(
<         -:  148:	is_nothrow_default_constructible<_Key_compare>::value)
<         -:  149:      : _M_key_compare()
<         5:  150:      { }
< ------------------
< _ZNSt20_Rb_tree_key_compareISt4lessIiEEC2Ev:
<     #####:  146:      _Rb_tree_key_compare()
<         -:  147:      _GLIBCXX_NOEXCEPT_IF(
<         -:  148:	is_nothrow_default_constructible<_Key_compare>::value)
<         -:  149:      : _M_key_compare()
<     #####:  150:      { }
< ------------------
< _ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2Ev:
<     #####:  146:      _Rb_tree_key_compare()
<         -:  147:      _GLIBCXX_NOEXCEPT_IF(
<         -:  148:	is_nothrow_default_constructible<_Key_compare>::value)
<         -:  149:      : _M_key_compare()
<     #####:  150:      { }
< ------------------
< _ZNSt20_Rb_tree_key_compareISt4lessIN7OpenDDS4DCPS14SequenceNumberEEEC2Ev:
<     #####:  146:      _Rb_tree_key_compare()
<         -:  147:      _GLIBCXX_NOEXCEPT_IF(
<         -:  148:	is_nothrow_default_constructible<_Key_compare>::value)
<         -:  149:      : _M_key_compare()
<     #####:  150:      { }
< ------------------
218c154
<     #####:  152:      _Rb_tree_key_compare(const _Key_compare& __comp)
---
>         -:  152:      _Rb_tree_key_compare(const _Key_compare& __comp)
220c156
<     #####:  154:      { }
---
>         -:  154:      { }
244,293d179
< ------------------
< _ZNSt15_Rb_tree_headerC2Ev:
<     #####:  173:    _Rb_tree_header() _GLIBCXX_NOEXCEPT
<     #####:  174:    {
<     #####:  175:      _M_header._M_color = _S_red;
<     #####:  176:      _M_reset();
<     #####:  177:    }
< ------------------
< _ZNSt15_Rb_tree_headerC2Ev:
<     #####:  173:    _Rb_tree_header() _GLIBCXX_NOEXCEPT
<     #####:  174:    {
<     #####:  175:      _M_header._M_color = _S_red;
<     #####:  176:      _M_reset();
<     #####:  177:    }
< ------------------
< _ZNSt15_Rb_tree_headerC2Ev:
<     #####:  173:    _Rb_tree_header() _GLIBCXX_NOEXCEPT
<     #####:  174:    {
<     #####:  175:      _M_header._M_color = _S_red;
<     #####:  176:      _M_reset();
<     #####:  177:    }
< ------------------
< _ZNSt15_Rb_tree_headerC2Ev:
<     #####:  173:    _Rb_tree_header() _GLIBCXX_NOEXCEPT
<     #####:  174:    {
<     #####:  175:      _M_header._M_color = _S_red;
<     #####:  176:      _M_reset();
<     #####:  177:    }
< ------------------
< _ZNSt15_Rb_tree_headerC2Ev:
<     #####:  173:    _Rb_tree_header() _GLIBCXX_NOEXCEPT
<     #####:  174:    {
<     #####:  175:      _M_header._M_color = _S_red;
<     #####:  176:      _M_reset();
<     #####:  177:    }
< ------------------
< _ZNSt15_Rb_tree_headerC2Ev:
<     #####:  173:    _Rb_tree_header() _GLIBCXX_NOEXCEPT
<     #####:  174:    {
<     #####:  175:      _M_header._M_color = _S_red;
<     #####:  176:      _M_reset();
<     #####:  177:    }
< ------------------
< _ZNSt15_Rb_tree_headerC2Ev:
<     #####:  173:    _Rb_tree_header() _GLIBCXX_NOEXCEPT
<     #####:  174:    {
<     #####:  175:      _M_header._M_color = _S_red;
<     #####:  176:      _M_reset();
<     #####:  177:    }
< ------------------
329,410d214
< ------------------
< _ZNSt15_Rb_tree_header8_M_resetEv:
<     #####:  206:    _M_reset()
<         -:  207:    {
<     #####:  208:      _M_header._M_parent = 0;
<     #####:  209:      _M_header._M_left = &_M_header;
<     #####:  210:      _M_header._M_right = &_M_header;
<     #####:  211:      _M_node_count = 0;
<     #####:  212:    }
< ------------------
< _ZNSt15_Rb_tree_header8_M_resetEv:
<     #####:  206:    _M_reset()
<         -:  207:    {
<     #####:  208:      _M_header._M_parent = 0;
<     #####:  209:      _M_header._M_left = &_M_header;
<     #####:  210:      _M_header._M_right = &_M_header;
<     #####:  211:      _M_node_count = 0;
<     #####:  212:    }
< ------------------
< _ZNSt15_Rb_tree_header8_M_resetEv:
<     #####:  206:    _M_reset()
<         -:  207:    {
<     #####:  208:      _M_header._M_parent = 0;
<     #####:  209:      _M_header._M_left = &_M_header;
<     #####:  210:      _M_header._M_right = &_M_header;
<     #####:  211:      _M_node_count = 0;
<     #####:  212:    }
< ------------------
< _ZNSt15_Rb_tree_header8_M_resetEv:
<     #####:  206:    _M_reset()
<         -:  207:    {
<     #####:  208:      _M_header._M_parent = 0;
<     #####:  209:      _M_header._M_left = &_M_header;
<     #####:  210:      _M_header._M_right = &_M_header;
<     #####:  211:      _M_node_count = 0;
<     #####:  212:    }
< ------------------
< _ZNSt15_Rb_tree_header8_M_resetEv:
<     #####:  206:    _M_reset()
<         -:  207:    {
<     #####:  208:      _M_header._M_parent = 0;
<     #####:  209:      _M_header._M_left = &_M_header;
<     #####:  210:      _M_header._M_right = &_M_header;
<     #####:  211:      _M_node_count = 0;
<     #####:  212:    }
< ------------------
< _ZNSt15_Rb_tree_header8_M_resetEv:
<     #####:  206:    _M_reset()
<         -:  207:    {
<     #####:  208:      _M_header._M_parent = 0;
<     #####:  209:      _M_header._M_left = &_M_header;
<     #####:  210:      _M_header._M_right = &_M_header;
<     #####:  211:      _M_node_count = 0;
<     #####:  212:    }
< ------------------
< _ZNSt15_Rb_tree_header8_M_resetEv:
<     #####:  206:    _M_reset()
<         -:  207:    {
<     #####:  208:      _M_header._M_parent = 0;
<     #####:  209:      _M_header._M_left = &_M_header;
<     #####:  210:      _M_header._M_right = &_M_header;
<     #####:  211:      _M_node_count = 0;
<     #####:  212:    }
< ------------------
< _ZNSt15_Rb_tree_header8_M_resetEv:
<     #####:  206:    _M_reset()
<         -:  207:    {
<     #####:  208:      _M_header._M_parent = 0;
<     #####:  209:      _M_header._M_left = &_M_header;
<     #####:  210:      _M_header._M_right = &_M_header;
<     #####:  211:      _M_node_count = 0;
<     #####:  212:    }
< ------------------
< _ZNSt15_Rb_tree_header8_M_resetEv:
<     #####:  206:    _M_reset()
<         -:  207:    {
<     #####:  208:      _M_header._M_parent = 0;
<     #####:  209:      _M_header._M_left = &_M_header;
<     #####:  210:      _M_header._M_right = &_M_header;
<     #####:  211:      _M_node_count = 0;
<     #####:  212:    }
< ------------------
432,471d235
<     2573*:  234:      _M_valptr()
<     2573*:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEEE9_M_valptrEv:
<     #####:  234:      _M_valptr()
<     #####:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEE9_M_valptrEv:
<     #####:  234:      _M_valptr()
<     #####:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS14SequenceNumberESt3mapIS3_S0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS3_ESaIS0_IS4_SC_EEEEE9_M_valptrEv:
<     #####:  234:      _M_valptr()
<     #####:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS14SequenceNumberENS2_6GUID_tEEE9_M_valptrEv:
<     #####:  234:      _M_valptr()
<     #####:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEEE9_M_valptrEv:
<       712:  234:      _M_valptr()
<       712:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EE9_M_valptrEv:
<     #####:  234:      _M_valptr()
<     #####:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEEE9_M_valptrEv:
<     #####:  234:      _M_valptr()
<     #####:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEEE9_M_valptrEv:
<       624:  234:      _M_valptr()
<       624:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEEE9_M_valptrEv:
<       178:  234:      _M_valptr()
<       178:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS19TransportReassembly7FragKeyENSt7__cxx114listINS3_9FragRangeESaIS8_EEEEE9_M_valptrEv:
474,546d237
< ------------------
< _ZNSt13_Rb_tree_nodeIN7OpenDDS4DCPS19TransportReassembly7FragKeyEE9_M_valptrEv:
<     #####:  234:      _M_valptr()
<     #####:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS12WeakRcHandleINS2_15TransportClientEEENS2_8RcHandleINS2_8DataLinkEEEEE9_M_valptrEv:
<         2:  234:      _M_valptr()
<         2:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEE9_M_valptrEv:
<     #####:  234:      _M_valptr()
<     #####:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEE9_M_valptrEv:
<     #####:  234:      _M_valptr()
<     #####:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeIN7OpenDDS4DCPS6GUID_tEE9_M_valptrEv:
<     #####:  234:      _M_valptr()
<     #####:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_15TransportClient12PendingAssocEEEEE9_M_valptrEv:
<        73:  234:      _M_valptr()
<        73:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_8DataLinkEEEEE9_M_valptrEv:
<        80:  234:      _M_valptr()
<        80:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_11DataLinkSetEEEEE9_M_valptrEv:
<        54:  234:      _M_valptr()
<        54:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEE9_M_valptrEv:
<        18:  234:      _M_valptr()
<        18:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEE9_M_valptrEv:
<       188:  234:      _M_valptr()
<       188:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEE9_M_valptrEv:
<       134:  234:      _M_valptr()
<       134:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEE9_M_valptrEv:
<     #####:  234:      _M_valptr()
<     #####:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEE9_M_valptrEv:
<       415:  234:      _M_valptr()
<       415:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEE9_M_valptrEv:
<     #####:  234:      _M_valptr()
<     #####:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEE9_M_valptrEv:
<     #####:  234:      _M_valptr()
<     #####:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEE9_M_valptrEv:
<     #####:  234:      _M_valptr()
<     #####:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEE9_M_valptrEv:
<        95:  234:      _M_valptr()
<        95:  235:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_11DataLinkSetEEEEE9_M_valptrEv:
<     #####:  234:      _M_valptr()
<     #####:  235:      { return _M_storage._M_ptr(); }
< ------------------
549,660d239
<     2965*:  238:      _M_valptr() const
<     2965*:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEEE9_M_valptrEv:
<     #####:  238:      _M_valptr() const
<     #####:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEE9_M_valptrEv:
<     #####:  238:      _M_valptr() const
<     #####:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS14SequenceNumberESt3mapIS3_S0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS3_ESaIS0_IS4_SC_EEEEE9_M_valptrEv:
<     #####:  238:      _M_valptr() const
<     #####:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS14SequenceNumberENS2_6GUID_tEEE9_M_valptrEv:
<     #####:  238:      _M_valptr() const
<     #####:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EE9_M_valptrEv:
<     #####:  238:      _M_valptr() const
<     #####:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEEE9_M_valptrEv:
<       623:  238:      _M_valptr() const
<       623:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEEE9_M_valptrEv:
<       924:  238:      _M_valptr() const
<       924:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEEE9_M_valptrEv:
<       534:  238:      _M_valptr() const
<       534:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS19TransportReassembly7FragKeyENSt7__cxx114listINS3_9FragRangeESaIS8_EEEEE9_M_valptrEv:
<     #####:  238:      _M_valptr() const
<     #####:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeIN7OpenDDS4DCPS19TransportReassembly7FragKeyEE9_M_valptrEv:
<     #####:  238:      _M_valptr() const
<     #####:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS12WeakRcHandleINS2_15TransportClientEEENS2_8RcHandleINS2_8DataLinkEEEEE9_M_valptrEv:
<     #####:  238:      _M_valptr() const
<     #####:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEE9_M_valptrEv:
<        61:  238:      _M_valptr() const
<        61:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEE9_M_valptrEv:
<     #####:  238:      _M_valptr() const
<     #####:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEEE9_M_valptrEv:
<     #####:  238:      _M_valptr() const
<     #####:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_11DataLinkSetEEEEE9_M_valptrEv:
<        18:  238:      _M_valptr() const
<        18:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEE9_M_valptrEv:
<     #####:  238:      _M_valptr() const
<     #####:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_15TransportClient12PendingAssocEEEEE9_M_valptrEv:
<        72:  238:      _M_valptr() const
<        72:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_8DataLinkEEEEE9_M_valptrEv:
<        90:  238:      _M_valptr() const
<        90:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEE9_M_valptrEv:
<       300:  238:      _M_valptr() const
<       300:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEE9_M_valptrEv:
<        79:  238:      _M_valptr() const
<        79:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEE9_M_valptrEv:
<     #####:  238:      _M_valptr() const
<     #####:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeIN7OpenDDS4DCPS6GUID_tEE9_M_valptrEv:
<     #####:  238:      _M_valptr() const
<     #####:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEE9_M_valptrEv:
<       102:  238:      _M_valptr() const
<       102:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEE9_M_valptrEv:
<     #####:  238:      _M_valptr() const
<     #####:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEE9_M_valptrEv:
<     #####:  238:      _M_valptr() const
<     #####:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeIN7OpenDDS4DCPS6GUID_tEE9_M_valptrEv:
<     #####:  238:      _M_valptr() const
<     #####:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEE9_M_valptrEv:
<       162:  238:      _M_valptr() const
<       162:  239:      { return _M_storage._M_ptr(); }
< ------------------
< _ZNKSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEE9_M_valptrEv:
663d241
< ------------------
687c265
<         -:  263:      typedef ptrdiff_t		  difference_type;
---
>         -:  263:      typedef ptrdiff_t                  difference_type;
689c267
<         -:  265:      typedef _Rb_tree_iterator<_Tp>	_Self;
---
>         -:  265:      typedef _Rb_tree_iterator<_Tp>        _Self;
691c269
<         -:  267:      typedef _Rb_tree_node<_Tp>*	   _Link_type;
---
>         -:  267:      typedef _Rb_tree_node<_Tp>*           _Link_type;
693,694c271,272
<     #####:  269:      _Rb_tree_iterator() _GLIBCXX_NOEXCEPT
<     #####:  270:      : _M_node() { }
---
>         -:  269:      _Rb_tree_iterator() _GLIBCXX_NOEXCEPT
>         -:  270:      : _M_node() { }
697,700d274
<     5581*:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     5581*:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEC2EPSt18_Rb_tree_node_base:
703,803d276
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEEC2EPSt18_Rb_tree_node_base:
<     #####:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberESt3mapIS3_S0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS3_ESaIS0_IS4_SC_EEEEEC2EPSt18_Rb_tree_node_base:
<     #####:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberENS2_6GUID_tEEEC2EPSt18_Rb_tree_node_base:
<     #####:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEEEC2EPSt18_Rb_tree_node_base:
<      1306:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<      1306:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEEEC2EPSt18_Rb_tree_node_base:
<      1070:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<      1070:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEC2EPSt18_Rb_tree_node_base:
<     #####:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEEEC2EPSt18_Rb_tree_node_base:
<       623:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<       623:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorIN7OpenDDS4DCPS19TransportReassembly7FragKeyEEC2EPSt18_Rb_tree_node_base:
<     #####:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS19TransportReassembly7FragKeyENSt7__cxx114listINS3_9FragRangeESaIS8_EEEEEC2EPSt18_Rb_tree_node_base:
<     #####:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS12WeakRcHandleINS2_15TransportClientEEENS2_8RcHandleINS2_8DataLinkEEEEEC2EPSt18_Rb_tree_node_base:
<         2:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<         2:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEC2EPSt18_Rb_tree_node_base:
<     #####:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEEC2EPSt18_Rb_tree_node_base:
<        92:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        92:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_11DataLinkSetEEEEEC2EPSt18_Rb_tree_node_base:
<       108:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<       108:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEEEC2EPSt18_Rb_tree_node_base:
<     #####:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_15TransportClient12PendingAssocEEEEEC2EPSt18_Rb_tree_node_base:
<       347:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<       347:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_8DataLinkEEEEEC2EPSt18_Rb_tree_node_base:
<       178:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<       178:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEC2EPSt18_Rb_tree_node_base:
<       237:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<       237:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEC2EPSt18_Rb_tree_node_base:
<       310:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<       310:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEC2EPSt18_Rb_tree_node_base:
<     #####:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEC2EPSt18_Rb_tree_node_base:
<      1115:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<      1115:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEC2EPSt18_Rb_tree_node_base:
<     #####:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEC2EPSt18_Rb_tree_node_base:
<     #####:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEEC2EPSt18_Rb_tree_node_base:
<     #####:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorIN7OpenDDS4DCPS6GUID_tEEC2EPSt18_Rb_tree_node_base:
<     #####:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  274:      : _M_node(__x) { }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEEC2EPSt18_Rb_tree_node_base:
<       193:  273:      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<       193:  274:      : _M_node(__x) { }
< ------------------
806,861d278
<      542*:  277:      operator*() const _GLIBCXX_NOEXCEPT
<      542*:  278:      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_11DataLinkSetEEEEEdeEv:
<        18:  277:      operator*() const _GLIBCXX_NOEXCEPT
<        18:  278:      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEEdeEv:
<        56:  277:      operator*() const _GLIBCXX_NOEXCEPT
<        56:  278:      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEdeEv:
<     #####:  277:      operator*() const _GLIBCXX_NOEXCEPT
<     #####:  278:      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEdeEv:
<        56:  277:      operator*() const _GLIBCXX_NOEXCEPT
<        56:  278:      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEEEdeEv:
<     #####:  277:      operator*() const _GLIBCXX_NOEXCEPT
<     #####:  278:      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_8DataLinkEEEEEdeEv:
<        18:  277:      operator*() const _GLIBCXX_NOEXCEPT
<        18:  278:      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEdeEv:
<         8:  277:      operator*() const _GLIBCXX_NOEXCEPT
<         8:  278:      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS19TransportReassembly7FragKeyENSt7__cxx114listINS3_9FragRangeESaIS8_EEEEEdeEv:
<     #####:  277:      operator*() const _GLIBCXX_NOEXCEPT
<     #####:  278:      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEEEdeEv:
<       178:  277:      operator*() const _GLIBCXX_NOEXCEPT
<       178:  278:      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEdeEv:
<     #####:  277:      operator*() const _GLIBCXX_NOEXCEPT
<     #####:  278:      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEEEdeEv:
<       208:  277:      operator*() const _GLIBCXX_NOEXCEPT
<       208:  278:      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberESt3mapIS3_S0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS3_ESaIS0_IS4_SC_EEEEEdeEv:
<     #####:  277:      operator*() const _GLIBCXX_NOEXCEPT
<     #####:  278:      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberENS2_6GUID_tEEEdeEv:
<     #####:  277:      operator*() const _GLIBCXX_NOEXCEPT
<     #####:  278:      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEEdeEv:
864d280
< ------------------
867,922d282
<      649*:  281:      operator->() const _GLIBCXX_NOEXCEPT
<      649*:  282:      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_15TransportClient12PendingAssocEEEEEptEv:
<        37:  281:      operator->() const _GLIBCXX_NOEXCEPT
<        37:  282:      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEEptEv:
<     #####:  281:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  282:      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberESt3mapIS3_S0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS3_ESaIS0_IS4_SC_EEEEEptEv:
<     #####:  281:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  282:      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberENS2_6GUID_tEEEptEv:
<     #####:  281:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  282:      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEEEptEv:
<       178:  281:      operator->() const _GLIBCXX_NOEXCEPT
<       178:  282:      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEptEv:
<         4:  281:      operator->() const _GLIBCXX_NOEXCEPT
<         4:  282:      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS19TransportReassembly7FragKeyENSt7__cxx114listINS3_9FragRangeESaIS8_EEEEEptEv:
<     #####:  281:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  282:      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEptEv:
<     #####:  281:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  282:      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEEEptEv:
<     #####:  281:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  282:      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEEptEv:
<         3:  281:      operator->() const _GLIBCXX_NOEXCEPT
<         3:  282:      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_8DataLinkEEEEEptEv:
<        26:  281:      operator->() const _GLIBCXX_NOEXCEPT
<        26:  282:      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEptEv:
<       134:  281:      operator->() const _GLIBCXX_NOEXCEPT
<       134:  282:      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEptEv:
<        42:  281:      operator->() const _GLIBCXX_NOEXCEPT
<        42:  282:      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEptEv:
925,941d284
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEptEv:
<       225:  281:      operator->() const _GLIBCXX_NOEXCEPT
<       225:  282:      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEptEv:
<     #####:  281:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  282:      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEptEv:
<     #####:  281:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  282:      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEEptEv:
<     #####:  281:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  282:      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
< ------------------
944,1083d286
<      414*:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<      414*:  287:	_M_node = _Rb_tree_increment(_M_node);
<      414*:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEppEv:
<     #####:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<     #####:  287:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEEppEv:
<     #####:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<     #####:  287:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberESt3mapIS3_S0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS3_ESaIS0_IS4_SC_EEEEEppEv:
<     #####:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<     #####:  287:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberENS2_6GUID_tEEEppEv:
<     #####:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<     #####:  287:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEEEppEv:
<       178:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<       178:  287:	_M_node = _Rb_tree_increment(_M_node);
<       178:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEEEppEv:
<     #####:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<     #####:  287:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEppEv:
<     #####:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<     #####:  287:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS19TransportReassembly7FragKeyENSt7__cxx114listINS3_9FragRangeESaIS8_EEEEEppEv:
<     #####:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<     #####:  287:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEppEv:
<     #####:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<     #####:  287:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_15TransportClient12PendingAssocEEEEEppEv:
<        18:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<        18:  287:	_M_node = _Rb_tree_increment(_M_node);
<        18:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEEppEv:
<         9:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<         9:  287:	_M_node = _Rb_tree_increment(_M_node);
<         9:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_11DataLinkSetEEEEEppEv:
<     #####:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<     #####:  287:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_8DataLinkEEEEEppEv:
<        18:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<        18:  287:	_M_node = _Rb_tree_increment(_M_node);
<        18:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEEEppEv:
<     #####:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<     #####:  287:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEppEv:
<        54:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<        54:  287:	_M_node = _Rb_tree_increment(_M_node);
<        54:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEppEv:
<     #####:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<     #####:  287:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEppEv:
<     #####:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<     #####:  287:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEppEv:
<       137:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<       137:  287:	_M_node = _Rb_tree_increment(_M_node);
<       137:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEEppEv:
<     #####:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<     #####:  287:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEppEv:
1089,1103d291
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEEppEv:
<     #####:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<     #####:  287:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  288:	return *this;
<         -:  289:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEppEv:
<     #####:  285:      operator++() _GLIBCXX_NOEXCEPT
<         -:  286:      {
<     #####:  287:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  288:	return *this;
<         -:  289:      }
< ------------------
1106c294
<     #####:  292:      operator++(int) _GLIBCXX_NOEXCEPT
---
>         -:  292:      operator++(int) _GLIBCXX_NOEXCEPT
1108,1110c296,298
<     #####:  294:	_Self __tmp = *this;
<     #####:  295:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  296:	return __tmp;
---
>         -:  294:	_Self __tmp = *this;
>         -:  295:	_M_node = _Rb_tree_increment(_M_node);
>         -:  296:	return __tmp;
1114,1148d301
<        6*:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<        6*:  302:	_M_node = _Rb_tree_decrement(_M_node);
<        6*:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_15TransportClient12PendingAssocEEEEEmmEv:
<     #####:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<     #####:  302:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEEmmEv:
<     #####:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<     #####:  302:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberENS2_6GUID_tEEEmmEv:
<     #####:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<     #####:  302:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberESt3mapIS3_S0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS3_ESaIS0_IS4_SC_EEEEEmmEv:
<     #####:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<     #####:  302:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEEEmmEv:
1154,1273d306
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEmmEv:
<     #####:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<     #####:  302:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEEEmmEv:
<     #####:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<     #####:  302:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEEEmmEv:
<     #####:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<     #####:  302:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorIN7OpenDDS4DCPS19TransportReassembly7FragKeyEEmmEv:
<     #####:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<     #####:  302:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS19TransportReassembly7FragKeyENSt7__cxx114listINS3_9FragRangeESaIS8_EEEEEmmEv:
<     #####:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<     #####:  302:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEmmEv:
<     #####:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<     #####:  302:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_11DataLinkSetEEEEEmmEv:
<     #####:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<     #####:  302:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_8DataLinkEEEEEmmEv:
<     #####:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<     #####:  302:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEEEmmEv:
<     #####:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<     #####:  302:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEmmEv:
<     #####:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<     #####:  302:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEmmEv:
<         2:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<         2:  302:	_M_node = _Rb_tree_decrement(_M_node);
<         2:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEmmEv:
<     #####:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<     #####:  302:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEmmEv:
<     #####:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<     #####:  302:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEmmEv:
<     #####:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<     #####:  302:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorIN7OpenDDS4DCPS6GUID_tEEmmEv:
<     #####:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<     #####:  302:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEEmmEv:
<         2:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<         2:  302:	_M_node = _Rb_tree_decrement(_M_node);
<         2:  303:	return *this;
<         -:  304:      }
< ------------------
< _ZNSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEEmmEv:
<         2:  300:      operator--() _GLIBCXX_NOEXCEPT
<         -:  301:      {
<         2:  302:	_M_node = _Rb_tree_decrement(_M_node);
<         2:  303:	return *this;
<         -:  304:      }
< ------------------
1284,1379d316
<     1544*:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     1544*:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEEEeqERKS8_:
<     #####:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEEeqERKSD_:
<     #####:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberENS2_6GUID_tEEEeqERKS7_:
<     #####:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberESt3mapIS3_S0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS3_ESaIS0_IS4_SC_EEEEEeqERKSJ_:
<     #####:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEEEeqERKSE_:
<       267:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<       267:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEEEeqERKSE_:
<       327:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<       327:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEeqERKS9_:
<     #####:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEEEeqERKSE_:
<       267:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<       267:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS19TransportReassembly7FragKeyENSt7__cxx114listINS3_9FragRangeESaIS8_EEEEEeqERKSC_:
<     #####:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorIN7OpenDDS4DCPS19TransportReassembly7FragKeyEEeqERKS4_:
<     #####:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_15TransportClient12PendingAssocEEEEEeqERKSA_:
<       108:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<       108:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_8DataLinkEEEEEeqERKS9_:
<        84:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<        84:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEeqERKS8_:
<     #####:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorIN7OpenDDS4DCPS6GUID_tEEeqERKS3_:
<     #####:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEEeqERKS9_:
<        23:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<        23:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEeqERKS9_:
<     #####:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEeqERKS9_:
<        84:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<        84:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEeqERKS9_:
<        30:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<        30:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEeqERKS9_:
<     #####:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEeqERKS8_:
<       270:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<       270:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEEeqERKSA_:
<        48:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<        48:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEeqERKS9_:
<     #####:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_11DataLinkSetEEEEEeqERKS9_:
<        36:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<        36:  316:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEEeqERKS9_:
1382,1386d318
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEeqERKS9_:
<     #####:  315:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  316:      { return _M_node == __x._M_node; }
< ------------------
1389,1392d320
<      751*:  319:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<      751*:  320:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEEEneERKS8_:
1395,1463d322
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEEneERKSD_:
<     #####:  319:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  320:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberESt3mapIS3_S0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS3_ESaIS0_IS4_SC_EEEEEneERKSJ_:
<     #####:  319:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  320:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEneERKS9_:
<         4:  319:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<         4:  320:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEEEneERKSE_:
<       297:  319:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<       297:  320:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS19TransportReassembly7FragKeyENSt7__cxx114listINS3_9FragRangeESaIS8_EEEEEneERKSC_:
<     #####:  319:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  320:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEEneERKS9_:
<        21:  319:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<        21:  320:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEneERKS9_:
<     #####:  319:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  320:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEneERKS8_:
<     #####:  319:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  320:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEEneERKSA_:
<     #####:  319:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  320:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_15TransportClient12PendingAssocEEEEEneERKSA_:
<        14:  319:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<        14:  320:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEneERKS9_:
<        99:  319:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<        99:  320:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEneERKS9_:
<        42:  319:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<        42:  320:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEneERKS9_:
<     #####:  319:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  320:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEneERKS8_:
<       274:  319:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<       274:  320:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEEneERKS9_:
<     #####:  319:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  320:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEneERKS9_:
<     #####:  319:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  320:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEneERKS9_:
<     #####:  319:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  320:      { return _M_node != __x._M_node; }
< ------------------
1471c330
<         -:  328:      typedef _Tp	 value_type;
---
>         -:  328:      typedef _Tp        value_type;
1478c337
<         -:  335:      typedef ptrdiff_t			 difference_type;
---
>         -:  335:      typedef ptrdiff_t                  difference_type;
1480,1482c339,341
<         -:  337:      typedef _Rb_tree_const_iterator<_Tp>		_Self;
<         -:  338:      typedef _Rb_tree_node_base::_Const_Base_ptr	_Base_ptr;
<         -:  339:      typedef const _Rb_tree_node<_Tp>*			_Link_type;
---
>         -:  337:      typedef _Rb_tree_const_iterator<_Tp>        _Self;
>         -:  338:      typedef _Rb_tree_node_base::_Const_Base_ptr _Base_ptr;
>         -:  339:      typedef const _Rb_tree_node<_Tp>*           _Link_type;
1488,1531d346
<     1938*:  345:      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     1938*:  346:      : _M_node(__x) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEC2EPKSt18_Rb_tree_node_base:
<     #####:  345:      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  346:      : _M_node(__x) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEEC2EPKSt18_Rb_tree_node_base:
<        24:  345:      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        24:  346:      : _M_node(__x) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorIN7OpenDDS4DCPS6GUID_tEEC2EPKSt18_Rb_tree_node_base:
<     #####:  345:      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  346:      : _M_node(__x) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEC2EPKSt18_Rb_tree_node_base:
<     #####:  345:      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  346:      : _M_node(__x) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEEC2EPKSt18_Rb_tree_node_base:
<     #####:  345:      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  346:      : _M_node(__x) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorIN7OpenDDS4DCPS6GUID_tEEC2EPKSt18_Rb_tree_node_base:
<     #####:  345:      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  346:      : _M_node(__x) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEC2EPKSt18_Rb_tree_node_base:
<     #####:  345:      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  346:      : _M_node(__x) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEC2EPKSt18_Rb_tree_node_base:
<        34:  345:      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        34:  346:      : _M_node(__x) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEEEC2EPKSt18_Rb_tree_node_base:
<     #####:  345:      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  346:      : _M_node(__x) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorIN7OpenDDS4DCPS19TransportReassembly7FragKeyEEC2EPKSt18_Rb_tree_node_base:
<     #####:  345:      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  346:      : _M_node(__x) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS19TransportReassembly7FragKeyENSt7__cxx114listINS3_9FragRangeESaIS8_EEEEEC2EPKSt18_Rb_tree_node_base:
1534,1550d348
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEEEC2EPKSt18_Rb_tree_node_base:
<       542:  345:      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<       542:  346:      : _M_node(__x) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEEEC2EPKSt18_Rb_tree_node_base:
<       626:  345:      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<       626:  346:      : _M_node(__x) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEEEC2EPKSt18_Rb_tree_node_base:
<       712:  345:      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<       712:  346:      : _M_node(__x) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEEC2EPKSt18_Rb_tree_node_base:
<     #####:  345:      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  346:      : _M_node(__x) { }
< ------------------
1552,1583d349
<      828*:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<      828*:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEC2ERKSt17_Rb_tree_iteratorIS8_E:
<     #####:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<     #####:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEEC2ERKSt17_Rb_tree_iteratorISC_E:
<     #####:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<     #####:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberENS2_6GUID_tEEEC2ERKSt17_Rb_tree_iteratorIS6_E:
<     #####:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<     #####:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberESt3mapIS3_S0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS3_ESaIS0_IS4_SC_EEEEEC2ERKSt17_Rb_tree_iteratorISI_E:
<     #####:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<     #####:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEC2ERKSt17_Rb_tree_iteratorIS8_E:
<     #####:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<     #####:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEEEC2ERKSt17_Rb_tree_iteratorISD_E:
<       208:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<       208:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEEEC2ERKSt17_Rb_tree_iteratorISD_E:
<       178:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<       178:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS19TransportReassembly7FragKeyENSt7__cxx114listINS3_9FragRangeESaIS8_EEEEEC2ERKSt17_Rb_tree_iteratorISB_E:
1586,1638d351
< ------------------
< _ZNSt23_Rb_tree_const_iteratorIN7OpenDDS4DCPS19TransportReassembly7FragKeyEEC2ERKSt17_Rb_tree_iteratorIS3_E:
<     #####:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<     #####:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_8DataLinkEEEEEC2ERKSt17_Rb_tree_iteratorIS8_E:
<        36:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<        36:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEEEC2ERKSt17_Rb_tree_iteratorIS7_E:
<     #####:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<     #####:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorIN7OpenDDS4DCPS6GUID_tEEC2ERKSt17_Rb_tree_iteratorIS2_E:
<     #####:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<     #####:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEEC2ERKSt17_Rb_tree_iteratorIS8_E:
<         9:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<         9:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_15TransportClient12PendingAssocEEEEEC2ERKSt17_Rb_tree_iteratorIS9_E:
<       130:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<       130:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEC2ERKSt17_Rb_tree_iteratorIS8_E:
<        82:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<        82:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEC2ERKSt17_Rb_tree_iteratorIS8_E:
<         9:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<         9:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEC2ERKSt17_Rb_tree_iteratorIS7_E:
<        76:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<        76:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEEC2ERKSt17_Rb_tree_iteratorIS9_E:
<        82:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<        82:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEC2ERKSt17_Rb_tree_iteratorIS8_E:
<     #####:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<     #####:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_11DataLinkSetEEEEEC2ERKSt17_Rb_tree_iteratorIS8_E:
<        18:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<        18:  349:      : _M_node(__it._M_node) { }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEC2ERKSt17_Rb_tree_iteratorIS8_E:
<     #####:  348:      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
<     #####:  349:      : _M_node(__it._M_node) { }
< ------------------
1641,1676d353
<      458*:  352:      _M_const_cast() const _GLIBCXX_NOEXCEPT
<      458*:  353:      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_11DataLinkSetEEEEE13_M_const_castEv:
<        18:  352:      _M_const_cast() const _GLIBCXX_NOEXCEPT
<        18:  353:      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEE13_M_const_castEv:
<        18:  352:      _M_const_cast() const _GLIBCXX_NOEXCEPT
<        18:  353:      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEE13_M_const_castEv:
<     #####:  352:      _M_const_cast() const _GLIBCXX_NOEXCEPT
<     #####:  353:      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEE13_M_const_castEv:
<        18:  352:      _M_const_cast() const _GLIBCXX_NOEXCEPT
<        18:  353:      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEEE13_M_const_castEv:
<     #####:  352:      _M_const_cast() const _GLIBCXX_NOEXCEPT
<     #####:  353:      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_8DataLinkEEEEE13_M_const_castEv:
<        18:  352:      _M_const_cast() const _GLIBCXX_NOEXCEPT
<        18:  353:      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS19TransportReassembly7FragKeyENSt7__cxx114listINS3_9FragRangeESaIS8_EEEEE13_M_const_castEv:
<     #####:  352:      _M_const_cast() const _GLIBCXX_NOEXCEPT
<     #####:  353:      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEEE13_M_const_castEv:
<       178:  352:      _M_const_cast() const _GLIBCXX_NOEXCEPT
<       178:  353:      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EE13_M_const_castEv:
1679,1695d355
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEEE13_M_const_castEv:
<       208:  352:      _M_const_cast() const _GLIBCXX_NOEXCEPT
<       208:  353:      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberESt3mapIS3_S0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS3_ESaIS0_IS4_SC_EEEEE13_M_const_castEv:
<     #####:  352:      _M_const_cast() const _GLIBCXX_NOEXCEPT
<     #####:  353:      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberENS2_6GUID_tEEE13_M_const_castEv:
<     #####:  352:      _M_const_cast() const _GLIBCXX_NOEXCEPT
<     #####:  353:      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEE13_M_const_castEv:
<     #####:  352:      _M_const_cast() const _GLIBCXX_NOEXCEPT
<     #####:  353:      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
< ------------------
1698,1708c358,359
<     #####:  356:      operator*() const _GLIBCXX_NOEXCEPT
<     #####:  357:      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorIN7OpenDDS4DCPS6GUID_tEEdeEv:
<     #####:  356:      operator*() const _GLIBCXX_NOEXCEPT
<     #####:  357:      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEEdeEv:
<     #####:  356:      operator*() const _GLIBCXX_NOEXCEPT
<     #####:  357:      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
---
>         -:  356:      operator*() const _GLIBCXX_NOEXCEPT
>         -:  357:      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
1711,1766d361
<      278*:  360:      operator->() const _GLIBCXX_NOEXCEPT
<      278*:  361:      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEEptEv:
<     #####:  360:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  361:      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEptEv:
<     #####:  360:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  361:      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEEptEv:
<     #####:  360:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  361:      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEptEv:
<        10:  360:      operator->() const _GLIBCXX_NOEXCEPT
<        10:  361:      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEptEv:
<     #####:  360:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  361:      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEptEv:
<     #####:  360:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  361:      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEptEv:
<     #####:  360:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  361:      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEEEptEv:
<     #####:  360:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  361:      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS19TransportReassembly7FragKeyENSt7__cxx114listINS3_9FragRangeESaIS8_EEEEEptEv:
<     #####:  360:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  361:      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEEEptEv:
<       178:  360:      operator->() const _GLIBCXX_NOEXCEPT
<       178:  361:      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEEEptEv:
<        90:  360:      operator->() const _GLIBCXX_NOEXCEPT
<        90:  361:      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEEEptEv:
<     #####:  360:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  361:      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEptEv:
<     #####:  360:      operator->() const _GLIBCXX_NOEXCEPT
<     #####:  361:      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEEptEv:
1769d363
< ------------------
1777,1812d370
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEEppEv:
<     #####:  364:      operator++() _GLIBCXX_NOEXCEPT
<         -:  365:      {
<     #####:  366:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  367:	return *this;
<         -:  368:      }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorIN7OpenDDS4DCPS6GUID_tEEppEv:
<     #####:  364:      operator++() _GLIBCXX_NOEXCEPT
<         -:  365:      {
<     #####:  366:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  367:	return *this;
<         -:  368:      }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEppEv:
<     #####:  364:      operator++() _GLIBCXX_NOEXCEPT
<         -:  365:      {
<     #####:  366:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  367:	return *this;
<         -:  368:      }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEppEv:
<     #####:  364:      operator++() _GLIBCXX_NOEXCEPT
<         -:  365:      {
<     #####:  366:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  367:	return *this;
<         -:  368:      }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEEppEv:
<     #####:  364:      operator++() _GLIBCXX_NOEXCEPT
<         -:  365:      {
<     #####:  366:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  367:	return *this;
<         -:  368:      }
< ------------------
1815,1879c373
<       28*:  371:      operator++(int) _GLIBCXX_NOEXCEPT
<         -:  372:      {
<       28*:  373:	_Self __tmp = *this;
<       28*:  374:	_M_node = _Rb_tree_increment(_M_node);
<       28*:  375:	return __tmp;
<         -:  376:      }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEppEi:
<     #####:  371:      operator++(int) _GLIBCXX_NOEXCEPT
<         -:  372:      {
<     #####:  373:	_Self __tmp = *this;
<     #####:  374:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  375:	return __tmp;
<         -:  376:      }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorIN7OpenDDS4DCPS6GUID_tEEppEi:
<     #####:  371:      operator++(int) _GLIBCXX_NOEXCEPT
<         -:  372:      {
<     #####:  373:	_Self __tmp = *this;
<     #####:  374:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  375:	return __tmp;
<         -:  376:      }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEEppEi:
<        12:  371:      operator++(int) _GLIBCXX_NOEXCEPT
<         -:  372:      {
<        12:  373:	_Self __tmp = *this;
<        12:  374:	_M_node = _Rb_tree_increment(_M_node);
<        12:  375:	return __tmp;
<         -:  376:      }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEppEi:
<     #####:  371:      operator++(int) _GLIBCXX_NOEXCEPT
<         -:  372:      {
<     #####:  373:	_Self __tmp = *this;
<     #####:  374:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  375:	return __tmp;
<         -:  376:      }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEppEi:
<         4:  371:      operator++(int) _GLIBCXX_NOEXCEPT
<         -:  372:      {
<         4:  373:	_Self __tmp = *this;
<         4:  374:	_M_node = _Rb_tree_increment(_M_node);
<         4:  375:	return __tmp;
<         -:  376:      }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEppEi:
<     #####:  371:      operator++(int) _GLIBCXX_NOEXCEPT
<         -:  372:      {
<     #####:  373:	_Self __tmp = *this;
<     #####:  374:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  375:	return __tmp;
<         -:  376:      }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEppEi:
<        12:  371:      operator++(int) _GLIBCXX_NOEXCEPT
<         -:  372:      {
<        12:  373:	_Self __tmp = *this;
<        12:  374:	_M_node = _Rb_tree_increment(_M_node);
<        12:  375:	return __tmp;
<         -:  376:      }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_15TransportClient12PendingAssocEEEEEppEi:
<     #####:  371:      operator++(int) _GLIBCXX_NOEXCEPT
---
>         -:  371:      operator++(int) _GLIBCXX_NOEXCEPT
1881,1883c375,377
<     #####:  373:	_Self __tmp = *this;
<     #####:  374:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  375:	return __tmp;
---
>         -:  373:	_Self __tmp = *this;
>         -:  374:	_M_node = _Rb_tree_increment(_M_node);
>         -:  375:	return __tmp;
1885,1909d378
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS19TransportReassembly7FragKeyENSt7__cxx114listINS3_9FragRangeESaIS8_EEEEEppEi:
<     #####:  371:      operator++(int) _GLIBCXX_NOEXCEPT
<         -:  372:      {
<     #####:  373:	_Self __tmp = *this;
<     #####:  374:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  375:	return __tmp;
<         -:  376:      }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorIN7OpenDDS4DCPS19TransportReassembly7FragKeyEEppEi:
<     #####:  371:      operator++(int) _GLIBCXX_NOEXCEPT
<         -:  372:      {
<     #####:  373:	_Self __tmp = *this;
<     #####:  374:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  375:	return __tmp;
<         -:  376:      }
< ------------------
< _ZNSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberENS2_6GUID_tEEEppEi:
<     #####:  371:      operator++(int) _GLIBCXX_NOEXCEPT
<         -:  372:      {
<     #####:  373:	_Self __tmp = *this;
<     #####:  374:	_M_node = _Rb_tree_increment(_M_node);
<     #####:  375:	return __tmp;
<         -:  376:      }
< ------------------
1912c381
<     #####:  379:      operator--() _GLIBCXX_NOEXCEPT
---
>         -:  379:      operator--() _GLIBCXX_NOEXCEPT
1914,1915c383,384
<     #####:  381:	_M_node = _Rb_tree_decrement(_M_node);
<     #####:  382:	return *this;
---
>         -:  381:	_M_node = _Rb_tree_decrement(_M_node);
>         -:  382:	return *this;
1927,1994d395
<     1136*:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     1136*:  395:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEeqERKS9_:
<        48:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<        48:  395:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEEeqERKSD_:
<     #####:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  395:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberENS2_6GUID_tEEEeqERKS7_:
<     #####:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  395:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEEEeqERKSE_:
<       360:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<       360:  395:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEEEeqERKSE_:
<       356:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<       356:  395:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEEEeqERKSE_:
<       268:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<       268:  395:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS19TransportReassembly7FragKeyENSt7__cxx114listINS3_9FragRangeESaIS8_EEEEEeqERKSC_:
<     #####:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  395:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorIN7OpenDDS4DCPS19TransportReassembly7FragKeyEEeqERKS4_:
<     #####:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  395:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEEEeqERKS8_:
<     #####:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  395:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_15TransportClient12PendingAssocEEEEEeqERKSA_:
<        56:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<        56:  395:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorIN7OpenDDS4DCPS6GUID_tEEeqERKS3_:
<     #####:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  395:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEeqERKS9_:
<     #####:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  395:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEeqERKS9_:
<     #####:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  395:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorIN7OpenDDS4DCPS6GUID_tEEeqERKS3_:
<     #####:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  395:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEeqERKS8_:
<        20:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<        20:  395:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEEeqERKS9_:
<     #####:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  395:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEeqERKS9_:
1997,2005d397
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEEeqERKSA_:
<        28:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<        28:  395:      { return _M_node == __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEeqERKS9_:
<     #####:  394:      operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  395:      { return _M_node == __x._M_node; }
< ------------------
2008,2031d399
<      176*:  398:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<      176*:  399:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEneERKS9_:
<     #####:  398:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  399:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEneERKS9_:
<     #####:  398:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  399:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEEneERKSA_:
<        36:  398:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<        36:  399:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorIN7OpenDDS4DCPS6GUID_tEEneERKS3_:
<     #####:  398:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  399:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEneERKS8_:
<        26:  398:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<        26:  399:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEneERKS9_:
2034,2066d401
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEneERKS9_:
<        24:  398:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<        24:  399:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_15TransportClient12PendingAssocEEEEEneERKSA_:
<     #####:  398:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  399:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS19TransportReassembly7FragKeyENSt7__cxx114listINS3_9FragRangeESaIS8_EEEEEneERKSC_:
<     #####:  398:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  399:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorIN7OpenDDS4DCPS19TransportReassembly7FragKeyEEneERKS4_:
<     #####:  398:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  399:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEEEneERKSE_:
<        90:  398:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<        90:  399:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEEEneERKSE_:
<     #####:  398:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  399:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEneERKS9_:
<     #####:  398:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  399:      { return _M_node != __x._M_node; }
< ------------------
< _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberENS2_6GUID_tEEEneERKS7_:
<     #####:  398:      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
<     #####:  399:      { return _M_node != __x._M_node; }
< ------------------
2074c409
<         -:  407:	       const _Rb_tree_const_iterator<_Val>& __y) _GLIBCXX_NOEXCEPT
---
>         -:  407:               const _Rb_tree_const_iterator<_Val>& __y) _GLIBCXX_NOEXCEPT
2080c415
<         -:  413:	       const _Rb_tree_const_iterator<_Val>& __y) _GLIBCXX_NOEXCEPT
---
>         -:  413:               const _Rb_tree_const_iterator<_Val>& __y) _GLIBCXX_NOEXCEPT
2085,2087c420,422
<         -:  418:				_Rb_tree_node_base* __x,
<         -:  419:				_Rb_tree_node_base* __p,
<         -:  420:				_Rb_tree_node_base& __header) throw ();
---
>         -:  418:                                _Rb_tree_node_base* __x,
>         -:  419:                                _Rb_tree_node_base* __p,
>         -:  420:                                _Rb_tree_node_base& __header) throw ();
2110c445
<         -:  443:	   typename _Compare, typename _Alloc = allocator<_Val> >
---
>         -:  443:           typename _Compare, typename _Alloc = allocator<_Val> >
2114c449
<         -:  447:	rebind<_Rb_tree_node<_Val> >::other _Node_allocator;
---
>         -:  447:        rebind<_Rb_tree_node<_Val> >::other _Node_allocator;
2118,2145c453,480
<         -:  451:#if __cplusplus >= 201103L
<         -:  452:      static_assert(__is_invocable<_Compare&, const _Key&, const _Key&>{},
<         -:  453:	  "comparison object must be invocable with two arguments of key type");
<         -:  454:# if __cplusplus >= 201703L
<         -:  455:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
<         -:  456:      // 2542. Missing const requirements for associative containers
<         -:  457:      static_assert(is_invocable_v<const _Compare&, const _Key&, const _Key&>,
<         -:  458:	  "comparison object must be invocable as const");
<         -:  459:# endif // C++17
<         -:  460:#endif // C++11
<         -:  461:
<         -:  462:    protected:
<         -:  463:      typedef _Rb_tree_node_base* 		_Base_ptr;
<         -:  464:      typedef const _Rb_tree_node_base* 	_Const_Base_ptr;
<         -:  465:      typedef _Rb_tree_node<_Val>* 		_Link_type;
<         -:  466:      typedef const _Rb_tree_node<_Val>*	_Const_Link_type;
<         -:  467:
<         -:  468:    private:
<         -:  469:      // Functor recycling a pool of nodes and using allocation once the pool
<         -:  470:      // is empty.
<         -:  471:      struct _Reuse_or_alloc_node
<         -:  472:      {
<     #####:  473:	_Reuse_or_alloc_node(_Rb_tree& __t)
<     #####:  474:	  : _M_root(__t._M_root()), _M_nodes(__t._M_rightmost()), _M_t(__t)
<         -:  475:	{
<     #####:  476:	  if (_M_root)
<         -:  477:	    {
<     #####:  478:	      _M_root->_M_parent = 0;
---
>         -:  451:    protected:
>         -:  452:      typedef _Rb_tree_node_base* 		_Base_ptr;
>         -:  453:      typedef const _Rb_tree_node_base* 	_Const_Base_ptr;
>         -:  454:      typedef _Rb_tree_node<_Val>* 		_Link_type;
>         -:  455:      typedef const _Rb_tree_node<_Val>*	_Const_Link_type;
>         -:  456:
>         -:  457:    private:
>         -:  458:      // Functor recycling a pool of nodes and using allocation once the pool
>         -:  459:      // is empty.
>         -:  460:      struct _Reuse_or_alloc_node
>         -:  461:      {
>         -:  462:	_Reuse_or_alloc_node(_Rb_tree& __t)
>         -:  463:	  : _M_root(__t._M_root()), _M_nodes(__t._M_rightmost()), _M_t(__t)
>         -:  464:	{
>         -:  465:	  if (_M_root)
>         -:  466:	    {
>         -:  467:	      _M_root->_M_parent = 0;
>         -:  468:
>         -:  469:	      if (_M_nodes->_M_left)
>         -:  470:		_M_nodes = _M_nodes->_M_left;
>         -:  471:	    }
>         -:  472:	  else
>         -:  473:	    _M_nodes = 0;
>         -:  474:	}
>         -:  475:
>         -:  476:#if __cplusplus >= 201103L
>         -:  477:	_Reuse_or_alloc_node(const _Reuse_or_alloc_node&) = delete;
>         -:  478:#endif
2147,2155c482,490
<     #####:  480:	      if (_M_nodes->_M_left)
<     #####:  481:		_M_nodes = _M_nodes->_M_left;
<         -:  482:	    }
<         -:  483:	  else
<     #####:  484:	    _M_nodes = 0;
<     #####:  485:	}
<         -:  486:
<         -:  487:#if __cplusplus >= 201103L
<         -:  488:	_Reuse_or_alloc_node(const _Reuse_or_alloc_node&) = delete;
---
>         -:  480:	~_Reuse_or_alloc_node()
>         -:  481:	{ _M_t._M_erase(static_cast<_Link_type>(_M_root)); }
>         -:  482:
>         -:  483:	template<typename _Arg>
>         -:  484:	  _Link_type
>         -:  485:#if __cplusplus < 201103L
>         -:  486:	  operator()(const _Arg& __arg)
>         -:  487:#else
>         -:  488:	  operator()(_Arg&& __arg)
2157,2303c492,573
<         -:  490:
<     #####:  491:	~_Reuse_or_alloc_node()
<     #####:  492:	{ _M_t._M_erase(static_cast<_Link_type>(_M_root)); }
<         -:  493:
<         -:  494:	template<typename _Arg>
<         -:  495:	  _Link_type
<         -:  496:#if __cplusplus < 201103L
<         -:  497:	  operator()(const _Arg& __arg)
<         -:  498:#else
<     #####:  499:	  operator()(_Arg&& __arg)
<         -:  500:#endif
<         -:  501:	  {
<     #####:  502:	    _Link_type __node = static_cast<_Link_type>(_M_extract());
<     #####:  503:	    if (__node)
<         -:  504:	      {
<     #####:  505:		_M_t._M_destroy_node(__node);
<     #####:  506:		_M_t._M_construct_node(__node, _GLIBCXX_FORWARD(_Arg, __arg));
<     #####:  507:		return __node;
<         -:  508:	      }
<         -:  509:
<     #####:  510:	    return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg));
<         -:  511:	  }
<         -:  512:
<         -:  513:      private:
<         -:  514:	_Base_ptr
<     #####:  515:	_M_extract()
<         -:  516:	{
<     #####:  517:	  if (!_M_nodes)
<     #####:  518:	    return _M_nodes;
<         -:  519:
<     #####:  520:	  _Base_ptr __node = _M_nodes;
<     #####:  521:	  _M_nodes = _M_nodes->_M_parent;
<     #####:  522:	  if (_M_nodes)
<         -:  523:	    {
<     #####:  524:	      if (_M_nodes->_M_right == __node)
<         -:  525:		{
<     #####:  526:		  _M_nodes->_M_right = 0;
<         -:  527:
<     #####:  528:		  if (_M_nodes->_M_left)
<         -:  529:		    {
<     #####:  530:		      _M_nodes = _M_nodes->_M_left;
<         -:  531:
<     #####:  532:		      while (_M_nodes->_M_right)
<     #####:  533:			_M_nodes = _M_nodes->_M_right;
<         -:  534:
<     #####:  535:		      if (_M_nodes->_M_left)
<     #####:  536:			_M_nodes = _M_nodes->_M_left;
<         -:  537:		    }
<         -:  538:		}
<         -:  539:	      else // __node is on the left.
<     #####:  540:		_M_nodes->_M_left = 0;
<         -:  541:	    }
<         -:  542:	  else
<     #####:  543:	    _M_root = 0;
<         -:  544:
<     #####:  545:	  return __node;
<         -:  546:	}
<         -:  547:
<         -:  548:	_Base_ptr _M_root;
<         -:  549:	_Base_ptr _M_nodes;
<         -:  550:	_Rb_tree& _M_t;
<         -:  551:      };
<         -:  552:
<         -:  553:      // Functor similar to the previous one but without any pool of nodes to
<         -:  554:      // recycle.
<         -:  555:      struct _Alloc_node
<         -:  556:      {
<      174*:  557:	_Alloc_node(_Rb_tree& __t)
<      174*:  558:	  : _M_t(__t) { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE11_Alloc_nodeC2ERS7_:
<     #####:  557:	_Alloc_node(_Rb_tree& __t)
<     #####:  558:	  : _M_t(__t) { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_Alloc_nodeC2ERSD_:
<     #####:  557:	_Alloc_node(_Rb_tree& __t)
<     #####:  558:	  : _M_t(__t) { }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE11_Alloc_nodeC2ERSD_:
<        83:  557:	_Alloc_node(_Rb_tree& __t)
<        83:  558:	  : _M_t(__t) { }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE11_Alloc_nodeC2ERSD_:
<     #####:  557:	_Alloc_node(_Rb_tree& __t)
<     #####:  558:	  : _M_t(__t) { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE11_Alloc_nodeC2ERSG_:
<         2:  557:	_Alloc_node(_Rb_tree& __t)
<         2:  558:	  : _M_t(__t) { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE11_Alloc_nodeC2ERS9_:
<     #####:  557:	_Alloc_node(_Rb_tree& __t)
<     #####:  558:	  : _M_t(__t) { }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE11_Alloc_nodeC2ERSJ_:
<        89:  557:	_Alloc_node(_Rb_tree& __t)
<        89:  558:	  : _M_t(__t) { }
< ------------------
<         -:  559:
<         -:  560:	template<typename _Arg>
<         -:  561:	  _Link_type
<         -:  562:#if __cplusplus < 201103L
<         -:  563:	  operator()(const _Arg& __arg) const
<         -:  564:#else
<      174*:  565:	  operator()(_Arg&& __arg) const
<         -:  566:#endif
<      174*:  567:	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_:
<     #####:  565:	  operator()(_Arg&& __arg) const
<         -:  566:#endif
<     #####:  567:	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE11_Alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_:
<     #####:  565:	  operator()(_Arg&& __arg) const
<         -:  566:#endif
<     #####:  567:	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
< ------------------
< _ZNKSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE11_Alloc_nodeclIS7_EEPSt13_Rb_tree_nodeIS7_EOT_:
<        83:  565:	  operator()(_Arg&& __arg) const
<         -:  566:#endif
<        83:  567:	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
< ------------------
< _ZNKSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE11_Alloc_nodeclIS7_EEPSt13_Rb_tree_nodeIS7_EOT_:
<     #####:  565:	  operator()(_Arg&& __arg) const
<         -:  566:#endif
<     #####:  567:	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE11_Alloc_nodeclISA_EEPSt13_Rb_tree_nodeISA_EOT_:
<         2:  565:	  operator()(_Arg&& __arg) const
<         -:  566:#endif
<         2:  567:	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_:
<     #####:  565:	  operator()(_Arg&& __arg) const
<         -:  566:#endif
<     #####:  567:	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE11_Alloc_nodeclISD_EEPSt13_Rb_tree_nodeISD_EOT_:
<        89:  565:	  operator()(_Arg&& __arg) const
<         -:  566:#endif
<        89:  567:	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
< ------------------
<         -:  568:
<         -:  569:      private:
<         -:  570:	_Rb_tree& _M_t;
<         -:  571:      };
---
>         -:  490:	  {
>         -:  491:	    _Link_type __node = static_cast<_Link_type>(_M_extract());
>         -:  492:	    if (__node)
>         -:  493:	      {
>         -:  494:		_M_t._M_destroy_node(__node);
>         -:  495:		_M_t._M_construct_node(__node, _GLIBCXX_FORWARD(_Arg, __arg));
>         -:  496:		return __node;
>         -:  497:	      }
>         -:  498:
>         -:  499:	    return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg));
>         -:  500:	  }
>         -:  501:
>         -:  502:      private:
>         -:  503:	_Base_ptr
>         -:  504:	_M_extract()
>         -:  505:	{
>         -:  506:	  if (!_M_nodes)
>         -:  507:	    return _M_nodes;
>         -:  508:
>         -:  509:	  _Base_ptr __node = _M_nodes;
>         -:  510:	  _M_nodes = _M_nodes->_M_parent;
>         -:  511:	  if (_M_nodes)
>         -:  512:	    {
>         -:  513:	      if (_M_nodes->_M_right == __node)
>         -:  514:		{
>         -:  515:		  _M_nodes->_M_right = 0;
>         -:  516:
>         -:  517:		  if (_M_nodes->_M_left)
>         -:  518:		    {
>         -:  519:		      _M_nodes = _M_nodes->_M_left;
>         -:  520:
>         -:  521:		      while (_M_nodes->_M_right)
>         -:  522:			_M_nodes = _M_nodes->_M_right;
>         -:  523:
>         -:  524:		      if (_M_nodes->_M_left)
>         -:  525:			_M_nodes = _M_nodes->_M_left;
>         -:  526:		    }
>         -:  527:		}
>         -:  528:	      else // __node is on the left.
>         -:  529:		_M_nodes->_M_left = 0;
>         -:  530:	    }
>         -:  531:	  else
>         -:  532:	    _M_root = 0;
>         -:  533:
>         -:  534:	  return __node;
>         -:  535:	}
>         -:  536:
>         -:  537:	_Base_ptr _M_root;
>         -:  538:	_Base_ptr _M_nodes;
>         -:  539:	_Rb_tree& _M_t;
>         -:  540:      };
>         -:  541:
>         -:  542:      // Functor similar to the previous one but without any pool of nodes to
>         -:  543:      // recycle.
>         -:  544:      struct _Alloc_node
>         -:  545:      {
>         -:  546:	_Alloc_node(_Rb_tree& __t)
>         -:  547:	  : _M_t(__t) { }
>         -:  548:
>         -:  549:	template<typename _Arg>
>         -:  550:	  _Link_type
>         -:  551:#if __cplusplus < 201103L
>         -:  552:	  operator()(const _Arg& __arg) const
>         -:  553:#else
>         -:  554:	  operator()(_Arg&& __arg) const
>         -:  555:#endif
>         -:  556:	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
>         -:  557:
>         -:  558:      private:
>         -:  559:	_Rb_tree& _M_t;
>         -:  560:      };
>         -:  561:
>         -:  562:    public:
>         -:  563:      typedef _Key 				key_type;
>         -:  564:      typedef _Val 				value_type;
>         -:  565:      typedef value_type* 			pointer;
>         -:  566:      typedef const value_type* 		const_pointer;
>         -:  567:      typedef value_type& 			reference;
>         -:  568:      typedef const value_type& 		const_reference;
>         -:  569:      typedef size_t 				size_type;
>         -:  570:      typedef ptrdiff_t 			difference_type;
>         -:  571:      typedef _Alloc 				allocator_type;
2305,3820c575,673
<         -:  573:    public:
<         -:  574:      typedef _Key 				key_type;
<         -:  575:      typedef _Val 				value_type;
<         -:  576:      typedef value_type* 			pointer;
<         -:  577:      typedef const value_type* 		const_pointer;
<         -:  578:      typedef value_type& 			reference;
<         -:  579:      typedef const value_type& 		const_reference;
<         -:  580:      typedef size_t 				size_type;
<         -:  581:      typedef ptrdiff_t 			difference_type;
<         -:  582:      typedef _Alloc 				allocator_type;
<         -:  583:
<         -:  584:      _Node_allocator&
<     2772*:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<     2772*:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE21_M_get_Node_allocatorEv:
<        72:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<        72:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE21_M_get_Node_allocatorEv:
<     #####:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<     #####:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE21_M_get_Node_allocatorEv:
<     #####:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<     #####:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE21_M_get_Node_allocatorEv:
<     #####:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<     #####:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE21_M_get_Node_allocatorEv:
<       356:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<       356:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE21_M_get_Node_allocatorEv:
<       832:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<       832:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE21_M_get_Node_allocatorEv:
<       712:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<       712:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv:
<     #####:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<     #####:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE21_M_get_Node_allocatorEv:
<     #####:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<     #####:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE21_M_get_Node_allocatorEv:
<     #####:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<     #####:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE21_M_get_Node_allocatorEv:
<     #####:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<     #####:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE21_M_get_Node_allocatorEv:
<         4:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<         4:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE21_M_get_Node_allocatorEv:
<     #####:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<     #####:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE21_M_get_Node_allocatorEv:
<     #####:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<     #####:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE21_M_get_Node_allocatorEv:
<     #####:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<     #####:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE21_M_get_Node_allocatorEv:
<        72:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<        72:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE21_M_get_Node_allocatorEv:
<        72:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<        72:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE21_M_get_Node_allocatorEv:
<     #####:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<     #####:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE21_M_get_Node_allocatorEv:
<        36:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<        36:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE21_M_get_Node_allocatorEv:
<       108:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<       108:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE21_M_get_Node_allocatorEv:
<        72:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<        72:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE21_M_get_Node_allocatorEv:
<     #####:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<     #####:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE21_M_get_Node_allocatorEv:
<       364:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<       364:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE21_M_get_Node_allocatorEv:
<     #####:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<     #####:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE21_M_get_Node_allocatorEv:
<        72:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<        72:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE21_M_get_Node_allocatorEv:
<     #####:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<     #####:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE21_M_get_Node_allocatorEv:
<     #####:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<     #####:  586:      { return this->_M_impl; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE21_M_get_Node_allocatorEv:
<     #####:  585:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
<     #####:  586:      { return this->_M_impl; }
< ------------------
<         -:  587:
<         -:  588:      const _Node_allocator&
<     #####:  589:      _M_get_Node_allocator() const _GLIBCXX_NOEXCEPT
<     #####:  590:      { return this->_M_impl; }
<         -:  591:
<         -:  592:      allocator_type
<         -:  593:      get_allocator() const _GLIBCXX_NOEXCEPT
<         -:  594:      { return allocator_type(_M_get_Node_allocator()); }
<         -:  595:
<         -:  596:    protected:
<         -:  597:      _Link_type
<      694*:  598:      _M_get_node()
<      694*:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE11_M_get_nodeEv:
<        18:  598:      _M_get_node()
<        18:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE11_M_get_nodeEv:
<     #####:  598:      _M_get_node()
<     #####:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE11_M_get_nodeEv:
<     #####:  598:      _M_get_node()
<     #####:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE11_M_get_nodeEv:
<     #####:  598:      _M_get_node()
<     #####:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE11_M_get_nodeEv:
<       208:  598:      _M_get_node()
<       208:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv:
<     #####:  598:      _M_get_node()
<     #####:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE11_M_get_nodeEv:
<       178:  598:      _M_get_node()
<       178:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE11_M_get_nodeEv:
<        89:  598:      _M_get_node()
<        89:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE11_M_get_nodeEv:
<     #####:  598:      _M_get_node()
<     #####:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE11_M_get_nodeEv:
<     #####:  598:      _M_get_node()
<     #####:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE11_M_get_nodeEv:
<         2:  598:      _M_get_node()
<         2:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE11_M_get_nodeEv:
<     #####:  598:      _M_get_node()
<     #####:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE11_M_get_nodeEv:
<     #####:  598:      _M_get_node()
<     #####:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_get_nodeEv:
<        18:  598:      _M_get_node()
<        18:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE11_M_get_nodeEv:
<     #####:  598:      _M_get_node()
<     #####:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_get_nodeEv:
<        27:  598:      _M_get_node()
<        27:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_get_nodeEv:
<        18:  598:      _M_get_node()
<        18:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE11_M_get_nodeEv:
<        91:  598:      _M_get_node()
<        91:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_get_nodeEv:
<     #####:  598:      _M_get_node()
<     #####:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_get_nodeEv:
<     #####:  598:      _M_get_node()
<     #####:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE11_M_get_nodeEv:
<        18:  598:      _M_get_node()
<        18:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_get_nodeEv:
<         9:  598:      _M_get_node()
<         9:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_get_nodeEv:
<        18:  598:      _M_get_node()
<        18:  599:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
< ------------------
<         -:  600:
<         -:  601:      void
<      692*:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<      692*:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E:
<        18:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<        18:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE11_M_put_nodeEPSt13_Rb_tree_nodeISC_E:
<     #####:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<     #####:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE11_M_put_nodeEPSt13_Rb_tree_nodeISI_E:
<     #####:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<     #####:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS6_E:
<     #####:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<     #####:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE11_M_put_nodeEPSt13_Rb_tree_nodeISD_E:
<        89:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<        89:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE11_M_put_nodeEPSt13_Rb_tree_nodeISD_E:
<       208:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<       208:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE11_M_put_nodeEPSt13_Rb_tree_nodeISD_E:
<       178:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<       178:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<     #####:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS7_E:
<     #####:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<     #####:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE11_M_put_nodeEPSt13_Rb_tree_nodeISB_E:
<     #####:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<     #####:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E:
<     #####:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<     #####:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE11_M_put_nodeEPSt13_Rb_tree_nodeISA_E:
<     #####:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<     #####:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<     #####:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS7_E:
<     #####:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<     #####:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E:
<     #####:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<     #####:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E:
<        18:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<        18:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E:
<        18:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<        18:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS7_E:
<     #####:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<     #####:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E:
<         9:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         9:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E:
<        27:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<        27:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E:
<        18:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<        18:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<     #####:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS7_E:
<        91:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<        91:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<     #####:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<     #####:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<     #####:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E:
<        18:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<        18:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  602:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<     #####:  603:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
< ------------------
<         -:  604:
<         -:  605:#if __cplusplus < 201103L
<         -:  606:      void
<         -:  607:      _M_construct_node(_Link_type __node, const value_type& __x)
<         -:  608:      {
<         -:  609:	__try
<         -:  610:	  { get_allocator().construct(__node->_M_valptr(), __x); }
<         -:  611:	__catch(...)
<         -:  612:	  {
<         -:  613:	    _M_put_node(__node);
<         -:  614:	    __throw_exception_again;
<         -:  615:	  }
<         -:  616:      }
<         -:  617:
<         -:  618:      _Link_type
<         -:  619:      _M_create_node(const value_type& __x)
<         -:  620:      {
<         -:  621:	_Link_type __tmp = _M_get_node();
<         -:  622:	_M_construct_node(__tmp, __x);
<         -:  623:	return __tmp;
<         -:  624:      }
<         -:  625:
<         -:  626:      void
<         -:  627:      _M_destroy_node(_Link_type __p)
<         -:  628:      { get_allocator().destroy(__p->_M_valptr()); }
<         -:  629:#else
<         -:  630:      template<typename... _Args>
<         -:  631:	void
<      694*:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<      694*:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<      694*:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<      694*:  647:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESI_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_:
<        18:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<        18:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<        18:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<        18:  647:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESN_IJEEEEEvPSt13_Rb_tree_nodeISC_EDpOT_:
<     #####:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<     #####:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<     #####:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<     #####:  647:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEEvPSt13_Rb_tree_nodeIS6_EDpOT_:
<     #####:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<     #####:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<     #####:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<     #####:  647:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESR_IJEEEEEvPSt13_Rb_tree_nodeISI_EDpOT_:
<     #####:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<     #####:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<     #####:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<     #####:  647:	}
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESO_IJEEEEEvPSt13_Rb_tree_nodeISD_EDpOT_:
<       119:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<       119:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<       119:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<       119:  647:	}
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_:
<     #####:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<     #####:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<     #####:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<     #####:  647:	}
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESO_IJEEEEEvPSt13_Rb_tree_nodeISD_EDpOT_:
<       178:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<       178:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<       178:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<       178:  647:	}
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESO_IJEEEEEvPSt13_Rb_tree_nodeISD_EDpOT_:
<        89:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<        89:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<        89:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<        89:  647:	}
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE17_M_construct_nodeIJSD_EEEvPSt13_Rb_tree_nodeISD_EDpOT_:
<        89:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<        89:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<        89:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<        89:  647:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESM_IJEEEEEvPSt13_Rb_tree_nodeISB_EDpOT_:
<     #####:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<     #####:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<     #####:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<     #####:  647:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_:
<     #####:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<     #####:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<     #####:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<     #####:  647:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE17_M_construct_nodeIJSA_EEEvPSt13_Rb_tree_nodeISA_EDpOT_:
<         2:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<         2:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<         2:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<         2:  647:	}
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE17_M_construct_nodeIJRS7_EEEvPSt13_Rb_tree_nodeIS7_EDpOT_:
<         8:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<         8:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<         8:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<         8:  647:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE17_M_construct_nodeIJS3_IS2_S8_EEEEvPSt13_Rb_tree_nodeIS9_EDpOT_:
<        18:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<        18:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<        18:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<        18:  647:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE17_M_construct_nodeIJRKS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_:
<     #####:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<     #####:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<     #####:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<     #####:  647:	}
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESI_IJEEEEEvPSt13_Rb_tree_nodeIS7_EDpOT_:
<     #####:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<     #####:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<     #####:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<     #####:  647:	}
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE17_M_construct_nodeIJS7_EEEvPSt13_Rb_tree_nodeIS7_EDpOT_:
<     #####:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<     #####:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<     #####:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<     #####:  647:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE17_M_construct_nodeIJS3_IS2_S7_EEEEvPSt13_Rb_tree_nodeIS8_EDpOT_:
<        27:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<        27:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<        27:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<        27:  647:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESI_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_:
<        18:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<        18:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<        18:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<        18:  647:	}
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE17_M_construct_nodeIJS7_EEEvPSt13_Rb_tree_nodeIS7_EDpOT_:
<        83:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<        83:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<        83:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<        83:  647:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE17_M_construct_nodeIJS3_IS2_S7_EEEEvPSt13_Rb_tree_nodeIS8_EDpOT_:
<     #####:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<     #####:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<     #####:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<     #####:  647:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESI_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_:
<     #####:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<     #####:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<     #####:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<     #####:  647:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESI_IJEEEEEvPSt13_Rb_tree_nodeIS9_EDpOT_:
<        18:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<        18:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<        18:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<        18:  647:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE17_M_construct_nodeIJS3_IS2_S7_EEEEvPSt13_Rb_tree_nodeIS8_EDpOT_:
<         9:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<         9:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<         9:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<         9:  647:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESI_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_:
<        18:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<        18:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<        18:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<        18:  647:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_:
<     #####:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<     #####:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<     #####:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<     #####:  647:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE17_M_construct_nodeIJRKS2_EEEvPSt13_Rb_tree_nodeIS2_EDpOT_:
<     #####:  632:	_M_construct_node(_Link_type __node, _Args&&... __args)
<         -:  633:	{
<         -:  634:	  __try
<         -:  635:	    {
<     #####:  636:	      ::new(__node) _Rb_tree_node<_Val>;
<     #####:  637:	      _Alloc_traits::construct(_M_get_Node_allocator(),
<         -:  638:				       __node->_M_valptr(),
<         -:  639:				       std::forward<_Args>(__args)...);
<         -:  640:	    }
<     =====:  641:	  __catch(...)
<         -:  642:	    {
<         -:  643:	      __node->~_Rb_tree_node<_Val>();
<     =====:  644:	      _M_put_node(__node);
<     =====:  645:	      __throw_exception_again;
<         -:  646:	    }
<     #####:  647:	}
< ------------------
<         -:  648:
<         -:  649:      template<typename... _Args>
<         -:  650:	_Link_type
<      694*:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<      694*:  653:	  _Link_type __tmp = _M_get_node();
<      694*:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<      694*:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESI_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_:
<        18:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<        18:  653:	  _Link_type __tmp = _M_get_node();
<        18:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<        18:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESN_IJEEEEEPSt13_Rb_tree_nodeISC_EDpOT_:
<     #####:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<     #####:  653:	  _Link_type __tmp = _M_get_node();
<     #####:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<     #####:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEEPSt13_Rb_tree_nodeIS6_EDpOT_:
<     #####:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<     #####:  653:	  _Link_type __tmp = _M_get_node();
<     #####:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<     #####:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESR_IJEEEEEPSt13_Rb_tree_nodeISI_EDpOT_:
<     #####:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<     #####:  653:	  _Link_type __tmp = _M_get_node();
<     #####:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<     #####:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESO_IJEEEEEPSt13_Rb_tree_nodeISD_EDpOT_:
<       119:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<       119:  653:	  _Link_type __tmp = _M_get_node();
<       119:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<       119:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_:
<     #####:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<     #####:  653:	  _Link_type __tmp = _M_get_node();
<     #####:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<     #####:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESO_IJEEEEEPSt13_Rb_tree_nodeISD_EDpOT_:
<       178:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<       178:  653:	  _Link_type __tmp = _M_get_node();
<       178:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<       178:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESO_IJEEEEEPSt13_Rb_tree_nodeISD_EDpOT_:
<        89:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<        89:  653:	  _Link_type __tmp = _M_get_node();
<        89:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<        89:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE14_M_create_nodeIJSD_EEEPSt13_Rb_tree_nodeISD_EDpOT_:
<        89:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<        89:  653:	  _Link_type __tmp = _M_get_node();
<        89:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<        89:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESM_IJEEEEEPSt13_Rb_tree_nodeISB_EDpOT_:
<     #####:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<     #####:  653:	  _Link_type __tmp = _M_get_node();
<     #####:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<     #####:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_:
<     #####:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<     #####:  653:	  _Link_type __tmp = _M_get_node();
<     #####:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<     #####:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE14_M_create_nodeIJSA_EEEPSt13_Rb_tree_nodeISA_EDpOT_:
<         2:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<         2:  653:	  _Link_type __tmp = _M_get_node();
<         2:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<         2:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE14_M_create_nodeIJRS7_EEEPSt13_Rb_tree_nodeIS7_EDpOT_:
<         8:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<         8:  653:	  _Link_type __tmp = _M_get_node();
<         8:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<         8:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE14_M_create_nodeIJS3_IS2_S8_EEEEPSt13_Rb_tree_nodeIS9_EDpOT_:
<        18:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<        18:  653:	  _Link_type __tmp = _M_get_node();
<        18:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<        18:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE14_M_create_nodeIJRKS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_:
<     #####:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<     #####:  653:	  _Link_type __tmp = _M_get_node();
<     #####:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<     #####:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESI_IJEEEEEPSt13_Rb_tree_nodeIS7_EDpOT_:
<     #####:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<     #####:  653:	  _Link_type __tmp = _M_get_node();
<     #####:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<     #####:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE14_M_create_nodeIJS7_EEEPSt13_Rb_tree_nodeIS7_EDpOT_:
<     #####:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<     #####:  653:	  _Link_type __tmp = _M_get_node();
<     #####:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<     #####:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_create_nodeIJS3_IS2_S7_EEEEPSt13_Rb_tree_nodeIS8_EDpOT_:
<        27:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<        27:  653:	  _Link_type __tmp = _M_get_node();
<        27:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<        27:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESI_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_:
<        18:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<        18:  653:	  _Link_type __tmp = _M_get_node();
<        18:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<        18:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE14_M_create_nodeIJS7_EEEPSt13_Rb_tree_nodeIS7_EDpOT_:
<        83:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<        83:  653:	  _Link_type __tmp = _M_get_node();
<        83:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<        83:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_create_nodeIJS3_IS2_S7_EEEEPSt13_Rb_tree_nodeIS8_EDpOT_:
<     #####:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<     #####:  653:	  _Link_type __tmp = _M_get_node();
<     #####:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<     #####:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESI_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_:
<     #####:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<     #####:  653:	  _Link_type __tmp = _M_get_node();
<     #####:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<     #####:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESI_IJEEEEEPSt13_Rb_tree_nodeIS9_EDpOT_:
<        18:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<        18:  653:	  _Link_type __tmp = _M_get_node();
<        18:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<        18:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_create_nodeIJS3_IS2_S7_EEEEPSt13_Rb_tree_nodeIS8_EDpOT_:
<         9:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<         9:  653:	  _Link_type __tmp = _M_get_node();
<         9:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<         9:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESI_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_:
<        18:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<        18:  653:	  _Link_type __tmp = _M_get_node();
<        18:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<        18:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE14_M_create_nodeIJRKS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_:
<     #####:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<     #####:  653:	  _Link_type __tmp = _M_get_node();
<     #####:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<     #####:  655:	  return __tmp;
<         -:  656:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_:
<     #####:  651:	_M_create_node(_Args&&... __args)
<         -:  652:	{
<     #####:  653:	  _Link_type __tmp = _M_get_node();
<     #####:  654:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
<     #####:  655:	  return __tmp;
<         -:  656:	}
< ------------------
<         -:  657:
<         -:  658:      void
<      692*:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<      692*:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<      692*:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E:
<        18:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<        18:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<        18:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISC_E:
<     #####:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<     #####:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<     #####:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISI_E:
<     #####:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<     #####:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<     #####:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS6_E:
<     #####:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<     #####:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<     #####:  663:      }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISD_E:
<        89:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<        89:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<        89:  663:      }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISD_E:
<       208:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<       208:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<       208:  663:      }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISD_E:
<       178:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<       178:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<       178:  663:      }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<     #####:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<     #####:  663:      }
< ------------------
< _ZNSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS7_E:
<     #####:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<     #####:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<     #####:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISB_E:
<     #####:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<     #####:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<     #####:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E:
<     #####:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<     #####:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<     #####:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISA_E:
<     #####:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<     #####:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<     #####:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<     #####:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<     #####:  663:      }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS7_E:
<     #####:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<     #####:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<     #####:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E:
<     #####:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<     #####:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<     #####:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E:
<        18:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<        18:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<        18:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E:
<        18:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<        18:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<        18:  663:      }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS7_E:
<     #####:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<     #####:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<     #####:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E:
<         9:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<         9:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<         9:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E:
<        27:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<        27:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<        27:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E:
<        18:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<        18:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<        18:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<     #####:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<     #####:  663:      }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS7_E:
<        91:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<        91:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<        91:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<     #####:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<     #####:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<     #####:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<     #####:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<     #####:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<     #####:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E:
<        18:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<        18:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<        18:  663:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  659:      _M_destroy_node(_Link_type __p) noexcept
<         -:  660:      {
<     #####:  661:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
<         -:  662:	__p->~_Rb_tree_node<_Val>();
<     #####:  663:      }
< ------------------
<         -:  664:#endif
<         -:  665:
<         -:  666:      void
<      692*:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<      692*:  669:	_M_destroy_node(__p);
<      692*:  670:	_M_put_node(__p);
<      692*:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E:
<        18:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<        18:  669:	_M_destroy_node(__p);
<        18:  670:	_M_put_node(__p);
<        18:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISC_E:
<     #####:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<     #####:  669:	_M_destroy_node(__p);
<     #####:  670:	_M_put_node(__p);
<     #####:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISI_E:
<     #####:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<     #####:  669:	_M_destroy_node(__p);
<     #####:  670:	_M_put_node(__p);
<     #####:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS6_E:
<     #####:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<     #####:  669:	_M_destroy_node(__p);
<     #####:  670:	_M_put_node(__p);
<     #####:  671:      }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISD_E:
<        89:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<        89:  669:	_M_destroy_node(__p);
<        89:  670:	_M_put_node(__p);
<        89:  671:      }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISD_E:
<       208:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<       208:  669:	_M_destroy_node(__p);
<       208:  670:	_M_put_node(__p);
<       208:  671:      }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISD_E:
<       178:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<       178:  669:	_M_destroy_node(__p);
<       178:  670:	_M_put_node(__p);
<       178:  671:      }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<     #####:  669:	_M_destroy_node(__p);
<     #####:  670:	_M_put_node(__p);
<     #####:  671:      }
< ------------------
< _ZNSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS7_E:
<     #####:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<     #####:  669:	_M_destroy_node(__p);
<     #####:  670:	_M_put_node(__p);
<     #####:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISB_E:
<     #####:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<     #####:  669:	_M_destroy_node(__p);
<     #####:  670:	_M_put_node(__p);
<     #####:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E:
<     #####:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<     #####:  669:	_M_destroy_node(__p);
<     #####:  670:	_M_put_node(__p);
<     #####:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E:
<     #####:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<     #####:  669:	_M_destroy_node(__p);
<     #####:  670:	_M_put_node(__p);
<     #####:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<     #####:  669:	_M_destroy_node(__p);
<     #####:  670:	_M_put_node(__p);
<     #####:  671:      }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS7_E:
<     #####:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<     #####:  669:	_M_destroy_node(__p);
<     #####:  670:	_M_put_node(__p);
<     #####:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E:
<     #####:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<     #####:  669:	_M_destroy_node(__p);
<     #####:  670:	_M_put_node(__p);
<     #####:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E:
<        18:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<        18:  669:	_M_destroy_node(__p);
<        18:  670:	_M_put_node(__p);
<        18:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E:
<        18:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<        18:  669:	_M_destroy_node(__p);
<        18:  670:	_M_put_node(__p);
<        18:  671:      }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS7_E:
<     #####:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<     #####:  669:	_M_destroy_node(__p);
<     #####:  670:	_M_put_node(__p);
<     #####:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E:
<         9:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<         9:  669:	_M_destroy_node(__p);
<         9:  670:	_M_put_node(__p);
<         9:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E:
<        27:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<        27:  669:	_M_destroy_node(__p);
<        27:  670:	_M_put_node(__p);
<        27:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E:
<        18:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<        18:  669:	_M_destroy_node(__p);
<        18:  670:	_M_put_node(__p);
<        18:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<     #####:  669:	_M_destroy_node(__p);
<     #####:  670:	_M_put_node(__p);
<     #####:  671:      }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS7_E:
<        91:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<        91:  669:	_M_destroy_node(__p);
<        91:  670:	_M_put_node(__p);
<        91:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<     #####:  669:	_M_destroy_node(__p);
<     #####:  670:	_M_put_node(__p);
<     #####:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<     #####:  669:	_M_destroy_node(__p);
<     #####:  670:	_M_put_node(__p);
<     #####:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<     #####:  669:	_M_destroy_node(__p);
<     #####:  670:	_M_put_node(__p);
<     #####:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E:
<        18:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<        18:  669:	_M_destroy_node(__p);
<        18:  670:	_M_put_node(__p);
<        18:  671:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E:
<     #####:  667:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
<         -:  668:      {
<     #####:  669:	_M_destroy_node(__p);
<     #####:  670:	_M_put_node(__p);
<     #####:  671:      }
< ------------------
---
>         -:  573:      _Node_allocator&
>     #####:  574:      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
>     #####:  575:      { return *static_cast<_Node_allocator*>(&this->_M_impl); }
>         -:  576:      
>         -:  577:      const _Node_allocator&
>         -:  578:      _M_get_Node_allocator() const _GLIBCXX_NOEXCEPT
>         -:  579:      { return *static_cast<const _Node_allocator*>(&this->_M_impl); }
>         -:  580:
>         -:  581:      allocator_type
>         -:  582:      get_allocator() const _GLIBCXX_NOEXCEPT
>         -:  583:      { return allocator_type(_M_get_Node_allocator()); }
>         -:  584:
>         -:  585:    protected:
>         -:  586:      _Link_type
>     #####:  587:      _M_get_node()
>     #####:  588:      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
>         -:  589:
>         -:  590:      void
>     #####:  591:      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
>     #####:  592:      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
>         -:  593:
>         -:  594:#if __cplusplus < 201103L
>         -:  595:      void
>         -:  596:      _M_construct_node(_Link_type __node, const value_type& __x)
>         -:  597:      {
>         -:  598:	__try
>         -:  599:	  { get_allocator().construct(__node->_M_valptr(), __x); }
>         -:  600:	__catch(...)
>         -:  601:	  {
>         -:  602:	    _M_put_node(__node);
>         -:  603:	    __throw_exception_again;
>         -:  604:	  }
>         -:  605:      }
>         -:  606:
>         -:  607:      _Link_type
>         -:  608:      _M_create_node(const value_type& __x)
>         -:  609:      {
>         -:  610:	_Link_type __tmp = _M_get_node();
>         -:  611:	_M_construct_node(__tmp, __x);
>         -:  612:	return __tmp;
>         -:  613:      }
>         -:  614:
>         -:  615:      void
>         -:  616:      _M_destroy_node(_Link_type __p)
>         -:  617:      { get_allocator().destroy(__p->_M_valptr()); }
>         -:  618:#else
>         -:  619:      template<typename... _Args>
>         -:  620:	void
>     #####:  621:	_M_construct_node(_Link_type __node, _Args&&... __args)
>         -:  622:	{
>         -:  623:	  __try
>         -:  624:	    {
>     #####:  625:	      ::new(__node) _Rb_tree_node<_Val>;
>     #####:  626:	      _Alloc_traits::construct(_M_get_Node_allocator(),
>         -:  627:				       __node->_M_valptr(),
>         -:  628:				       std::forward<_Args>(__args)...);
>         -:  629:	    }
>     =====:  630:	  __catch(...)
>         -:  631:	    {
>         -:  632:	      __node->~_Rb_tree_node<_Val>();
>     =====:  633:	      _M_put_node(__node);
>     =====:  634:	      __throw_exception_again;
>         -:  635:	    }
>     #####:  636:	}
>         -:  637:
>         -:  638:      template<typename... _Args>
>         -:  639:        _Link_type
>     #####:  640:        _M_create_node(_Args&&... __args)
>         -:  641:	{
>     #####:  642:	  _Link_type __tmp = _M_get_node();
>     #####:  643:	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
>     #####:  644:	  return __tmp;
>         -:  645:	}
>         -:  646:
>         -:  647:      void
>     #####:  648:      _M_destroy_node(_Link_type __p) noexcept
>         -:  649:      {
>     #####:  650:	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
>         -:  651:	__p->~_Rb_tree_node<_Val>();
>     #####:  652:      }
>         -:  653:#endif
>         -:  654:
>         -:  655:      void
>     #####:  656:      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
>         -:  657:      {
>     #####:  658:	_M_destroy_node(__p);
>     #####:  659:	_M_put_node(__p);
>     #####:  660:      }
>         -:  661:
>         -:  662:      template<typename _NodeGen>
>         -:  663:	_Link_type
>         -:  664:	_M_clone_node(_Const_Link_type __x, _NodeGen& __node_gen)
>         -:  665:	{
>         -:  666:	  _Link_type __tmp = __node_gen(*__x->_M_valptr());
>         -:  667:	  __tmp->_M_color = __x->_M_color;
>         -:  668:	  __tmp->_M_left = 0;
>         -:  669:	  __tmp->_M_right = 0;
>         -:  670:	  return __tmp;
>         -:  671:	}
3822,3862c675,684
<         -:  673:      template<typename _NodeGen>
<         -:  674:	_Link_type
<     #####:  675:	_M_clone_node(_Const_Link_type __x, _NodeGen& __node_gen)
<         -:  676:	{
<     #####:  677:	  _Link_type __tmp = __node_gen(*__x->_M_valptr());
<     #####:  678:	  __tmp->_M_color = __x->_M_color;
<     #####:  679:	  __tmp->_M_left = 0;
<     #####:  680:	  __tmp->_M_right = 0;
<     #####:  681:	  return __tmp;
<         -:  682:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE13_M_clone_nodeINS7_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSB_RT_:
<     #####:  675:	_M_clone_node(_Const_Link_type __x, _NodeGen& __node_gen)
<         -:  676:	{
<     #####:  677:	  _Link_type __tmp = __node_gen(*__x->_M_valptr());
<     #####:  678:	  __tmp->_M_color = __x->_M_color;
<     #####:  679:	  __tmp->_M_left = 0;
<     #####:  680:	  __tmp->_M_right = 0;
<     #####:  681:	  return __tmp;
<         -:  682:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE13_M_clone_nodeINSD_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_EPKSH_RT_:
<     #####:  675:	_M_clone_node(_Const_Link_type __x, _NodeGen& __node_gen)
<         -:  676:	{
<     #####:  677:	  _Link_type __tmp = __node_gen(*__x->_M_valptr());
<     #####:  678:	  __tmp->_M_color = __x->_M_color;
<     #####:  679:	  __tmp->_M_left = 0;
<     #####:  680:	  __tmp->_M_right = 0;
<     #####:  681:	  return __tmp;
<         -:  682:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE13_M_clone_nodeINSD_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS9_EPKSH_RT_:
<     #####:  675:	_M_clone_node(_Const_Link_type __x, _NodeGen& __node_gen)
<         -:  676:	{
<     #####:  677:	  _Link_type __tmp = __node_gen(*__x->_M_valptr());
<     #####:  678:	  __tmp->_M_color = __x->_M_color;
<     #####:  679:	  __tmp->_M_left = 0;
<     #####:  680:	  __tmp->_M_right = 0;
<     #####:  681:	  return __tmp;
<         -:  682:	}
< ------------------
---
>         -:  673:    protected:
>         -:  674:      // Unused _Is_pod_comparator is kept as it is part of mangled name.
>         -:  675:      template<typename _Key_compare,
>         -:  676:	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
>     #####:  677:        struct _Rb_tree_impl
>         -:  678:	: public _Node_allocator
>         -:  679:	, public _Rb_tree_key_compare<_Key_compare>
>         -:  680:	, public _Rb_tree_header
>         -:  681:        {
>         -:  682:	  typedef _Rb_tree_key_compare<_Key_compare> _Base_key_compare;
3864,3866c686,688
<         -:  684:    protected:
<         -:  685:#if _GLIBCXX_INLINE_VERSION
<         -:  686:      template<typename _Key_compare>
---
>         -:  684:#if __cplusplus < 201103L
>         -:  685:	  _Rb_tree_impl()
>         -:  686:	  { }
3868,4080c690,728
<         -:  688:      // Unused _Is_pod_comparator is kept as it is part of mangled name.
<         -:  689:      template<typename _Key_compare,
<         -:  690:	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
<         -:  691:#endif
<         -:  692:	struct _Rb_tree_impl
<         -:  693:	: public _Node_allocator
<         -:  694:	, public _Rb_tree_key_compare<_Key_compare>
<         -:  695:	, public _Rb_tree_header
<         -:  696:	{
<         -:  697:	  typedef _Rb_tree_key_compare<_Key_compare> _Base_key_compare;
<         -:  698:
<      684*:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<      684*:  703:	  : _Node_allocator()
<      684*:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE13_Rb_tree_implISB_Lb1EEC2Ev:
<     #####:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<     #####:  703:	  : _Node_allocator()
<     #####:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE13_Rb_tree_implISG_Lb1EEC2Ev:
<     #####:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<     #####:  703:	  : _Node_allocator()
<     #####:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE13_Rb_tree_implISE_Lb1EEC2Ev:
<     #####:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<     #####:  703:	  : _Node_allocator()
<     #####:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE13_Rb_tree_implISA_Lb1EEC2Ev:
<     #####:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<     #####:  703:	  : _Node_allocator()
<     #####:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE13_Rb_tree_implISH_Lb1EEC2Ev:
<       119:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<       119:  703:	  : _Node_allocator()
<       119:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE13_Rb_tree_implISH_Lb1EEC2Ev:
<       119:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<       119:  703:	  : _Node_allocator()
<       119:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE13_Rb_tree_implISH_Lb1EEC2Ev:
<       119:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<       119:  703:	  : _Node_allocator()
<       119:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC2Ev:
<     #####:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<     #####:  703:	  : _Node_allocator()
<     #####:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE13_Rb_tree_implISB_Lb1EEC2Ev:
<       119:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<       119:  703:	  : _Node_allocator()
<       119:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE13_Rb_tree_implISE_Lb1EEC2Ev:
<         5:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<         5:  703:	  : _Node_allocator()
<         5:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE13_Rb_tree_implIS5_Lb1EEC2Ev:
<     #####:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<     #####:  703:	  : _Node_allocator()
<     #####:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE13_Rb_tree_implISC_Lb1EEC2Ev:
<        14:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<        14:  703:	  : _Node_allocator()
<        14:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE13_Rb_tree_implISB_Lb1EEC2Ev:
<        14:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<        14:  703:	  : _Node_allocator()
<        14:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE13_Rb_tree_implISB_Lb1EEC2Ev:
<        18:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<        18:  703:	  : _Node_allocator()
<        18:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE13_Rb_tree_implISB_Lb1EEC2Ev:
<        24:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<        24:  703:	  : _Node_allocator()
<        24:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE13_Rb_tree_implISB_Lb1EEC2Ev:
<       109:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<       109:  703:	  : _Node_allocator()
<       109:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE13_Rb_tree_implISB_Lb1EEC2Ev:
<     #####:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<     #####:  703:	  : _Node_allocator()
<     #####:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE13_Rb_tree_implISB_Lb1EEC2Ev:
<         6:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<         6:  703:	  : _Node_allocator()
<         6:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE13_Rb_tree_implISB_Lb1EEC2Ev:
<         6:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<         6:  703:	  : _Node_allocator()
<         6:  704:	  { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE13_Rb_tree_implIS6_Lb1EEC2Ev:
<        12:  699:	  _Rb_tree_impl()
<         -:  700:	    _GLIBCXX_NOEXCEPT_IF(
<         -:  701:		is_nothrow_default_constructible<_Node_allocator>::value
<         -:  702:		&& is_nothrow_default_constructible<_Base_key_compare>::value )
<        12:  703:	  : _Node_allocator()
<        12:  704:	  { }
< ------------------
<         -:  705:
<     #####:  706:	  _Rb_tree_impl(const _Rb_tree_impl& __x)
<         -:  707:	  : _Node_allocator(_Alloc_traits::_S_select_on_copy(__x))
<     #####:  708:	  , _Base_key_compare(__x._M_key_compare)
<     #####:  709:	  { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE13_Rb_tree_implIS5_Lb1EEC2ERKS9_:
<     #####:  706:	  _Rb_tree_impl(const _Rb_tree_impl& __x)
<         -:  707:	  : _Node_allocator(_Alloc_traits::_S_select_on_copy(__x))
<     #####:  708:	  , _Base_key_compare(__x._M_key_compare)
<     #####:  709:	  { }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE13_Rb_tree_implISB_Lb1EEC2ERKSF_:
<     #####:  706:	  _Rb_tree_impl(const _Rb_tree_impl& __x)
<         -:  707:	  : _Node_allocator(_Alloc_traits::_S_select_on_copy(__x))
<     #####:  708:	  , _Base_key_compare(__x._M_key_compare)
<     #####:  709:	  { }
< ------------------
<         -:  710:
<         -:  711:#if __cplusplus < 201103L
<         -:  712:	  _Rb_tree_impl(const _Key_compare& __comp, const _Node_allocator& __a)
<         -:  713:	  : _Node_allocator(__a), _Base_key_compare(__comp)
<         -:  714:	  { }
<         -:  715:#else
<         -:  716:	  _Rb_tree_impl(_Rb_tree_impl&&) = default;
<         -:  717:
<         -:  718:	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
<         -:  719:	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
<         -:  720:	  { }
<         -:  721:#endif
<         -:  722:	};
<         -:  723:
<         -:  724:      _Rb_tree_impl<_Compare> _M_impl;
<         -:  725:
<         -:  726:    protected:
---
>     #####:  688:	  _Rb_tree_impl() = default;
>         -:  689:	  _Rb_tree_impl(_Rb_tree_impl&&) = default;
>         -:  690:#endif
>         -:  691:
>         -:  692:	  _Rb_tree_impl(const _Rb_tree_impl& __x)
>         -:  693:	  : _Node_allocator(_Alloc_traits::_S_select_on_copy(__x))
>         -:  694:	  , _Base_key_compare(__x._M_key_compare)
>         -:  695:	  { }
>         -:  696:
>         -:  697:#if __cplusplus < 201103L
>         -:  698:	  _Rb_tree_impl(const _Key_compare& __comp, const _Node_allocator& __a)
>         -:  699:	  : _Node_allocator(__a), _Base_key_compare(__comp)
>         -:  700:	  { }
>         -:  701:#else
>         -:  702:	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
>         -:  703:	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
>         -:  704:	  { }
>         -:  705:#endif
>         -:  706:	};
>         -:  707:
>         -:  708:      _Rb_tree_impl<_Compare> _M_impl;
>         -:  709:
>         -:  710:    protected:
>         -:  711:      _Base_ptr&
>         -:  712:      _M_root() _GLIBCXX_NOEXCEPT
>         -:  713:      { return this->_M_impl._M_header._M_parent; }
>         -:  714:
>         -:  715:      _Const_Base_ptr
>         -:  716:      _M_root() const _GLIBCXX_NOEXCEPT
>         -:  717:      { return this->_M_impl._M_header._M_parent; }
>         -:  718:
>         -:  719:      _Base_ptr&
>     #####:  720:      _M_leftmost() _GLIBCXX_NOEXCEPT
>     #####:  721:      { return this->_M_impl._M_header._M_left; }
>         -:  722:
>         -:  723:      _Const_Base_ptr
>         -:  724:      _M_leftmost() const _GLIBCXX_NOEXCEPT
>         -:  725:      { return this->_M_impl._M_header._M_left; }
>         -:  726:
4082,4096c730,731
<     #####:  728:      _M_root() _GLIBCXX_NOEXCEPT
<     #####:  729:      { return this->_M_impl._M_header._M_parent; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE7_M_rootEv:
<     #####:  728:      _M_root() _GLIBCXX_NOEXCEPT
<     #####:  729:      { return this->_M_impl._M_header._M_parent; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE7_M_rootEv:
<     #####:  728:      _M_root() _GLIBCXX_NOEXCEPT
<     #####:  729:      { return this->_M_impl._M_header._M_parent; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_M_rootEv:
<     #####:  728:      _M_root() _GLIBCXX_NOEXCEPT
<     #####:  729:      { return this->_M_impl._M_header._M_parent; }
< ------------------
---
>     #####:  728:      _M_rightmost() _GLIBCXX_NOEXCEPT
>     #####:  729:      { return this->_M_impl._M_header._M_right; }
4099,4113c734,735
<     #####:  732:      _M_root() const _GLIBCXX_NOEXCEPT
<     #####:  733:      { return this->_M_impl._M_header._M_parent; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE7_M_rootEv:
<     #####:  732:      _M_root() const _GLIBCXX_NOEXCEPT
<     #####:  733:      { return this->_M_impl._M_header._M_parent; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE7_M_rootEv:
<     #####:  732:      _M_root() const _GLIBCXX_NOEXCEPT
<     #####:  733:      { return this->_M_impl._M_header._M_parent; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_M_rootEv:
<     #####:  732:      _M_root() const _GLIBCXX_NOEXCEPT
<     #####:  733:      { return this->_M_impl._M_header._M_parent; }
< ------------------
---
>         -:  732:      _M_rightmost() const _GLIBCXX_NOEXCEPT
>         -:  733:      { return this->_M_impl._M_header._M_right; }
4115,4178c737,739
<         -:  735:      _Base_ptr&
<        4*:  736:      _M_leftmost() _GLIBCXX_NOEXCEPT
<        4*:  737:      { return this->_M_impl._M_header._M_left; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE11_M_leftmostEv:
<     #####:  736:      _M_leftmost() _GLIBCXX_NOEXCEPT
<     #####:  737:      { return this->_M_impl._M_header._M_left; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_leftmostEv:
<     #####:  736:      _M_leftmost() _GLIBCXX_NOEXCEPT
<     #####:  737:      { return this->_M_impl._M_header._M_left; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_leftmostEv:
<     #####:  736:      _M_leftmost() _GLIBCXX_NOEXCEPT
<     #####:  737:      { return this->_M_impl._M_header._M_left; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE11_M_leftmostEv:
<         2:  736:      _M_leftmost() _GLIBCXX_NOEXCEPT
<         2:  737:      { return this->_M_impl._M_header._M_left; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_leftmostEv:
<     #####:  736:      _M_leftmost() _GLIBCXX_NOEXCEPT
<     #####:  737:      { return this->_M_impl._M_header._M_left; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_leftmostEv:
<         2:  736:      _M_leftmost() _GLIBCXX_NOEXCEPT
<         2:  737:      { return this->_M_impl._M_header._M_left; }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE11_M_leftmostEv:
<     #####:  736:      _M_leftmost() _GLIBCXX_NOEXCEPT
<     #####:  737:      { return this->_M_impl._M_header._M_left; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11_M_leftmostEv:
<     #####:  736:      _M_leftmost() _GLIBCXX_NOEXCEPT
<     #####:  737:      { return this->_M_impl._M_header._M_left; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE11_M_leftmostEv:
<     #####:  736:      _M_leftmost() _GLIBCXX_NOEXCEPT
<     #####:  737:      { return this->_M_impl._M_header._M_left; }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE11_M_leftmostEv:
<     #####:  736:      _M_leftmost() _GLIBCXX_NOEXCEPT
<     #####:  737:      { return this->_M_impl._M_header._M_left; }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv:
<     #####:  736:      _M_leftmost() _GLIBCXX_NOEXCEPT
<     #####:  737:      { return this->_M_impl._M_header._M_left; }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE11_M_leftmostEv:
<     #####:  736:      _M_leftmost() _GLIBCXX_NOEXCEPT
<     #####:  737:      { return this->_M_impl._M_header._M_left; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE11_M_leftmostEv:
<     #####:  736:      _M_leftmost() _GLIBCXX_NOEXCEPT
<     #####:  737:      { return this->_M_impl._M_header._M_left; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE11_M_leftmostEv:
<     #####:  736:      _M_leftmost() _GLIBCXX_NOEXCEPT
<     #####:  737:      { return this->_M_impl._M_header._M_left; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE11_M_leftmostEv:
<     #####:  736:      _M_leftmost() _GLIBCXX_NOEXCEPT
<     #####:  737:      { return this->_M_impl._M_header._M_left; }
< ------------------
---
>         -:  735:      _Link_type
>     #####:  736:      _M_begin() _GLIBCXX_NOEXCEPT
>     #####:  737:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
4180,4481c741,762
<         -:  739:      _Const_Base_ptr
<         -:  740:      _M_leftmost() const _GLIBCXX_NOEXCEPT
<         -:  741:      { return this->_M_impl._M_header._M_left; }
<         -:  742:
<         -:  743:      _Base_ptr&
<      404*:  744:      _M_rightmost() _GLIBCXX_NOEXCEPT
<      404*:  745:      { return this->_M_impl._M_header._M_right; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE12_M_rightmostEv:
<     #####:  744:      _M_rightmost() _GLIBCXX_NOEXCEPT
<     #####:  745:      { return this->_M_impl._M_header._M_right; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_rightmostEv:
<     #####:  744:      _M_rightmost() _GLIBCXX_NOEXCEPT
<     #####:  745:      { return this->_M_impl._M_header._M_right; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_rightmostEv:
<     #####:  744:      _M_rightmost() _GLIBCXX_NOEXCEPT
<     #####:  745:      { return this->_M_impl._M_header._M_right; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE12_M_rightmostEv:
<        20:  744:      _M_rightmost() _GLIBCXX_NOEXCEPT
<        20:  745:      { return this->_M_impl._M_header._M_right; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_rightmostEv:
<     #####:  744:      _M_rightmost() _GLIBCXX_NOEXCEPT
<     #####:  745:      { return this->_M_impl._M_header._M_right; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_rightmostEv:
<        20:  744:      _M_rightmost() _GLIBCXX_NOEXCEPT
<        20:  745:      { return this->_M_impl._M_header._M_right; }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE12_M_rightmostEv:
<     #####:  744:      _M_rightmost() _GLIBCXX_NOEXCEPT
<     #####:  745:      { return this->_M_impl._M_header._M_right; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_rightmostEv:
<         8:  744:      _M_rightmost() _GLIBCXX_NOEXCEPT
<         8:  745:      { return this->_M_impl._M_header._M_right; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE12_M_rightmostEv:
<     #####:  744:      _M_rightmost() _GLIBCXX_NOEXCEPT
<     #####:  745:      { return this->_M_impl._M_header._M_right; }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE12_M_rightmostEv:
<       178:  744:      _M_rightmost() _GLIBCXX_NOEXCEPT
<       178:  745:      { return this->_M_impl._M_header._M_right; }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv:
<     #####:  744:      _M_rightmost() _GLIBCXX_NOEXCEPT
<     #####:  745:      { return this->_M_impl._M_header._M_right; }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE12_M_rightmostEv:
<       178:  744:      _M_rightmost() _GLIBCXX_NOEXCEPT
<       178:  745:      { return this->_M_impl._M_header._M_right; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE12_M_rightmostEv:
<     #####:  744:      _M_rightmost() _GLIBCXX_NOEXCEPT
<     #####:  745:      { return this->_M_impl._M_header._M_right; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE12_M_rightmostEv:
<     #####:  744:      _M_rightmost() _GLIBCXX_NOEXCEPT
<     #####:  745:      { return this->_M_impl._M_header._M_right; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE12_M_rightmostEv:
<     #####:  744:      _M_rightmost() _GLIBCXX_NOEXCEPT
<     #####:  745:      { return this->_M_impl._M_header._M_right; }
< ------------------
<         -:  746:
<         -:  747:      _Const_Base_ptr
<         -:  748:      _M_rightmost() const _GLIBCXX_NOEXCEPT
<         -:  749:      { return this->_M_impl._M_header._M_right; }
<         -:  750:
<         -:  751:      _Link_type
<     2459*:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<     2459*:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE8_M_beginEv:
<       175:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<       175:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE8_M_beginEv:
<     #####:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<     #####:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE8_M_beginEv:
<     #####:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<     #####:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_beginEv:
<     #####:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<     #####:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_M_beginEv:
<       416:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<       416:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_M_beginEv:
<       565:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<       565:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_M_beginEv:
<       505:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<       505:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv:
<     #####:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<     #####:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE8_M_beginEv:
<     #####:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<     #####:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE8_M_beginEv:
<     #####:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<     #####:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_beginEv:
<     #####:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<     #####:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE8_M_beginEv:
<         7:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<         7:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_beginEv:
<     #####:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<     #####:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE8_M_beginEv:
<     #####:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<     #####:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_beginEv:
<     #####:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<     #####:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_beginEv:
<        72:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<        72:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_beginEv:
<        54:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<        54:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_beginEv:
<        33:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<        33:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE8_M_beginEv:
<     #####:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<     #####:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_beginEv:
<        60:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<        60:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_beginEv:
<       114:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<       114:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_beginEv:
<     #####:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<     #####:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE8_M_beginEv:
<       377:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<       377:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_beginEv:
<     #####:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<     #####:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_beginEv:
<     #####:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<     #####:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_beginEv:
<     #####:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<     #####:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE8_M_beginEv:
<        81:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<        81:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE8_M_beginEv:
<     #####:  752:      _M_begin() _GLIBCXX_NOEXCEPT
<     #####:  753:      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
< ------------------
<         -:  754:
<         -:  755:      _Const_Link_type
<      547*:  756:      _M_begin() const _GLIBCXX_NOEXCEPT
<         -:  757:      {
<         -:  758:	return static_cast<_Const_Link_type>
<      547*:  759:	  (this->_M_impl._M_header._M_parent);
<         -:  760:      }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE8_M_beginEv:
<     #####:  756:      _M_begin() const _GLIBCXX_NOEXCEPT
<         -:  757:      {
<         -:  758:	return static_cast<_Const_Link_type>
<     #####:  759:	  (this->_M_impl._M_header._M_parent);
<         -:  760:      }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_beginEv:
<     #####:  756:      _M_begin() const _GLIBCXX_NOEXCEPT
<         -:  757:      {
<         -:  758:	return static_cast<_Const_Link_type>
<     #####:  759:	  (this->_M_impl._M_header._M_parent);
<         -:  760:      }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE8_M_beginEv:
<     #####:  756:      _M_begin() const _GLIBCXX_NOEXCEPT
<         -:  757:      {
<         -:  758:	return static_cast<_Const_Link_type>
<     #####:  759:	  (this->_M_impl._M_header._M_parent);
<         -:  760:      }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_beginEv:
<     #####:  756:      _M_begin() const _GLIBCXX_NOEXCEPT
<         -:  757:      {
<         -:  758:	return static_cast<_Const_Link_type>
<     #####:  759:	  (this->_M_impl._M_header._M_parent);
<         -:  760:      }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_beginEv:
<     #####:  756:      _M_begin() const _GLIBCXX_NOEXCEPT
<         -:  757:      {
<         -:  758:	return static_cast<_Const_Link_type>
<     #####:  759:	  (this->_M_impl._M_header._M_parent);
<         -:  760:      }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE8_M_beginEv:
<     #####:  756:      _M_begin() const _GLIBCXX_NOEXCEPT
<         -:  757:      {
<         -:  758:	return static_cast<_Const_Link_type>
<     #####:  759:	  (this->_M_impl._M_header._M_parent);
<         -:  760:      }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_beginEv:
<     #####:  756:      _M_begin() const _GLIBCXX_NOEXCEPT
<         -:  757:      {
<         -:  758:	return static_cast<_Const_Link_type>
<     #####:  759:	  (this->_M_impl._M_header._M_parent);
<         -:  760:      }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_beginEv:
<        10:  756:      _M_begin() const _GLIBCXX_NOEXCEPT
<         -:  757:      {
<         -:  758:	return static_cast<_Const_Link_type>
<        10:  759:	  (this->_M_impl._M_header._M_parent);
<         -:  760:      }
< ------------------
< _ZNKSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE8_M_beginEv:
<     #####:  756:      _M_begin() const _GLIBCXX_NOEXCEPT
<         -:  757:      {
<         -:  758:	return static_cast<_Const_Link_type>
<     #####:  759:	  (this->_M_impl._M_header._M_parent);
<         -:  760:      }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_beginEv:
<     #####:  756:      _M_begin() const _GLIBCXX_NOEXCEPT
<         -:  757:      {
<         -:  758:	return static_cast<_Const_Link_type>
<     #####:  759:	  (this->_M_impl._M_header._M_parent);
<         -:  760:      }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE8_M_beginEv:
<     #####:  756:      _M_begin() const _GLIBCXX_NOEXCEPT
<         -:  757:      {
<         -:  758:	return static_cast<_Const_Link_type>
<     #####:  759:	  (this->_M_impl._M_header._M_parent);
<         -:  760:      }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_M_beginEv:
<       180:  756:      _M_begin() const _GLIBCXX_NOEXCEPT
<         -:  757:      {
<         -:  758:	return static_cast<_Const_Link_type>
<       180:  759:	  (this->_M_impl._M_header._M_parent);
<         -:  760:      }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_M_beginEv:
<       179:  756:      _M_begin() const _GLIBCXX_NOEXCEPT
<         -:  757:      {
<         -:  758:	return static_cast<_Const_Link_type>
<       179:  759:	  (this->_M_impl._M_header._M_parent);
<         -:  760:      }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_M_beginEv:
<       178:  756:      _M_begin() const _GLIBCXX_NOEXCEPT
<         -:  757:      {
<         -:  758:	return static_cast<_Const_Link_type>
<       178:  759:	  (this->_M_impl._M_header._M_parent);
<         -:  760:      }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE8_M_beginEv:
<     #####:  756:      _M_begin() const _GLIBCXX_NOEXCEPT
<         -:  757:      {
<         -:  758:	return static_cast<_Const_Link_type>
<     #####:  759:	  (this->_M_impl._M_header._M_parent);
<         -:  760:      }
< ------------------
---
>         -:  739:      _Const_Link_type
>     #####:  740:      _M_begin() const _GLIBCXX_NOEXCEPT
>         -:  741:      {
>         -:  742:	return static_cast<_Const_Link_type>
>     #####:  743:	  (this->_M_impl._M_header._M_parent);
>         -:  744:      }
>         -:  745:
>         -:  746:      _Base_ptr
>     #####:  747:      _M_end() _GLIBCXX_NOEXCEPT
>     #####:  748:      { return &this->_M_impl._M_header; }
>         -:  749:
>         -:  750:      _Const_Base_ptr
>     #####:  751:      _M_end() const _GLIBCXX_NOEXCEPT
>     #####:  752:      { return &this->_M_impl._M_header; }
>         -:  753:
>         -:  754:      static const_reference
>     #####:  755:      _S_value(_Const_Link_type __x)
>     #####:  756:      { return *__x->_M_valptr(); }
>         -:  757:
>         -:  758:      static const _Key&
>     #####:  759:      _S_key(_Const_Link_type __x)
>     #####:  760:      { return _KeyOfValue()(_S_value(__x)); }
4483,4590c764,766
<         -:  762:      _Base_ptr
<     2539*:  763:      _M_end() _GLIBCXX_NOEXCEPT
<     2539*:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE6_M_endEv:
<     #####:  763:      _M_end() _GLIBCXX_NOEXCEPT
<     #####:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE6_M_endEv:
<     #####:  763:      _M_end() _GLIBCXX_NOEXCEPT
<     #####:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE6_M_endEv:
<     #####:  763:      _M_end() _GLIBCXX_NOEXCEPT
<     #####:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE6_M_endEv:
<     #####:  763:      _M_end() _GLIBCXX_NOEXCEPT
<     #####:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE6_M_endEv:
<       623:  763:      _M_end() _GLIBCXX_NOEXCEPT
<       623:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv:
<     #####:  763:      _M_end() _GLIBCXX_NOEXCEPT
<     #####:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE6_M_endEv:
<       743:  763:      _M_end() _GLIBCXX_NOEXCEPT
<       743:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE6_M_endEv:
<       267:  763:      _M_end() _GLIBCXX_NOEXCEPT
<       267:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE6_M_endEv:
<     #####:  763:      _M_end() _GLIBCXX_NOEXCEPT
<     #####:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE6_M_endEv:
<     #####:  763:      _M_end() _GLIBCXX_NOEXCEPT
<     #####:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE6_M_endEv:
<         4:  763:      _M_end() _GLIBCXX_NOEXCEPT
<         4:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_M_endEv:
<     #####:  763:      _M_end() _GLIBCXX_NOEXCEPT
<     #####:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_M_endEv:
<        36:  763:      _M_end() _GLIBCXX_NOEXCEPT
<        36:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_M_endEv:
<        72:  763:      _M_end() _GLIBCXX_NOEXCEPT
<        72:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE6_M_endEv:
<       109:  763:      _M_end() _GLIBCXX_NOEXCEPT
<       109:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_M_endEv:
<        94:  763:      _M_end() _GLIBCXX_NOEXCEPT
<        94:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE6_M_endEv:
<     #####:  763:      _M_end() _GLIBCXX_NOEXCEPT
<     #####:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_M_endEv:
<        63:  763:      _M_end() _GLIBCXX_NOEXCEPT
<        63:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_M_endEv:
<       136:  763:      _M_end() _GLIBCXX_NOEXCEPT
<       136:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_M_endEv:
<     #####:  763:      _M_end() _GLIBCXX_NOEXCEPT
<     #####:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE6_M_endEv:
<       295:  763:      _M_end() _GLIBCXX_NOEXCEPT
<       295:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_M_endEv:
<     #####:  763:      _M_end() _GLIBCXX_NOEXCEPT
<     #####:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_M_endEv:
<     #####:  763:      _M_end() _GLIBCXX_NOEXCEPT
<     #####:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_M_endEv:
<     #####:  763:      _M_end() _GLIBCXX_NOEXCEPT
<     #####:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE6_M_endEv:
<        97:  763:      _M_end() _GLIBCXX_NOEXCEPT
<        97:  764:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE6_M_endEv:
<     #####:  763:      _M_end() _GLIBCXX_NOEXCEPT
<     #####:  764:      { return &this->_M_impl._M_header; }
< ------------------
---
>         -:  762:      static _Link_type
>     #####:  763:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
>     #####:  764:      { return static_cast<_Link_type>(__x->_M_left); }
4592,4655c768,770
<         -:  766:      _Const_Base_ptr
<      547*:  767:      _M_end() const _GLIBCXX_NOEXCEPT
<      547*:  768:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE6_M_endEv:
<     #####:  767:      _M_end() const _GLIBCXX_NOEXCEPT
<     #####:  768:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_M_endEv:
<     #####:  767:      _M_end() const _GLIBCXX_NOEXCEPT
<     #####:  768:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE6_M_endEv:
<     #####:  767:      _M_end() const _GLIBCXX_NOEXCEPT
<     #####:  768:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_M_endEv:
<     #####:  767:      _M_end() const _GLIBCXX_NOEXCEPT
<     #####:  768:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_M_endEv:
<     #####:  767:      _M_end() const _GLIBCXX_NOEXCEPT
<     #####:  768:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE6_M_endEv:
<     #####:  767:      _M_end() const _GLIBCXX_NOEXCEPT
<     #####:  768:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_M_endEv:
<     #####:  767:      _M_end() const _GLIBCXX_NOEXCEPT
<     #####:  768:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_M_endEv:
<        10:  767:      _M_end() const _GLIBCXX_NOEXCEPT
<        10:  768:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNKSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE6_M_endEv:
<     #####:  767:      _M_end() const _GLIBCXX_NOEXCEPT
<     #####:  768:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE6_M_endEv:
<     #####:  767:      _M_end() const _GLIBCXX_NOEXCEPT
<     #####:  768:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE6_M_endEv:
<     #####:  767:      _M_end() const _GLIBCXX_NOEXCEPT
<     #####:  768:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE6_M_endEv:
<       180:  767:      _M_end() const _GLIBCXX_NOEXCEPT
<       180:  768:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE6_M_endEv:
<       179:  767:      _M_end() const _GLIBCXX_NOEXCEPT
<       179:  768:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE6_M_endEv:
<       178:  767:      _M_end() const _GLIBCXX_NOEXCEPT
<       178:  768:      { return &this->_M_impl._M_header; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE6_M_endEv:
<     #####:  767:      _M_end() const _GLIBCXX_NOEXCEPT
<     #####:  768:      { return &this->_M_impl._M_header; }
< ------------------
---
>         -:  766:      static _Const_Link_type
>     #####:  767:      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
>     #####:  768:      { return static_cast<_Const_Link_type>(__x->_M_left); }
4657,4772c772,774
<         -:  770:      static const_reference
<     1831*:  771:      _S_value(_Const_Link_type __x)
<     1831*:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE8_S_valueEPKSt13_Rb_tree_nodeIS9_E:
<        45:  771:      _S_value(_Const_Link_type __x)
<        45:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE8_S_valueEPKSt13_Rb_tree_nodeISC_E:
<     #####:  771:      _S_value(_Const_Link_type __x)
<     #####:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_S_valueEPKSt13_Rb_tree_nodeIS6_E:
<     #####:  771:      _S_value(_Const_Link_type __x)
<     #####:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE8_S_valueEPKSt13_Rb_tree_nodeISI_E:
<     #####:  771:      _S_value(_Const_Link_type __x)
<     #####:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_S_valueEPKSt13_Rb_tree_nodeISD_E:
<       566:  771:      _S_value(_Const_Link_type __x)
<       566:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_valueEPKSt13_Rb_tree_nodeIS8_E:
<     #####:  771:      _S_value(_Const_Link_type __x)
<     #####:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_S_valueEPKSt13_Rb_tree_nodeISD_E:
<       445:  771:      _S_value(_Const_Link_type __x)
<       445:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_S_valueEPKSt13_Rb_tree_nodeISD_E:
<       178:  771:      _S_value(_Const_Link_type __x)
<       178:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE8_S_valueEPKSt13_Rb_tree_nodeISB_E:
<     #####:  771:      _S_value(_Const_Link_type __x)
<     #####:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_S_valueEPKSt13_Rb_tree_nodeIS3_E:
<     #####:  771:      _S_value(_Const_Link_type __x)
<     #####:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE8_S_valueEPKSt13_Rb_tree_nodeISA_E:
<     #####:  771:      _S_value(_Const_Link_type __x)
<     #####:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt13_Rb_tree_nodeIS8_E:
<     #####:  771:      _S_value(_Const_Link_type __x)
<     #####:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE8_S_valueEPKSt13_Rb_tree_nodeIS7_E:
<     #####:  771:      _S_value(_Const_Link_type __x)
<     #####:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE8_S_valueEPKSt13_Rb_tree_nodeIS7_E:
<     #####:  771:      _S_value(_Const_Link_type __x)
<     #####:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E:
<     #####:  771:      _S_value(_Const_Link_type __x)
<     #####:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt13_Rb_tree_nodeIS8_E:
<        56:  771:      _S_value(_Const_Link_type __x)
<        56:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE8_S_valueEPKSt13_Rb_tree_nodeIS7_E:
<     #####:  771:      _S_value(_Const_Link_type __x)
<     #####:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt13_Rb_tree_nodeIS8_E:
<        40:  771:      _S_value(_Const_Link_type __x)
<        40:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt13_Rb_tree_nodeIS8_E:
<        58:  771:      _S_value(_Const_Link_type __x)
<        58:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt13_Rb_tree_nodeIS8_E:
<       228:  771:      _S_value(_Const_Link_type __x)
<       228:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt13_Rb_tree_nodeIS8_E:
<     #####:  771:      _S_value(_Const_Link_type __x)
<     #####:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E:
<     #####:  771:      _S_value(_Const_Link_type __x)
<     #####:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE8_S_valueEPKSt13_Rb_tree_nodeIS7_E:
<        62:  771:      _S_value(_Const_Link_type __x)
<        62:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt13_Rb_tree_nodeIS8_E:
<     #####:  771:      _S_value(_Const_Link_type __x)
<     #####:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt13_Rb_tree_nodeIS8_E:
<     #####:  771:      _S_value(_Const_Link_type __x)
<     #####:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE8_S_valueEPKSt13_Rb_tree_nodeIS9_E:
<       135:  771:      _S_value(_Const_Link_type __x)
<       135:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt13_Rb_tree_nodeIS8_E:
<     #####:  771:      _S_value(_Const_Link_type __x)
<     #####:  772:      { return *__x->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt13_Rb_tree_nodeIS8_E:
<        18:  771:      _S_value(_Const_Link_type __x)
<        18:  772:      { return *__x->_M_valptr(); }
< ------------------
---
>         -:  770:      static _Link_type
>     #####:  771:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
>     #####:  772:      { return static_cast<_Link_type>(__x->_M_right); }
4774,4889c776,778
<         -:  774:      static const _Key&
<     1831*:  775:      _S_key(_Const_Link_type __x)
<     1831*:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E:
<        45:  775:      _S_key(_Const_Link_type __x)
<        45:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE6_S_keyEPKSt13_Rb_tree_nodeISC_E:
<     #####:  775:      _S_key(_Const_Link_type __x)
<     #####:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E:
<     #####:  775:      _S_key(_Const_Link_type __x)
<     #####:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE6_S_keyEPKSt13_Rb_tree_nodeISI_E:
<     #####:  775:      _S_key(_Const_Link_type __x)
<     #####:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE6_S_keyEPKSt13_Rb_tree_nodeISD_E:
<       566:  775:      _S_key(_Const_Link_type __x)
<       566:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E:
<     #####:  775:      _S_key(_Const_Link_type __x)
<     #####:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE6_S_keyEPKSt13_Rb_tree_nodeISD_E:
<       445:  775:      _S_key(_Const_Link_type __x)
<       445:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE6_S_keyEPKSt13_Rb_tree_nodeISD_E:
<       178:  775:      _S_key(_Const_Link_type __x)
<       178:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE6_S_keyEPKSt13_Rb_tree_nodeISB_E:
<     #####:  775:      _S_key(_Const_Link_type __x)
<     #####:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E:
<     #####:  775:      _S_key(_Const_Link_type __x)
<     #####:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE6_S_keyEPKSt13_Rb_tree_nodeISA_E:
<     #####:  775:      _S_key(_Const_Link_type __x)
<     #####:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E:
<     #####:  775:      _S_key(_Const_Link_type __x)
<     #####:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE6_S_keyEPKSt13_Rb_tree_nodeIS7_E:
<     #####:  775:      _S_key(_Const_Link_type __x)
<     #####:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE6_S_keyEPKSt13_Rb_tree_nodeIS7_E:
<     #####:  775:      _S_key(_Const_Link_type __x)
<     #####:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E:
<     #####:  775:      _S_key(_Const_Link_type __x)
<     #####:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E:
<        56:  775:      _S_key(_Const_Link_type __x)
<        56:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE6_S_keyEPKSt13_Rb_tree_nodeIS7_E:
<     #####:  775:      _S_key(_Const_Link_type __x)
<     #####:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E:
<        40:  775:      _S_key(_Const_Link_type __x)
<        40:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E:
<        58:  775:      _S_key(_Const_Link_type __x)
<        58:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E:
<       228:  775:      _S_key(_Const_Link_type __x)
<       228:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E:
<     #####:  775:      _S_key(_Const_Link_type __x)
<     #####:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E:
<     #####:  775:      _S_key(_Const_Link_type __x)
<     #####:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE6_S_keyEPKSt13_Rb_tree_nodeIS7_E:
<        62:  775:      _S_key(_Const_Link_type __x)
<        62:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E:
<     #####:  775:      _S_key(_Const_Link_type __x)
<     #####:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E:
<     #####:  775:      _S_key(_Const_Link_type __x)
<     #####:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E:
<       135:  775:      _S_key(_Const_Link_type __x)
<       135:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E:
<     #####:  775:      _S_key(_Const_Link_type __x)
<     #####:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E:
<        18:  775:      _S_key(_Const_Link_type __x)
<        18:  776:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
---
>         -:  774:      static _Const_Link_type
>     #####:  775:      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
>     #####:  776:      { return static_cast<_Const_Link_type>(__x->_M_right); }
4891,5006c780,782
<         -:  778:      static _Link_type
<      861*:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<      861*:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base:
<        27:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        27:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE7_S_leftEPSt18_Rb_tree_node_base:
<     #####:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE7_S_leftEPSt18_Rb_tree_node_base:
<     #####:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base:
<     #####:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE7_S_leftEPSt18_Rb_tree_node_base:
<        89:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        89:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE7_S_leftEPSt18_Rb_tree_node_base:
<       208:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<       208:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE7_S_leftEPSt18_Rb_tree_node_base:
<       178:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<       178:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base:
<     #####:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE7_S_leftEPSt18_Rb_tree_node_base:
<     #####:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base:
<     #####:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE7_S_leftEPSt18_Rb_tree_node_base:
<     #####:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE7_S_leftEPSt18_Rb_tree_node_base:
<     #####:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base:
<     #####:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE7_S_leftEPSt18_Rb_tree_node_base:
<     #####:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base:
<     #####:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base:
<        26:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        26:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base:
<        18:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        18:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base:
<        13:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        13:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE7_S_leftEPSt18_Rb_tree_node_base:
<     #####:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base:
<        29:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        29:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base:
<       103:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<       103:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base:
<     #####:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE7_S_leftEPSt18_Rb_tree_node_base:
<       113:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<       113:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base:
<     #####:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base:
<     #####:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base:
<     #####:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE7_S_leftEPSt18_Rb_tree_node_base:
<        57:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        57:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base:
<     #####:  779:      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  780:      { return static_cast<_Link_type>(__x->_M_left); }
< ------------------
---
>         -:  778:      static const_reference
>     #####:  779:      _S_value(_Const_Base_ptr __x)
>     #####:  780:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
5008,5071c784,786
<         -:  782:      static _Const_Link_type
<      274*:  783:      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<      274*:  784:      { return static_cast<_Const_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base:
<     #####:  783:      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  784:      { return static_cast<_Const_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_S_leftEPKSt18_Rb_tree_node_base:
<     #####:  783:      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  784:      { return static_cast<_Const_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE7_S_leftEPKSt18_Rb_tree_node_base:
<     #####:  783:      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  784:      { return static_cast<_Const_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_S_leftEPKSt18_Rb_tree_node_base:
<     #####:  783:      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  784:      { return static_cast<_Const_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_S_leftEPKSt18_Rb_tree_node_base:
<     #####:  783:      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  784:      { return static_cast<_Const_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base:
<     #####:  783:      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  784:      { return static_cast<_Const_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_S_leftEPKSt18_Rb_tree_node_base:
<     #####:  783:      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  784:      { return static_cast<_Const_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_S_leftEPKSt18_Rb_tree_node_base:
<         6:  783:      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<         6:  784:      { return static_cast<_Const_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE7_S_leftEPKSt18_Rb_tree_node_base:
<     #####:  783:      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  784:      { return static_cast<_Const_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base:
<     #####:  783:      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  784:      { return static_cast<_Const_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE7_S_leftEPKSt18_Rb_tree_node_base:
<     #####:  783:      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  784:      { return static_cast<_Const_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE7_S_leftEPKSt18_Rb_tree_node_base:
<       178:  783:      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<       178:  784:      { return static_cast<_Const_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE7_S_leftEPKSt18_Rb_tree_node_base:
<        90:  783:      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        90:  784:      { return static_cast<_Const_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE7_S_leftEPKSt18_Rb_tree_node_base:
<     #####:  783:      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  784:      { return static_cast<_Const_Link_type>(__x->_M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE7_S_leftEPKSt18_Rb_tree_node_base:
<     #####:  783:      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  784:      { return static_cast<_Const_Link_type>(__x->_M_left); }
< ------------------
---
>         -:  782:      static const _Key&
>     #####:  783:      _S_key(_Const_Base_ptr __x)
>     #####:  784:      { return _KeyOfValue()(_S_value(__x)); }
5073,5188c788,790
<         -:  786:      static _Link_type
<      985*:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<      985*:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base:
<     #####:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE8_S_rightEPSt18_Rb_tree_node_base:
<     #####:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE8_S_rightEPSt18_Rb_tree_node_base:
<     #####:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base:
<     #####:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_S_rightEPSt18_Rb_tree_node_base:
<        89:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        89:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_S_rightEPSt18_Rb_tree_node_base:
<       297:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<       297:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_S_rightEPSt18_Rb_tree_node_base:
<       267:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<       267:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base:
<     #####:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE8_S_rightEPSt18_Rb_tree_node_base:
<     #####:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base:
<     #####:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE8_S_rightEPSt18_Rb_tree_node_base:
<     #####:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE8_S_rightEPSt18_Rb_tree_node_base:
<     #####:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base:
<     #####:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE8_S_rightEPSt18_Rb_tree_node_base:
<     #####:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base:
<     #####:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base:
<         8:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<         8:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base:
<        18:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        18:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base:
<        12:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        12:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE8_S_rightEPSt18_Rb_tree_node_base:
<     #####:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base:
<        32:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        32:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base:
<        87:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        87:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base:
<     #####:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE8_S_rightEPSt18_Rb_tree_node_base:
<       115:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<       115:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base:
<     #####:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base:
<     #####:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base:
<     #####:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE8_S_rightEPSt18_Rb_tree_node_base:
<        60:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        60:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base:
<     #####:  787:      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  788:      { return static_cast<_Link_type>(__x->_M_right); }
< ------------------
---
>         -:  786:      static _Base_ptr
>         -:  787:      _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
>         -:  788:      { return _Rb_tree_node_base::_S_minimum(__x); }
5190,5253c792,794
<         -:  790:      static _Const_Link_type
<      193*:  791:      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<      193*:  792:      { return static_cast<_Const_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base:
<     #####:  791:      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  792:      { return static_cast<_Const_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_rightEPKSt18_Rb_tree_node_base:
<     #####:  791:      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  792:      { return static_cast<_Const_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE8_S_rightEPKSt18_Rb_tree_node_base:
<     #####:  791:      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  792:      { return static_cast<_Const_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_rightEPKSt18_Rb_tree_node_base:
<     #####:  791:      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  792:      { return static_cast<_Const_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_rightEPKSt18_Rb_tree_node_base:
<     #####:  791:      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  792:      { return static_cast<_Const_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base:
<     #####:  791:      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  792:      { return static_cast<_Const_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_rightEPKSt18_Rb_tree_node_base:
<     #####:  791:      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  792:      { return static_cast<_Const_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_rightEPKSt18_Rb_tree_node_base:
<        14:  791:      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        14:  792:      { return static_cast<_Const_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE8_S_rightEPKSt18_Rb_tree_node_base:
<     #####:  791:      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  792:      { return static_cast<_Const_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base:
<     #####:  791:      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  792:      { return static_cast<_Const_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE8_S_rightEPKSt18_Rb_tree_node_base:
<     #####:  791:      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  792:      { return static_cast<_Const_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_S_rightEPKSt18_Rb_tree_node_base:
<     #####:  791:      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  792:      { return static_cast<_Const_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_S_rightEPKSt18_Rb_tree_node_base:
<        90:  791:      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        90:  792:      { return static_cast<_Const_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_S_rightEPKSt18_Rb_tree_node_base:
<        89:  791:      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<        89:  792:      { return static_cast<_Const_Link_type>(__x->_M_right); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE8_S_rightEPKSt18_Rb_tree_node_base:
<     #####:  791:      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  792:      { return static_cast<_Const_Link_type>(__x->_M_right); }
< ------------------
---
>         -:  790:      static _Const_Base_ptr
>         -:  791:      _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
>         -:  792:      { return _Rb_tree_node_base::_S_minimum(__x); }
5255,5370c796,798
<         -:  794:      static const_reference
<      856*:  795:      _S_value(_Const_Base_ptr __x)
<      856*:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE8_S_valueEPKSt18_Rb_tree_node_base:
<     #####:  795:      _S_value(_Const_Base_ptr __x)
<     #####:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE8_S_valueEPKSt18_Rb_tree_node_base:
<     #####:  795:      _S_value(_Const_Base_ptr __x)
<     #####:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE8_S_valueEPKSt18_Rb_tree_node_base:
<     #####:  795:      _S_value(_Const_Base_ptr __x)
<     #####:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_S_valueEPKSt18_Rb_tree_node_base:
<     #####:  795:      _S_value(_Const_Base_ptr __x)
<     #####:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_S_valueEPKSt18_Rb_tree_node_base:
<       178:  795:      _S_value(_Const_Base_ptr __x)
<       178:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_valueEPKSt18_Rb_tree_node_base:
<     #####:  795:      _S_value(_Const_Base_ptr __x)
<     #####:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_S_valueEPKSt18_Rb_tree_node_base:
<       268:  795:      _S_value(_Const_Base_ptr __x)
<       268:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_S_valueEPKSt18_Rb_tree_node_base:
<       178:  795:      _S_value(_Const_Base_ptr __x)
<       178:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE8_S_valueEPKSt18_Rb_tree_node_base:
<     #####:  795:      _S_value(_Const_Base_ptr __x)
<     #####:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_S_valueEPKSt18_Rb_tree_node_base:
<     #####:  795:      _S_value(_Const_Base_ptr __x)
<     #####:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE8_S_valueEPKSt18_Rb_tree_node_base:
<     #####:  795:      _S_value(_Const_Base_ptr __x)
<     #####:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt18_Rb_tree_node_base:
<        21:  795:      _S_value(_Const_Base_ptr __x)
<        21:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt18_Rb_tree_node_base:
<     #####:  795:      _S_value(_Const_Base_ptr __x)
<     #####:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE8_S_valueEPKSt18_Rb_tree_node_base:
<     #####:  795:      _S_value(_Const_Base_ptr __x)
<     #####:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt18_Rb_tree_node_base:
<     #####:  795:      _S_value(_Const_Base_ptr __x)
<     #####:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE8_S_valueEPKSt18_Rb_tree_node_base:
<        27:  795:      _S_value(_Const_Base_ptr __x)
<        27:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt18_Rb_tree_node_base:
<        34:  795:      _S_value(_Const_Base_ptr __x)
<        34:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE8_S_valueEPKSt18_Rb_tree_node_base:
<     #####:  795:      _S_value(_Const_Base_ptr __x)
<     #####:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt18_Rb_tree_node_base:
<        21:  795:      _S_value(_Const_Base_ptr __x)
<        21:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt18_Rb_tree_node_base:
<        72:  795:      _S_value(_Const_Base_ptr __x)
<        72:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt18_Rb_tree_node_base:
<     #####:  795:      _S_value(_Const_Base_ptr __x)
<     #####:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base:
<     #####:  795:      _S_value(_Const_Base_ptr __x)
<     #####:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE8_S_valueEPKSt18_Rb_tree_node_base:
<        30:  795:      _S_value(_Const_Base_ptr __x)
<        30:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt18_Rb_tree_node_base:
<     #####:  795:      _S_value(_Const_Base_ptr __x)
<     #####:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt18_Rb_tree_node_base:
<     #####:  795:      _S_value(_Const_Base_ptr __x)
<     #####:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE8_S_valueEPKSt18_Rb_tree_node_base:
<        27:  795:      _S_value(_Const_Base_ptr __x)
<        27:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_S_valueEPKSt18_Rb_tree_node_base:
<     #####:  795:      _S_value(_Const_Base_ptr __x)
<     #####:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base:
<     #####:  795:      _S_value(_Const_Base_ptr __x)
<     #####:  796:      { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
< ------------------
---
>         -:  794:      static _Base_ptr
>         -:  795:      _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
>         -:  796:      { return _Rb_tree_node_base::_S_maximum(__x); }
5372,5487c800,802
<         -:  798:      static const _Key&
<      856*:  799:      _S_key(_Const_Base_ptr __x)
<      856*:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE6_S_keyEPKSt18_Rb_tree_node_base:
<     #####:  799:      _S_key(_Const_Base_ptr __x)
<     #####:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE6_S_keyEPKSt18_Rb_tree_node_base:
<     #####:  799:      _S_key(_Const_Base_ptr __x)
<     #####:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE6_S_keyEPKSt18_Rb_tree_node_base:
<     #####:  799:      _S_key(_Const_Base_ptr __x)
<     #####:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base:
<     #####:  799:      _S_key(_Const_Base_ptr __x)
<     #####:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE6_S_keyEPKSt18_Rb_tree_node_base:
<       178:  799:      _S_key(_Const_Base_ptr __x)
<       178:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base:
<     #####:  799:      _S_key(_Const_Base_ptr __x)
<     #####:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE6_S_keyEPKSt18_Rb_tree_node_base:
<       268:  799:      _S_key(_Const_Base_ptr __x)
<       268:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE6_S_keyEPKSt18_Rb_tree_node_base:
<       178:  799:      _S_key(_Const_Base_ptr __x)
<       178:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE6_S_keyEPKSt18_Rb_tree_node_base:
<     #####:  799:      _S_key(_Const_Base_ptr __x)
<     #####:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base:
<     #####:  799:      _S_key(_Const_Base_ptr __x)
<     #####:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE6_S_keyEPKSt18_Rb_tree_node_base:
<     #####:  799:      _S_key(_Const_Base_ptr __x)
<     #####:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base:
<        21:  799:      _S_key(_Const_Base_ptr __x)
<        21:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base:
<     #####:  799:      _S_key(_Const_Base_ptr __x)
<     #####:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE6_S_keyEPKSt18_Rb_tree_node_base:
<     #####:  799:      _S_key(_Const_Base_ptr __x)
<     #####:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base:
<     #####:  799:      _S_key(_Const_Base_ptr __x)
<     #####:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base:
<        27:  799:      _S_key(_Const_Base_ptr __x)
<        27:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base:
<        34:  799:      _S_key(_Const_Base_ptr __x)
<        34:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE6_S_keyEPKSt18_Rb_tree_node_base:
<     #####:  799:      _S_key(_Const_Base_ptr __x)
<     #####:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base:
<        21:  799:      _S_key(_Const_Base_ptr __x)
<        21:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base:
<        72:  799:      _S_key(_Const_Base_ptr __x)
<        72:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base:
<     #####:  799:      _S_key(_Const_Base_ptr __x)
<     #####:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base:
<     #####:  799:      _S_key(_Const_Base_ptr __x)
<     #####:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE6_S_keyEPKSt18_Rb_tree_node_base:
<        30:  799:      _S_key(_Const_Base_ptr __x)
<        30:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base:
<     #####:  799:      _S_key(_Const_Base_ptr __x)
<     #####:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base:
<     #####:  799:      _S_key(_Const_Base_ptr __x)
<     #####:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base:
<        27:  799:      _S_key(_Const_Base_ptr __x)
<        27:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base:
<     #####:  799:      _S_key(_Const_Base_ptr __x)
<     #####:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base:
<     #####:  799:      _S_key(_Const_Base_ptr __x)
<     #####:  800:      { return _KeyOfValue()(_S_value(__x)); }
< ------------------
---
>         -:  798:      static _Const_Base_ptr
>         -:  799:      _S_maximum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
>         -:  800:      { return _Rb_tree_node_base::_S_maximum(__x); }
5489,5504c804,806
<         -:  802:      static _Base_ptr
<     #####:  803:      _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  804:      { return _Rb_tree_node_base::_S_minimum(__x); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE10_S_minimumEPSt18_Rb_tree_node_base:
<     #####:  803:      _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  804:      { return _Rb_tree_node_base::_S_minimum(__x); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE10_S_minimumEPSt18_Rb_tree_node_base:
<     #####:  803:      _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  804:      { return _Rb_tree_node_base::_S_minimum(__x); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE10_S_minimumEPSt18_Rb_tree_node_base:
<     #####:  803:      _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  804:      { return _Rb_tree_node_base::_S_minimum(__x); }
< ------------------
---
>         -:  802:    public:
>         -:  803:      typedef _Rb_tree_iterator<value_type>       iterator;
>         -:  804:      typedef _Rb_tree_const_iterator<value_type> const_iterator;
5506,5533c808,822
<         -:  806:      static _Const_Base_ptr
<         -:  807:      _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<         -:  808:      { return _Rb_tree_node_base::_S_minimum(__x); }
<         -:  809:
<         -:  810:      static _Base_ptr
<     #####:  811:      _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  812:      { return _Rb_tree_node_base::_S_maximum(__x); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE10_S_maximumEPSt18_Rb_tree_node_base:
<     #####:  811:      _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  812:      { return _Rb_tree_node_base::_S_maximum(__x); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE10_S_maximumEPSt18_Rb_tree_node_base:
<     #####:  811:      _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  812:      { return _Rb_tree_node_base::_S_maximum(__x); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE10_S_maximumEPSt18_Rb_tree_node_base:
<     #####:  811:      _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
<     #####:  812:      { return _Rb_tree_node_base::_S_maximum(__x); }
< ------------------
<         -:  813:
<         -:  814:      static _Const_Base_ptr
<         -:  815:      _S_maximum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
<         -:  816:      { return _Rb_tree_node_base::_S_maximum(__x); }
<         -:  817:
<         -:  818:    public:
<         -:  819:      typedef _Rb_tree_iterator<value_type>       iterator;
<         -:  820:      typedef _Rb_tree_const_iterator<value_type> const_iterator;
---
>         -:  806:      typedef std::reverse_iterator<iterator>       reverse_iterator;
>         -:  807:      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
>         -:  808:
>         -:  809:#if __cplusplus > 201402L
>         -:  810:      using node_type = _Node_handle<_Key, _Val, _Node_allocator>;
>         -:  811:      using insert_return_type = _Node_insert_return<
>         -:  812:	conditional_t<is_same_v<_Key, _Val>, const_iterator, iterator>,
>         -:  813:	node_type>;
>         -:  814:#endif
>         -:  815:
>         -:  816:      pair<_Base_ptr, _Base_ptr>
>         -:  817:      _M_get_insert_unique_pos(const key_type& __k);
>         -:  818:
>         -:  819:      pair<_Base_ptr, _Base_ptr>
>         -:  820:      _M_get_insert_equal_pos(const key_type& __k);
5535,5574c824,863
<         -:  822:      typedef std::reverse_iterator<iterator>       reverse_iterator;
<         -:  823:      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
<         -:  824:
<         -:  825:#if __cplusplus > 201402L
<         -:  826:      using node_type = _Node_handle<_Key, _Val, _Node_allocator>;
<         -:  827:      using insert_return_type = _Node_insert_return<
<         -:  828:	conditional_t<is_same_v<_Key, _Val>, const_iterator, iterator>,
<         -:  829:	node_type>;
<         -:  830:#endif
<         -:  831:
<         -:  832:      pair<_Base_ptr, _Base_ptr>
<         -:  833:      _M_get_insert_unique_pos(const key_type& __k);
<         -:  834:
<         -:  835:      pair<_Base_ptr, _Base_ptr>
<         -:  836:      _M_get_insert_equal_pos(const key_type& __k);
<         -:  837:
<         -:  838:      pair<_Base_ptr, _Base_ptr>
<         -:  839:      _M_get_insert_hint_unique_pos(const_iterator __pos,
<         -:  840:				    const key_type& __k);
<         -:  841:
<         -:  842:      pair<_Base_ptr, _Base_ptr>
<         -:  843:      _M_get_insert_hint_equal_pos(const_iterator __pos,
<         -:  844:				   const key_type& __k);
<         -:  845:
<         -:  846:    private:
<         -:  847:#if __cplusplus >= 201103L
<         -:  848:      template<typename _Arg, typename _NodeGen>
<         -:  849:	iterator
<         -:  850:	_M_insert_(_Base_ptr __x, _Base_ptr __y, _Arg&& __v, _NodeGen&);
<         -:  851:
<         -:  852:      iterator
<         -:  853:      _M_insert_node(_Base_ptr __x, _Base_ptr __y, _Link_type __z);
<         -:  854:
<         -:  855:      template<typename _Arg>
<         -:  856:	iterator
<         -:  857:	_M_insert_lower(_Base_ptr __y, _Arg&& __v);
<         -:  858:
<         -:  859:      template<typename _Arg>
<         -:  860:	iterator
<         -:  861:	_M_insert_equal_lower(_Arg&& __x);
---
>         -:  822:      pair<_Base_ptr, _Base_ptr>
>         -:  823:      _M_get_insert_hint_unique_pos(const_iterator __pos,
>         -:  824:				    const key_type& __k);
>         -:  825:
>         -:  826:      pair<_Base_ptr, _Base_ptr>
>         -:  827:      _M_get_insert_hint_equal_pos(const_iterator __pos,
>         -:  828:				   const key_type& __k);
>         -:  829:
>         -:  830:    private:
>         -:  831:#if __cplusplus >= 201103L
>         -:  832:      template<typename _Arg, typename _NodeGen>
>         -:  833:        iterator
>         -:  834:	_M_insert_(_Base_ptr __x, _Base_ptr __y, _Arg&& __v, _NodeGen&);
>         -:  835:
>         -:  836:      iterator
>         -:  837:      _M_insert_node(_Base_ptr __x, _Base_ptr __y, _Link_type __z);
>         -:  838:
>         -:  839:      template<typename _Arg>
>         -:  840:        iterator
>         -:  841:        _M_insert_lower(_Base_ptr __y, _Arg&& __v);
>         -:  842:
>         -:  843:      template<typename _Arg>
>         -:  844:        iterator
>         -:  845:        _M_insert_equal_lower(_Arg&& __x);
>         -:  846:
>         -:  847:      iterator
>         -:  848:      _M_insert_lower_node(_Base_ptr __p, _Link_type __z);
>         -:  849:
>         -:  850:      iterator
>         -:  851:      _M_insert_equal_lower_node(_Link_type __z);
>         -:  852:#else
>         -:  853:      template<typename _NodeGen>
>         -:  854:	iterator
>         -:  855:	_M_insert_(_Base_ptr __x, _Base_ptr __y,
>         -:  856:		   const value_type& __v, _NodeGen&);
>         -:  857:
>         -:  858:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
>         -:  859:      // 233. Insertion hints in associative containers.
>         -:  860:      iterator
>         -:  861:      _M_insert_lower(_Base_ptr __y, const value_type& __v);
5577,5665c866,908
<         -:  864:      _M_insert_lower_node(_Base_ptr __p, _Link_type __z);
<         -:  865:
<         -:  866:      iterator
<         -:  867:      _M_insert_equal_lower_node(_Link_type __z);
<         -:  868:#else
<         -:  869:      template<typename _NodeGen>
<         -:  870:	iterator
<         -:  871:	_M_insert_(_Base_ptr __x, _Base_ptr __y,
<         -:  872:		   const value_type& __v, _NodeGen&);
<         -:  873:
<         -:  874:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
<         -:  875:      // 233. Insertion hints in associative containers.
<         -:  876:      iterator
<         -:  877:      _M_insert_lower(_Base_ptr __y, const value_type& __v);
<         -:  878:
<         -:  879:      iterator
<         -:  880:      _M_insert_equal_lower(const value_type& __x);
<         -:  881:#endif
<         -:  882:
<         -:  883:      template<typename _NodeGen>
<         -:  884:	_Link_type
<         -:  885:	_M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen&);
<         -:  886:
<         -:  887:      template<typename _NodeGen>
<         -:  888:	_Link_type
<     #####:  889:	_M_copy(const _Rb_tree& __x, _NodeGen& __gen)
<         -:  890:	{
<     #####:  891:	  _Link_type __root = _M_copy(__x._M_begin(), _M_end(), __gen);
<     #####:  892:	  _M_leftmost() = _S_minimum(__root);
<     #####:  893:	  _M_rightmost() = _S_maximum(__root);
<     #####:  894:	  _M_impl._M_node_count = __x._M_impl._M_node_count;
<     #####:  895:	  return __root;
<         -:  896:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE7_M_copyINS7_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_ERKS7_RT_:
<     #####:  889:	_M_copy(const _Rb_tree& __x, _NodeGen& __gen)
<         -:  890:	{
<     #####:  891:	  _Link_type __root = _M_copy(__x._M_begin(), _M_end(), __gen);
<     #####:  892:	  _M_leftmost() = _S_minimum(__root);
<     #####:  893:	  _M_rightmost() = _S_maximum(__root);
<     #####:  894:	  _M_impl._M_node_count = __x._M_impl._M_node_count;
<     #####:  895:	  return __root;
<         -:  896:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_M_copyINSD_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSD_RT_:
<     #####:  889:	_M_copy(const _Rb_tree& __x, _NodeGen& __gen)
<         -:  890:	{
<     #####:  891:	  _Link_type __root = _M_copy(__x._M_begin(), _M_end(), __gen);
<     #####:  892:	  _M_leftmost() = _S_minimum(__root);
<     #####:  893:	  _M_rightmost() = _S_maximum(__root);
<     #####:  894:	  _M_impl._M_node_count = __x._M_impl._M_node_count;
<     #####:  895:	  return __root;
<         -:  896:	}
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE7_M_copyINSD_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS9_ERKSD_RT_:
<     #####:  889:	_M_copy(const _Rb_tree& __x, _NodeGen& __gen)
<         -:  890:	{
<     #####:  891:	  _Link_type __root = _M_copy(__x._M_begin(), _M_end(), __gen);
<     #####:  892:	  _M_leftmost() = _S_minimum(__root);
<     #####:  893:	  _M_rightmost() = _S_maximum(__root);
<     #####:  894:	  _M_impl._M_node_count = __x._M_impl._M_node_count;
<     #####:  895:	  return __root;
<         -:  896:	}
< ------------------
<         -:  897:
<         -:  898:      _Link_type
<     #####:  899:      _M_copy(const _Rb_tree& __x)
<         -:  900:      {
<     #####:  901:	_Alloc_node __an(*this);
<     #####:  902:	return _M_copy(__x, __an);
<         -:  903:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE7_M_copyERKS7_:
<     #####:  899:      _M_copy(const _Rb_tree& __x)
<         -:  900:      {
<     #####:  901:	_Alloc_node __an(*this);
<     #####:  902:	return _M_copy(__x, __an);
<         -:  903:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_M_copyERKSD_:
<     #####:  899:      _M_copy(const _Rb_tree& __x)
<         -:  900:      {
<     #####:  901:	_Alloc_node __an(*this);
<     #####:  902:	return _M_copy(__x, __an);
<         -:  903:      }
< ------------------
<         -:  904:
<         -:  905:      void
<         -:  906:      _M_erase(_Link_type __x);
---
>         -:  864:      _M_insert_equal_lower(const value_type& __x);
>         -:  865:#endif
>         -:  866:
>         -:  867:      template<typename _NodeGen>
>         -:  868:	_Link_type
>         -:  869:	_M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen&);
>         -:  870:
>         -:  871:      template<typename _NodeGen>
>         -:  872:	_Link_type
>         -:  873:	_M_copy(const _Rb_tree& __x, _NodeGen& __gen)
>         -:  874:	{
>         -:  875:	  _Link_type __root = _M_copy(__x._M_begin(), _M_end(), __gen);
>         -:  876:	  _M_leftmost() = _S_minimum(__root);
>         -:  877:	  _M_rightmost() = _S_maximum(__root);
>         -:  878:	  _M_impl._M_node_count = __x._M_impl._M_node_count;
>         -:  879:	  return __root;
>         -:  880:	}
>         -:  881:
>         -:  882:      _Link_type
>         -:  883:      _M_copy(const _Rb_tree& __x)
>         -:  884:      {
>         -:  885:	_Alloc_node __an(*this);
>         -:  886:	return _M_copy(__x, __an);
>         -:  887:      }
>         -:  888:
>         -:  889:      void
>         -:  890:      _M_erase(_Link_type __x);
>         -:  891:
>         -:  892:      iterator
>         -:  893:      _M_lower_bound(_Link_type __x, _Base_ptr __y,
>         -:  894:		     const _Key& __k);
>         -:  895:
>         -:  896:      const_iterator
>         -:  897:      _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
>         -:  898:		     const _Key& __k) const;
>         -:  899:
>         -:  900:      iterator
>         -:  901:      _M_upper_bound(_Link_type __x, _Base_ptr __y,
>         -:  902:		     const _Key& __k);
>         -:  903:
>         -:  904:      const_iterator
>         -:  905:      _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
>         -:  906:		     const _Key& __k) const;
5667,5673c910,916
<         -:  908:      iterator
<         -:  909:      _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -:  910:		     const _Key& __k);
<         -:  911:
<         -:  912:      const_iterator
<         -:  913:      _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -:  914:		     const _Key& __k) const;
---
>         -:  908:    public:
>         -:  909:      // allocation/deallocation
>         -:  910:#if __cplusplus < 201103L
>         -:  911:      _Rb_tree() { }
>         -:  912:#else
>     #####:  913:      _Rb_tree() = default;
>         -:  914:#endif
5675,5677c918,920
<         -:  916:      iterator
<         -:  917:      _M_upper_bound(_Link_type __x, _Base_ptr __y,
<         -:  918:		     const _Key& __k);
---
>         -:  916:      _Rb_tree(const _Compare& __comp,
>         -:  917:	       const allocator_type& __a = allocator_type())
>         -:  918:      : _M_impl(__comp, _Node_allocator(__a)) { }
5679,5750c922,932
<         -:  920:      const_iterator
<         -:  921:      _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -:  922:		     const _Key& __k) const;
<         -:  923:
<         -:  924:    public:
<         -:  925:      // allocation/deallocation
<         -:  926:#if __cplusplus < 201103L
<         -:  927:      _Rb_tree() { }
<         -:  928:#else
<      684*:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EEC2Ev:
<     #####:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EEC2Ev:
<     #####:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EEC2Ev:
<     #####:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EEC2Ev:
<     #####:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EEC2Ev:
<       119:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EEC2Ev:
<       119:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EEC2Ev:
<       119:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC2Ev:
<     #####:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EEC2Ev:
<       119:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EEC2Ev:
<         5:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EEC2Ev:
<     #####:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EEC2Ev:
<        14:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EEC2Ev:
<        14:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EEC2Ev:
<        18:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EEC2Ev:
<        24:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EEC2Ev:
<       109:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EEC2Ev:
<     #####:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EEC2Ev:
<         6:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EEC2Ev:
<         6:  929:      _Rb_tree() = default;
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EEC2Ev:
<        12:  929:      _Rb_tree() = default;
< ------------------
<         -:  930:#endif
---
>         -:  920:      _Rb_tree(const _Rb_tree& __x)
>         -:  921:      : _M_impl(__x._M_impl)
>         -:  922:      {
>         -:  923:	if (__x._M_root() != 0)
>         -:  924:	  _M_root() = _M_copy(__x);
>         -:  925:      }
>         -:  926:
>         -:  927:#if __cplusplus >= 201103L
>         -:  928:      _Rb_tree(const allocator_type& __a)
>         -:  929:      : _M_impl(_Compare(), _Node_allocator(__a))
>         -:  930:      { }
5752,5783c934,948
<         -:  932:      _Rb_tree(const _Compare& __comp,
<         -:  933:	       const allocator_type& __a = allocator_type())
<         -:  934:      : _M_impl(__comp, _Node_allocator(__a)) { }
<         -:  935:
<     #####:  936:      _Rb_tree(const _Rb_tree& __x)
<     #####:  937:      : _M_impl(__x._M_impl)
<         -:  938:      {
<     #####:  939:	if (__x._M_root() != 0)
<     #####:  940:	  _M_root() = _M_copy(__x);
<     #####:  941:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EEC2ERKS7_:
<     #####:  936:      _Rb_tree(const _Rb_tree& __x)
<     #####:  937:      : _M_impl(__x._M_impl)
<         -:  938:      {
<     #####:  939:	if (__x._M_root() != 0)
<     #####:  940:	  _M_root() = _M_copy(__x);
<     #####:  941:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EEC2ERKSD_:
<     #####:  936:      _Rb_tree(const _Rb_tree& __x)
<     #####:  937:      : _M_impl(__x._M_impl)
<         -:  938:      {
<     #####:  939:	if (__x._M_root() != 0)
<     #####:  940:	  _M_root() = _M_copy(__x);
<     #####:  941:      }
< ------------------
<         -:  942:
<         -:  943:#if __cplusplus >= 201103L
<         -:  944:      _Rb_tree(const allocator_type& __a)
<         -:  945:      : _M_impl(_Compare(), _Node_allocator(__a))
<         -:  946:      { }
---
>         -:  932:      _Rb_tree(const _Rb_tree& __x, const allocator_type& __a)
>         -:  933:      : _M_impl(__x._M_impl._M_key_compare, _Node_allocator(__a))
>         -:  934:      {
>         -:  935:	if (__x._M_root() != nullptr)
>         -:  936:	  _M_root() = _M_copy(__x);
>         -:  937:      }
>         -:  938:
>         -:  939:      _Rb_tree(_Rb_tree&&) = default;
>         -:  940:
>         -:  941:      _Rb_tree(_Rb_tree&& __x, const allocator_type& __a)
>         -:  942:      : _Rb_tree(std::move(__x), _Node_allocator(__a))
>         -:  943:      { }
>         -:  944:
>         -:  945:      _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a);
>         -:  946:#endif
5785,5887c950,967
<         -:  948:      _Rb_tree(const _Rb_tree& __x, const allocator_type& __a)
<         -:  949:      : _M_impl(__x._M_impl._M_key_compare, _Node_allocator(__a))
<         -:  950:      {
<         -:  951:	if (__x._M_root() != nullptr)
<         -:  952:	  _M_root() = _M_copy(__x);
<         -:  953:      }
<         -:  954:
<         -:  955:      _Rb_tree(_Rb_tree&&) = default;
<         -:  956:
<         -:  957:      _Rb_tree(_Rb_tree&& __x, const allocator_type& __a)
<         -:  958:      : _Rb_tree(std::move(__x), _Node_allocator(__a))
<         -:  959:      { }
<         -:  960:
<         -:  961:      _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a);
<         -:  962:#endif
<         -:  963:
<      684*:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<      684*:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EED2Ev:
<        14:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<        14:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EED2Ev:
<     #####:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<     #####:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EED2Ev:
<     #####:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<     #####:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EED2Ev:
<     #####:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<     #####:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EED2Ev:
<       119:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<       119:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EED2Ev:
<       119:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<       119:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EED2Ev:
<       119:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<       119:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED2Ev:
<     #####:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<     #####:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EED2Ev:
<       119:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<       119:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EED2Ev:
<         5:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<         5:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EED2Ev:
<     #####:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<     #####:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EED2Ev:
<     #####:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<     #####:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EED2Ev:
<        14:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<        14:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EED2Ev:
<        18:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<        18:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EED2Ev:
<         6:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<         6:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EED2Ev:
<        24:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<        24:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EED2Ev:
<       109:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<       109:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EED2Ev:
<     #####:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<     #####:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EED2Ev:
<     #####:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<     #####:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EED2Ev:
<         6:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<         6:  965:      { _M_erase(_M_begin()); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EED2Ev:
<        12:  964:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
<        12:  965:      { _M_erase(_M_begin()); }
< ------------------
---
>     #####:  948:      ~_Rb_tree() _GLIBCXX_NOEXCEPT
>     #####:  949:      { _M_erase(_M_begin()); }
>         -:  950:
>         -:  951:      _Rb_tree&
>         -:  952:      operator=(const _Rb_tree& __x);
>         -:  953:
>         -:  954:      // Accessors.
>         -:  955:      _Compare
>     #####:  956:      key_comp() const
>     #####:  957:      { return _M_impl._M_key_compare; }
>         -:  958:
>         -:  959:      iterator
>     #####:  960:      begin() _GLIBCXX_NOEXCEPT
>     #####:  961:      { return iterator(this->_M_impl._M_header._M_left); }
>         -:  962:
>         -:  963:      const_iterator
>         -:  964:      begin() const _GLIBCXX_NOEXCEPT
>         -:  965:      { return const_iterator(this->_M_impl._M_header._M_left); }
5889,5948c969,975
<         -:  967:      _Rb_tree&
<         -:  968:      operator=(const _Rb_tree& __x);
<         -:  969:
<         -:  970:      // Accessors.
<         -:  971:      _Compare
<       40*:  972:      key_comp() const
<       40*:  973:      { return _M_impl._M_key_compare; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8key_compEv:
<     #####:  972:      key_comp() const
<     #####:  973:      { return _M_impl._M_key_compare; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE8key_compEv:
<        20:  972:      key_comp() const
<        20:  973:      { return _M_impl._M_key_compare; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8key_compEv:
<     #####:  972:      key_comp() const
<     #####:  973:      { return _M_impl._M_key_compare; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8key_compEv:
<        20:  972:      key_comp() const
<        20:  973:      { return _M_impl._M_key_compare; }
< ------------------
< _ZNKSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE8key_compEv:
<     #####:  972:      key_comp() const
<     #####:  973:      { return _M_impl._M_key_compare; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8key_compEv:
<     #####:  972:      key_comp() const
<     #####:  973:      { return _M_impl._M_key_compare; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE8key_compEv:
<     #####:  972:      key_comp() const
<     #####:  973:      { return _M_impl._M_key_compare; }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8key_compEv:
<     #####:  972:      key_comp() const
<     #####:  973:      { return _M_impl._M_key_compare; }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv:
<     #####:  972:      key_comp() const
<     #####:  973:      { return _M_impl._M_key_compare; }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8key_compEv:
<     #####:  972:      key_comp() const
<     #####:  973:      { return _M_impl._M_key_compare; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE8key_compEv:
<     #####:  972:      key_comp() const
<     #####:  973:      { return _M_impl._M_key_compare; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8key_compEv:
<     #####:  972:      key_comp() const
<     #####:  973:      { return _M_impl._M_key_compare; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE8key_compEv:
<     #####:  972:      key_comp() const
<     #####:  973:      { return _M_impl._M_key_compare; }
< ------------------
---
>         -:  967:      iterator
>     #####:  968:      end() _GLIBCXX_NOEXCEPT
>     #####:  969:      { return iterator(&this->_M_impl._M_header); }
>         -:  970:
>         -:  971:      const_iterator
>     #####:  972:      end() const _GLIBCXX_NOEXCEPT
>     #####:  973:      { return const_iterator(&this->_M_impl._M_header); }
5950,6045c977,979
<         -:  975:      iterator
<      859*:  976:      begin() _GLIBCXX_NOEXCEPT
<      859*:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5beginEv:
<        14:  976:      begin() _GLIBCXX_NOEXCEPT
<        14:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE5beginEv:
<     #####:  976:      begin() _GLIBCXX_NOEXCEPT
<     #####:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE5beginEv:
<     #####:  976:      begin() _GLIBCXX_NOEXCEPT
<     #####:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE5beginEv:
<     #####:  976:      begin() _GLIBCXX_NOEXCEPT
<     #####:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv:
<     #####:  976:      begin() _GLIBCXX_NOEXCEPT
<     #####:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE5beginEv:
<       208:  976:      begin() _GLIBCXX_NOEXCEPT
<       208:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE5beginEv:
<       119:  976:      begin() _GLIBCXX_NOEXCEPT
<       119:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE5beginEv:
<        89:  976:      begin() _GLIBCXX_NOEXCEPT
<        89:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE5beginEv:
<     #####:  976:      begin() _GLIBCXX_NOEXCEPT
<     #####:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE5beginEv:
<     #####:  976:      begin() _GLIBCXX_NOEXCEPT
<     #####:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE5beginEv:
<     #####:  976:      begin() _GLIBCXX_NOEXCEPT
<     #####:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE5beginEv:
<        60:  976:      begin() _GLIBCXX_NOEXCEPT
<        60:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5beginEv:
<        18:  976:      begin() _GLIBCXX_NOEXCEPT
<        18:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE5beginEv:
<     #####:  976:      begin() _GLIBCXX_NOEXCEPT
<     #####:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5beginEv:
<        66:  976:      begin() _GLIBCXX_NOEXCEPT
<        66:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5beginEv:
<        24:  976:      begin() _GLIBCXX_NOEXCEPT
<        24:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5beginEv:
<     #####:  976:      begin() _GLIBCXX_NOEXCEPT
<     #####:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE5beginEv:
<       229:  976:      begin() _GLIBCXX_NOEXCEPT
<       229:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5beginEv:
<         8:  976:      begin() _GLIBCXX_NOEXCEPT
<         8:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5beginEv:
<     #####:  976:      begin() _GLIBCXX_NOEXCEPT
<     #####:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE5beginEv:
<        24:  976:      begin() _GLIBCXX_NOEXCEPT
<        24:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE5beginEv:
<     #####:  976:      begin() _GLIBCXX_NOEXCEPT
<     #####:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5beginEv:
<     #####:  976:      begin() _GLIBCXX_NOEXCEPT
<     #####:  977:      { return iterator(this->_M_impl._M_header._M_left); }
< ------------------
---
>         -:  975:      reverse_iterator
>         -:  976:      rbegin() _GLIBCXX_NOEXCEPT
>         -:  977:      { return reverse_iterator(end()); }
6047,6066c981,983
<         -:  979:      const_iterator
<       12*:  980:      begin() const _GLIBCXX_NOEXCEPT
<       12*:  981:      { return const_iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE5beginEv:
<        12:  980:      begin() const _GLIBCXX_NOEXCEPT
<        12:  981:      { return const_iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE5beginEv:
<     #####:  980:      begin() const _GLIBCXX_NOEXCEPT
<     #####:  981:      { return const_iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5beginEv:
<     #####:  980:      begin() const _GLIBCXX_NOEXCEPT
<     #####:  981:      { return const_iterator(this->_M_impl._M_header._M_left); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE5beginEv:
<     #####:  980:      begin() const _GLIBCXX_NOEXCEPT
<     #####:  981:      { return const_iterator(this->_M_impl._M_header._M_left); }
< ------------------
---
>         -:  979:      const_reverse_iterator
>         -:  980:      rbegin() const _GLIBCXX_NOEXCEPT
>         -:  981:      { return const_reverse_iterator(end()); }
6068,6171c985,987
<         -:  983:      iterator
<     2107*:  984:      end() _GLIBCXX_NOEXCEPT
<     2107*:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE3endEv:
<     #####:  984:      end() _GLIBCXX_NOEXCEPT
<     #####:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE3endEv:
<     #####:  984:      end() _GLIBCXX_NOEXCEPT
<     #####:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE3endEv:
<     #####:  984:      end() _GLIBCXX_NOEXCEPT
<     #####:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE3endEv:
<     #####:  984:      end() _GLIBCXX_NOEXCEPT
<     #####:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE3endEv:
<       475:  984:      end() _GLIBCXX_NOEXCEPT
<       475:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv:
<     #####:  984:      end() _GLIBCXX_NOEXCEPT
<     #####:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE3endEv:
<       208:  984:      end() _GLIBCXX_NOEXCEPT
<       208:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE3endEv:
<       267:  984:      end() _GLIBCXX_NOEXCEPT
<       267:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE3endEv:
<     #####:  984:      end() _GLIBCXX_NOEXCEPT
<     #####:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE3endEv:
<     #####:  984:      end() _GLIBCXX_NOEXCEPT
<     #####:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE3endEv:
<        48:  984:      end() _GLIBCXX_NOEXCEPT
<        48:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE3endEv:
<     #####:  984:      end() _GLIBCXX_NOEXCEPT
<     #####:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE3endEv:
<     #####:  984:      end() _GLIBCXX_NOEXCEPT
<     #####:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE3endEv:
<     #####:  984:      end() _GLIBCXX_NOEXCEPT
<     #####:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE3endEv:
<       150:  984:      end() _GLIBCXX_NOEXCEPT
<       150:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE3endEv:
<        70:  984:      end() _GLIBCXX_NOEXCEPT
<        70:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE3endEv:
<       108:  984:      end() _GLIBCXX_NOEXCEPT
<       108:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE3endEv:
<       130:  984:      end() _GLIBCXX_NOEXCEPT
<       130:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE3endEv:
<     #####:  984:      end() _GLIBCXX_NOEXCEPT
<     #####:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE3endEv:
<       581:  984:      end() _GLIBCXX_NOEXCEPT
<       581:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE3endEv:
<     #####:  984:      end() _GLIBCXX_NOEXCEPT
<     #####:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE3endEv:
<     #####:  984:      end() _GLIBCXX_NOEXCEPT
<     #####:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE3endEv:
<     #####:  984:      end() _GLIBCXX_NOEXCEPT
<     #####:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE3endEv:
<        52:  984:      end() _GLIBCXX_NOEXCEPT
<        52:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE3endEv:
<        18:  984:      end() _GLIBCXX_NOEXCEPT
<        18:  985:      { return iterator(&this->_M_impl._M_header); }
< ------------------
---
>         -:  983:      reverse_iterator
>         -:  984:      rend() _GLIBCXX_NOEXCEPT
>         -:  985:      { return reverse_iterator(begin()); }
6173,6236c989,991
<         -:  987:      const_iterator
<     1379*:  988:      end() const _GLIBCXX_NOEXCEPT
<     1379*:  989:      { return const_iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE3endEv:
<     #####:  988:      end() const _GLIBCXX_NOEXCEPT
<     #####:  989:      { return const_iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE3endEv:
<     #####:  988:      end() const _GLIBCXX_NOEXCEPT
<     #####:  989:      { return const_iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE3endEv:
<        12:  988:      end() const _GLIBCXX_NOEXCEPT
<        12:  989:      { return const_iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE3endEv:
<     #####:  988:      end() const _GLIBCXX_NOEXCEPT
<     #####:  989:      { return const_iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE3endEv:
<     #####:  988:      end() const _GLIBCXX_NOEXCEPT
<     #####:  989:      { return const_iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE3endEv:
<     #####:  988:      end() const _GLIBCXX_NOEXCEPT
<     #####:  989:      { return const_iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE3endEv:
<     #####:  988:      end() const _GLIBCXX_NOEXCEPT
<     #####:  989:      { return const_iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE3endEv:
<        24:  988:      end() const _GLIBCXX_NOEXCEPT
<        24:  989:      { return const_iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNKSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE3endEv:
<     #####:  988:      end() const _GLIBCXX_NOEXCEPT
<     #####:  989:      { return const_iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE3endEv:
<     #####:  988:      end() const _GLIBCXX_NOEXCEPT
<     #####:  989:      { return const_iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE3endEv:
<     #####:  988:      end() const _GLIBCXX_NOEXCEPT
<     #####:  989:      { return const_iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE3endEv:
<       362:  988:      end() const _GLIBCXX_NOEXCEPT
<       362:  989:      { return const_iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE3endEv:
<       447:  988:      end() const _GLIBCXX_NOEXCEPT
<       447:  989:      { return const_iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE3endEv:
<       534:  988:      end() const _GLIBCXX_NOEXCEPT
<       534:  989:      { return const_iterator(&this->_M_impl._M_header); }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE3endEv:
<     #####:  988:      end() const _GLIBCXX_NOEXCEPT
<     #####:  989:      { return const_iterator(&this->_M_impl._M_header); }
< ------------------
---
>         -:  987:      const_reverse_iterator
>         -:  988:      rend() const _GLIBCXX_NOEXCEPT
>         -:  989:      { return const_reverse_iterator(begin()); }
6238,6240c993,995
<         -:  991:      reverse_iterator
<         -:  992:      rbegin() _GLIBCXX_NOEXCEPT
<         -:  993:      { return reverse_iterator(end()); }
---
>         -:  991:      bool
>         -:  992:      empty() const _GLIBCXX_NOEXCEPT
>         -:  993:      { return _M_impl._M_node_count == 0; }
6242,6244c997,999
<         -:  995:      const_reverse_iterator
<     #####:  996:      rbegin() const _GLIBCXX_NOEXCEPT
<     #####:  997:      { return const_reverse_iterator(end()); }
---
>         -:  995:      size_type
>     #####:  996:      size() const _GLIBCXX_NOEXCEPT 
>     #####:  997:      { return _M_impl._M_node_count; }
6246,6248c1001,1003
<         -:  999:      reverse_iterator
<         -: 1000:      rend() _GLIBCXX_NOEXCEPT
<         -: 1001:      { return reverse_iterator(begin()); }
---
>         -:  999:      size_type
>         -: 1000:      max_size() const _GLIBCXX_NOEXCEPT
>         -: 1001:      { return _Alloc_traits::max_size(_M_get_Node_allocator()); }
6250,6252c1005,1007
<         -: 1003:      const_reverse_iterator
<         -: 1004:      rend() const _GLIBCXX_NOEXCEPT
<         -: 1005:      { return const_reverse_iterator(begin()); }
---
>         -: 1003:      void
>         -: 1004:      swap(_Rb_tree& __t)
>         -: 1005:      _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value);
6254,6392c1009,1029
<         -: 1007:      bool
<      101*: 1008:      empty() const _GLIBCXX_NOEXCEPT
<      101*: 1009:      { return _M_impl._M_node_count == 0; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5emptyEv:
<         4: 1008:      empty() const _GLIBCXX_NOEXCEPT
<         4: 1009:      { return _M_impl._M_node_count == 0; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE5emptyEv:
<        28: 1008:      empty() const _GLIBCXX_NOEXCEPT
<        28: 1009:      { return _M_impl._M_node_count == 0; }
< ------------------
< _ZNKSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE5emptyEv:
<        51: 1008:      empty() const _GLIBCXX_NOEXCEPT
<        51: 1009:      { return _M_impl._M_node_count == 0; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5emptyEv:
<        18: 1008:      empty() const _GLIBCXX_NOEXCEPT
<        18: 1009:      { return _M_impl._M_node_count == 0; }
< ------------------
< _ZNKSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE5emptyEv:
<     #####: 1008:      empty() const _GLIBCXX_NOEXCEPT
<     #####: 1009:      { return _M_impl._M_node_count == 0; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE5emptyEv:
<     #####: 1008:      empty() const _GLIBCXX_NOEXCEPT
<     #####: 1009:      { return _M_impl._M_node_count == 0; }
< ------------------
< _ZNKSt8_Rb_treeISt4pairIN7OpenDDS4DCPS14SequenceNumberES3_ES4_St9_IdentityIS4_EPFbRKS4_S8_ESaIS4_EE5emptyEv:
<     #####: 1008:      empty() const _GLIBCXX_NOEXCEPT
<     #####: 1009:      { return _M_impl._M_node_count == 0; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE5emptyEv:
<     #####: 1008:      empty() const _GLIBCXX_NOEXCEPT
<     #####: 1009:      { return _M_impl._M_node_count == 0; }
< ------------------
<         -: 1010:
<         -: 1011:      size_type
<      670*: 1012:      size() const _GLIBCXX_NOEXCEPT
<      670*: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE4sizeEv:
<        18: 1012:      size() const _GLIBCXX_NOEXCEPT
<        18: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE4sizeEv:
<     #####: 1012:      size() const _GLIBCXX_NOEXCEPT
<     #####: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE4sizeEv:
<     #####: 1012:      size() const _GLIBCXX_NOEXCEPT
<     #####: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE4sizeEv:
<     #####: 1012:      size() const _GLIBCXX_NOEXCEPT
<     #####: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE4sizeEv:
<       208: 1012:      size() const _GLIBCXX_NOEXCEPT
<       208: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv:
<     #####: 1012:      size() const _GLIBCXX_NOEXCEPT
<     #####: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE4sizeEv:
<       178: 1012:      size() const _GLIBCXX_NOEXCEPT
<       178: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE4sizeEv:
<     #####: 1012:      size() const _GLIBCXX_NOEXCEPT
<     #####: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE4sizeEv:
<     #####: 1012:      size() const _GLIBCXX_NOEXCEPT
<     #####: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE4sizeEv:
<     #####: 1012:      size() const _GLIBCXX_NOEXCEPT
<     #####: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE4sizeEv:
<        56: 1012:      size() const _GLIBCXX_NOEXCEPT
<        56: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE4sizeEv:
<        18: 1012:      size() const _GLIBCXX_NOEXCEPT
<        18: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE4sizeEv:
<     #####: 1012:      size() const _GLIBCXX_NOEXCEPT
<     #####: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE4sizeEv:
<        18: 1012:      size() const _GLIBCXX_NOEXCEPT
<        18: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE4sizeEv:
<        52: 1012:      size() const _GLIBCXX_NOEXCEPT
<        52: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE4sizeEv:
<     #####: 1012:      size() const _GLIBCXX_NOEXCEPT
<     #####: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE4sizeEv:
<        58: 1012:      size() const _GLIBCXX_NOEXCEPT
<        58: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE4sizeEv:
<     #####: 1012:      size() const _GLIBCXX_NOEXCEPT
<     #####: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE4sizeEv:
<     #####: 1012:      size() const _GLIBCXX_NOEXCEPT
<     #####: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE4sizeEv:
<     #####: 1012:      size() const _GLIBCXX_NOEXCEPT
<     #####: 1013:      { return _M_impl._M_node_count; }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE4sizeEv:
<        64: 1012:      size() const _GLIBCXX_NOEXCEPT
<        64: 1013:      { return _M_impl._M_node_count; }
< ------------------
<         -: 1014:
<         -: 1015:      size_type
<         -: 1016:      max_size() const _GLIBCXX_NOEXCEPT
<         -: 1017:      { return _Alloc_traits::max_size(_M_get_Node_allocator()); }
<         -: 1018:
<         -: 1019:      void
<         -: 1020:      swap(_Rb_tree& __t)
<         -: 1021:      _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value);
<         -: 1022:
<         -: 1023:      // Insert/erase.
<         -: 1024:#if __cplusplus >= 201103L
<         -: 1025:      template<typename _Arg>
<         -: 1026:	pair<iterator, bool>
<         -: 1027:	_M_insert_unique(_Arg&& __x);
---
>         -: 1007:      // Insert/erase.
>         -: 1008:#if __cplusplus >= 201103L
>         -: 1009:      template<typename _Arg>
>         -: 1010:        pair<iterator, bool>
>         -: 1011:        _M_insert_unique(_Arg&& __x);
>         -: 1012:
>         -: 1013:      template<typename _Arg>
>         -: 1014:        iterator
>         -: 1015:        _M_insert_equal(_Arg&& __x);
>         -: 1016:
>         -: 1017:      template<typename _Arg, typename _NodeGen>
>         -: 1018:        iterator
>         -: 1019:	_M_insert_unique_(const_iterator __pos, _Arg&& __x, _NodeGen&);
>         -: 1020:
>         -: 1021:      template<typename _Arg>
>         -: 1022:	iterator
>         -: 1023:	_M_insert_unique_(const_iterator __pos, _Arg&& __x)
>         -: 1024:	{
>         -: 1025:	  _Alloc_node __an(*this);
>         -: 1026:	  return _M_insert_unique_(__pos, std::forward<_Arg>(__x), __an);
>         -: 1027:	}
6394c1031
<         -: 1029:      template<typename _Arg>
---
>         -: 1029:      template<typename _Arg, typename _NodeGen>
6396c1033
<         -: 1031:	_M_insert_equal(_Arg&& __x);
---
>         -: 1031:	_M_insert_equal_(const_iterator __pos, _Arg&& __x, _NodeGen&);
6398c1035
<         -: 1033:      template<typename _Arg, typename _NodeGen>
---
>         -: 1033:      template<typename _Arg>
6400,6408c1037,1045
<         -: 1035:	_M_insert_unique_(const_iterator __pos, _Arg&& __x, _NodeGen&);
<         -: 1036:
<         -: 1037:      template<typename _Arg>
<         -: 1038:	iterator
<         -: 1039:	_M_insert_unique_(const_iterator __pos, _Arg&& __x)
<         -: 1040:	{
<         -: 1041:	  _Alloc_node __an(*this);
<         -: 1042:	  return _M_insert_unique_(__pos, std::forward<_Arg>(__x), __an);
<         -: 1043:	}
---
>         -: 1035:	_M_insert_equal_(const_iterator __pos, _Arg&& __x)
>         -: 1036:	{
>         -: 1037:	  _Alloc_node __an(*this);
>         -: 1038:	  return _M_insert_equal_(__pos, std::forward<_Arg>(__x), __an);
>         -: 1039:	}
>         -: 1040:
>         -: 1041:      template<typename... _Args>
>         -: 1042:	pair<iterator, bool>
>         -: 1043:	_M_emplace_unique(_Args&&... __args);
6410c1047
<         -: 1045:      template<typename _Arg, typename _NodeGen>
---
>         -: 1045:      template<typename... _Args>
6412c1049
<         -: 1047:	_M_insert_equal_(const_iterator __pos, _Arg&& __x, _NodeGen&);
---
>         -: 1047:	_M_emplace_equal(_Args&&... __args);
6414c1051
<         -: 1049:      template<typename _Arg>
---
>         -: 1049:      template<typename... _Args>
6416,6454c1053,1091
<         -: 1051:	_M_insert_equal_(const_iterator __pos, _Arg&& __x)
<         -: 1052:	{
<         -: 1053:	  _Alloc_node __an(*this);
<         -: 1054:	  return _M_insert_equal_(__pos, std::forward<_Arg>(__x), __an);
<         -: 1055:	}
<         -: 1056:
<         -: 1057:      template<typename... _Args>
<         -: 1058:	pair<iterator, bool>
<         -: 1059:	_M_emplace_unique(_Args&&... __args);
<         -: 1060:
<         -: 1061:      template<typename... _Args>
<         -: 1062:	iterator
<         -: 1063:	_M_emplace_equal(_Args&&... __args);
<         -: 1064:
<         -: 1065:      template<typename... _Args>
<         -: 1066:	iterator
<         -: 1067:	_M_emplace_hint_unique(const_iterator __pos, _Args&&... __args);
<         -: 1068:
<         -: 1069:      template<typename... _Args>
<         -: 1070:	iterator
<         -: 1071:	_M_emplace_hint_equal(const_iterator __pos, _Args&&... __args);
<         -: 1072:#else
<         -: 1073:      pair<iterator, bool>
<         -: 1074:      _M_insert_unique(const value_type& __x);
<         -: 1075:
<         -: 1076:      iterator
<         -: 1077:      _M_insert_equal(const value_type& __x);
<         -: 1078:
<         -: 1079:      template<typename _NodeGen>
<         -: 1080:	iterator
<         -: 1081:	_M_insert_unique_(const_iterator __pos, const value_type& __x,
<         -: 1082:			  _NodeGen&);
<         -: 1083:
<         -: 1084:      iterator
<         -: 1085:      _M_insert_unique_(const_iterator __pos, const value_type& __x)
<         -: 1086:      {
<         -: 1087:	_Alloc_node __an(*this);
<         -: 1088:	return _M_insert_unique_(__pos, __x, __an);
<         -: 1089:      }
---
>         -: 1051:	_M_emplace_hint_unique(const_iterator __pos, _Args&&... __args);
>         -: 1052:
>         -: 1053:      template<typename... _Args>
>         -: 1054:	iterator
>         -: 1055:	_M_emplace_hint_equal(const_iterator __pos, _Args&&... __args);
>         -: 1056:#else
>         -: 1057:      pair<iterator, bool>
>         -: 1058:      _M_insert_unique(const value_type& __x);
>         -: 1059:
>         -: 1060:      iterator
>         -: 1061:      _M_insert_equal(const value_type& __x);
>         -: 1062:
>         -: 1063:      template<typename _NodeGen>
>         -: 1064:	iterator
>         -: 1065:	_M_insert_unique_(const_iterator __pos, const value_type& __x,
>         -: 1066:			  _NodeGen&);
>         -: 1067:
>         -: 1068:      iterator
>         -: 1069:      _M_insert_unique_(const_iterator __pos, const value_type& __x)
>         -: 1070:      {
>         -: 1071:	_Alloc_node __an(*this);
>         -: 1072:	return _M_insert_unique_(__pos, __x, __an);
>         -: 1073:      }
>         -: 1074:
>         -: 1075:      template<typename _NodeGen>
>         -: 1076:	iterator
>         -: 1077:	_M_insert_equal_(const_iterator __pos, const value_type& __x,
>         -: 1078:			 _NodeGen&);
>         -: 1079:      iterator
>         -: 1080:      _M_insert_equal_(const_iterator __pos, const value_type& __x)
>         -: 1081:      {
>         -: 1082:	_Alloc_node __an(*this);
>         -: 1083:	return _M_insert_equal_(__pos, __x, __an);
>         -: 1084:      }
>         -: 1085:#endif
>         -: 1086:
>         -: 1087:      template<typename _InputIterator>
>         -: 1088:        void
>         -: 1089:        _M_insert_unique(_InputIterator __first, _InputIterator __last);
6456,6755c1093,1201
<         -: 1091:      template<typename _NodeGen>
<         -: 1092:	iterator
<         -: 1093:	_M_insert_equal_(const_iterator __pos, const value_type& __x,
<         -: 1094:			 _NodeGen&);
<         -: 1095:      iterator
<         -: 1096:      _M_insert_equal_(const_iterator __pos, const value_type& __x)
<         -: 1097:      {
<         -: 1098:	_Alloc_node __an(*this);
<         -: 1099:	return _M_insert_equal_(__pos, __x, __an);
<         -: 1100:      }
<         -: 1101:#endif
<         -: 1102:
<         -: 1103:      template<typename _InputIterator>
<         -: 1104:	void
<         -: 1105:	_M_insert_unique(_InputIterator __first, _InputIterator __last);
<         -: 1106:
<         -: 1107:      template<typename _InputIterator>
<         -: 1108:	void
<         -: 1109:	_M_insert_equal(_InputIterator __first, _InputIterator __last);
<         -: 1110:
<         -: 1111:    private:
<         -: 1112:      void
<         -: 1113:      _M_erase_aux(const_iterator __position);
<         -: 1114:
<         -: 1115:      void
<         -: 1116:      _M_erase_aux(const_iterator __first, const_iterator __last);
<         -: 1117:
<         -: 1118:    public:
<         -: 1119:#if __cplusplus >= 201103L
<         -: 1120:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
<         -: 1121:      // DR 130. Associative erase should return an iterator.
<         -: 1122:      _GLIBCXX_ABI_TAG_CXX11
<         -: 1123:      iterator
<         -: 1124:      erase(const_iterator __position)
<         -: 1125:      {
<         -: 1126:	__glibcxx_assert(__position != end());
<         -: 1127:	const_iterator __result = __position;
<         -: 1128:	++__result;
<         -: 1129:	_M_erase_aux(__position);
<         -: 1130:	return __result._M_const_cast();
<         -: 1131:      }
<         -: 1132:
<         -: 1133:      // LWG 2059.
<         -: 1134:      _GLIBCXX_ABI_TAG_CXX11
<         -: 1135:      iterator
<       54*: 1136:      erase(iterator __position)
<         -: 1137:      {
<         -: 1138:	__glibcxx_assert(__position != end());
<       54*: 1139:	iterator __result = __position;
<       54*: 1140:	++__result;
<       54*: 1141:	_M_erase_aux(__position);
<       54*: 1142:	return __result;
<         -: 1143:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5eraseB5cxx11ESt17_Rb_tree_iteratorIS8_E:
<        18: 1136:      erase(iterator __position)
<         -: 1137:      {
<         -: 1138:	__glibcxx_assert(__position != end());
<        18: 1139:	iterator __result = __position;
<        18: 1140:	++__result;
<        18: 1141:	_M_erase_aux(__position);
<        18: 1142:	return __result;
<         -: 1143:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE5eraseB5cxx11ESt17_Rb_tree_iteratorIS9_E:
<        18: 1136:      erase(iterator __position)
<         -: 1137:      {
<         -: 1138:	__glibcxx_assert(__position != end());
<        18: 1139:	iterator __result = __position;
<        18: 1140:	++__result;
<        18: 1141:	_M_erase_aux(__position);
<        18: 1142:	return __result;
<         -: 1143:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5eraseB5cxx11ESt17_Rb_tree_iteratorIS8_E:
<         9: 1136:      erase(iterator __position)
<         -: 1137:      {
<         -: 1138:	__glibcxx_assert(__position != end());
<         9: 1139:	iterator __result = __position;
<         9: 1140:	++__result;
<         9: 1141:	_M_erase_aux(__position);
<         9: 1142:	return __result;
<         -: 1143:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5eraseB5cxx11ESt17_Rb_tree_iteratorIS8_E:
<         9: 1136:      erase(iterator __position)
<         -: 1137:      {
<         -: 1138:	__glibcxx_assert(__position != end());
<         9: 1139:	iterator __result = __position;
<         9: 1140:	++__result;
<         9: 1141:	_M_erase_aux(__position);
<         9: 1142:	return __result;
<         -: 1143:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE5eraseB5cxx11ESt17_Rb_tree_iteratorISB_E:
<     #####: 1136:      erase(iterator __position)
<         -: 1137:      {
<         -: 1138:	__glibcxx_assert(__position != end());
<     #####: 1139:	iterator __result = __position;
<     #####: 1140:	++__result;
<     #####: 1141:	_M_erase_aux(__position);
<     #####: 1142:	return __result;
<         -: 1143:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE5eraseB5cxx11ESt17_Rb_tree_iteratorISC_E:
<     #####: 1136:      erase(iterator __position)
<         -: 1137:      {
<         -: 1138:	__glibcxx_assert(__position != end());
<     #####: 1139:	iterator __result = __position;
<     #####: 1140:	++__result;
<     #####: 1141:	_M_erase_aux(__position);
<     #####: 1142:	return __result;
<         -: 1143:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE5eraseB5cxx11ESt17_Rb_tree_iteratorISI_E:
<     #####: 1136:      erase(iterator __position)
<         -: 1137:      {
<         -: 1138:	__glibcxx_assert(__position != end());
<     #####: 1139:	iterator __result = __position;
<     #####: 1140:	++__result;
<     #####: 1141:	_M_erase_aux(__position);
<     #####: 1142:	return __result;
<         -: 1143:      }
< ------------------
<         -: 1144:#else
<         -: 1145:      void
<         -: 1146:      erase(iterator __position)
<         -: 1147:      {
<         -: 1148:	__glibcxx_assert(__position != end());
<         -: 1149:	_M_erase_aux(__position);
<         -: 1150:      }
<         -: 1151:
<         -: 1152:      void
<         -: 1153:      erase(const_iterator __position)
<         -: 1154:      {
<         -: 1155:	__glibcxx_assert(__position != end());
<         -: 1156:	_M_erase_aux(__position);
<         -: 1157:      }
<         -: 1158:#endif
<         -: 1159:      size_type
<         -: 1160:      erase(const key_type& __x);
<         -: 1161:
<         -: 1162:#if __cplusplus >= 201103L
<         -: 1163:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
<         -: 1164:      // DR 130. Associative erase should return an iterator.
<         -: 1165:      _GLIBCXX_ABI_TAG_CXX11
<         -: 1166:      iterator
<         -: 1167:      erase(const_iterator __first, const_iterator __last)
<         -: 1168:      {
<         -: 1169:	_M_erase_aux(__first, __last);
<         -: 1170:	return __last._M_const_cast();
<         -: 1171:      }
<         -: 1172:#else
<         -: 1173:      void
<         -: 1174:      erase(iterator __first, iterator __last)
<         -: 1175:      { _M_erase_aux(__first, __last); }
<         -: 1176:
<         -: 1177:      void
<         -: 1178:      erase(const_iterator __first, const_iterator __last)
<         -: 1179:      { _M_erase_aux(__first, __last); }
<         -: 1180:#endif
<         -: 1181:      void
<         -: 1182:      erase(const key_type* __first, const key_type* __last);
<         -: 1183:
<         -: 1184:      void
<      622*: 1185:      clear() _GLIBCXX_NOEXCEPT
<         -: 1186:      {
<      622*: 1187:	_M_erase(_M_begin());
<      622*: 1188:	_M_impl._M_reset();
<      622*: 1189:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE5clearEv:
<        70: 1185:      clear() _GLIBCXX_NOEXCEPT
<         -: 1186:      {
<        70: 1187:	_M_erase(_M_begin());
<        70: 1188:	_M_impl._M_reset();
<        70: 1189:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE5clearEv:
<     #####: 1185:      clear() _GLIBCXX_NOEXCEPT
<         -: 1186:      {
<     #####: 1187:	_M_erase(_M_begin());
<     #####: 1188:	_M_impl._M_reset();
<     #####: 1189:      }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE5clearEv:
<       119: 1185:      clear() _GLIBCXX_NOEXCEPT
<         -: 1186:      {
<       119: 1187:	_M_erase(_M_begin());
<       119: 1188:	_M_impl._M_reset();
<       119: 1189:      }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE5clearEv:
<       119: 1185:      clear() _GLIBCXX_NOEXCEPT
<         -: 1186:      {
<       119: 1187:	_M_erase(_M_begin());
<       119: 1188:	_M_impl._M_reset();
<       119: 1189:      }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE5clearEv:
<       119: 1185:      clear() _GLIBCXX_NOEXCEPT
<         -: 1186:      {
<       119: 1187:	_M_erase(_M_begin());
<       119: 1188:	_M_impl._M_reset();
<       119: 1189:      }
< ------------------
< _ZNSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE5clearEv:
<       119: 1185:      clear() _GLIBCXX_NOEXCEPT
<         -: 1186:      {
<       119: 1187:	_M_erase(_M_begin());
<       119: 1188:	_M_impl._M_reset();
<       119: 1189:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE5clearEv:
<     #####: 1185:      clear() _GLIBCXX_NOEXCEPT
<         -: 1186:      {
<     #####: 1187:	_M_erase(_M_begin());
<     #####: 1188:	_M_impl._M_reset();
<     #####: 1189:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE5clearEv:
<     #####: 1185:      clear() _GLIBCXX_NOEXCEPT
<         -: 1186:      {
<     #####: 1187:	_M_erase(_M_begin());
<     #####: 1188:	_M_impl._M_reset();
<     #####: 1189:      }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE5clearEv:
<     #####: 1185:      clear() _GLIBCXX_NOEXCEPT
<         -: 1186:      {
<     #####: 1187:	_M_erase(_M_begin());
<     #####: 1188:	_M_impl._M_reset();
<     #####: 1189:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE5clearEv:
<     #####: 1185:      clear() _GLIBCXX_NOEXCEPT
<         -: 1186:      {
<     #####: 1187:	_M_erase(_M_begin());
<     #####: 1188:	_M_impl._M_reset();
<     #####: 1189:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5clearEv:
<     #####: 1185:      clear() _GLIBCXX_NOEXCEPT
<         -: 1186:      {
<     #####: 1187:	_M_erase(_M_begin());
<     #####: 1188:	_M_impl._M_reset();
<     #####: 1189:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5clearEv:
<         6: 1185:      clear() _GLIBCXX_NOEXCEPT
<         -: 1186:      {
<         6: 1187:	_M_erase(_M_begin());
<         6: 1188:	_M_impl._M_reset();
<         6: 1189:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5clearEv:
<     #####: 1185:      clear() _GLIBCXX_NOEXCEPT
<         -: 1186:      {
<     #####: 1187:	_M_erase(_M_begin());
<     #####: 1188:	_M_impl._M_reset();
<     #####: 1189:      }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE5clearEv:
<        64: 1185:      clear() _GLIBCXX_NOEXCEPT
<         -: 1186:      {
<        64: 1187:	_M_erase(_M_begin());
<        64: 1188:	_M_impl._M_reset();
<        64: 1189:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5clearEv:
<     #####: 1185:      clear() _GLIBCXX_NOEXCEPT
<         -: 1186:      {
<     #####: 1187:	_M_erase(_M_begin());
<     #####: 1188:	_M_impl._M_reset();
<     #####: 1189:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE5clearEv:
<         6: 1185:      clear() _GLIBCXX_NOEXCEPT
<         -: 1186:      {
<         6: 1187:	_M_erase(_M_begin());
<         6: 1188:	_M_impl._M_reset();
<         6: 1189:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5clearEv:
<     #####: 1185:      clear() _GLIBCXX_NOEXCEPT
<         -: 1186:      {
<     #####: 1187:	_M_erase(_M_begin());
<     #####: 1188:	_M_impl._M_reset();
<     #####: 1189:      }
< ------------------
<         -: 1190:
<         -: 1191:      // Set operations.
<         -: 1192:      iterator
<         -: 1193:      find(const key_type& __k);
<         -: 1194:
<         -: 1195:      const_iterator
<         -: 1196:      find(const key_type& __k) const;
<         -: 1197:
<         -: 1198:      size_type
<         -: 1199:      count(const key_type& __k) const;
---
>         -: 1091:      template<typename _InputIterator>
>         -: 1092:        void
>         -: 1093:        _M_insert_equal(_InputIterator __first, _InputIterator __last);
>         -: 1094:
>         -: 1095:    private:
>         -: 1096:      void
>         -: 1097:      _M_erase_aux(const_iterator __position);
>         -: 1098:
>         -: 1099:      void
>         -: 1100:      _M_erase_aux(const_iterator __first, const_iterator __last);
>         -: 1101:
>         -: 1102:    public:
>         -: 1103:#if __cplusplus >= 201103L
>         -: 1104:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
>         -: 1105:      // DR 130. Associative erase should return an iterator.
>         -: 1106:      _GLIBCXX_ABI_TAG_CXX11
>         -: 1107:      iterator
>         -: 1108:      erase(const_iterator __position)
>         -: 1109:      {
>         -: 1110:	__glibcxx_assert(__position != end());
>         -: 1111:	const_iterator __result = __position;
>         -: 1112:	++__result;
>         -: 1113:	_M_erase_aux(__position);
>         -: 1114:	return __result._M_const_cast();
>         -: 1115:      }
>         -: 1116:
>         -: 1117:      // LWG 2059.
>         -: 1118:      _GLIBCXX_ABI_TAG_CXX11
>         -: 1119:      iterator
>         -: 1120:      erase(iterator __position)
>         -: 1121:      {
>         -: 1122:	__glibcxx_assert(__position != end());
>         -: 1123:	iterator __result = __position;
>         -: 1124:	++__result;
>         -: 1125:	_M_erase_aux(__position);
>         -: 1126:	return __result;
>         -: 1127:      }
>         -: 1128:#else
>         -: 1129:      void
>         -: 1130:      erase(iterator __position)
>         -: 1131:      {
>         -: 1132:	__glibcxx_assert(__position != end());
>         -: 1133:	_M_erase_aux(__position);
>         -: 1134:      }
>         -: 1135:
>         -: 1136:      void
>         -: 1137:      erase(const_iterator __position)
>         -: 1138:      {
>         -: 1139:	__glibcxx_assert(__position != end());
>         -: 1140:	_M_erase_aux(__position);
>         -: 1141:      }
>         -: 1142:#endif
>         -: 1143:      size_type
>         -: 1144:      erase(const key_type& __x);
>         -: 1145:
>         -: 1146:#if __cplusplus >= 201103L
>         -: 1147:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
>         -: 1148:      // DR 130. Associative erase should return an iterator.
>         -: 1149:      _GLIBCXX_ABI_TAG_CXX11
>         -: 1150:      iterator
>         -: 1151:      erase(const_iterator __first, const_iterator __last)
>         -: 1152:      {
>         -: 1153:	_M_erase_aux(__first, __last);
>         -: 1154:	return __last._M_const_cast();
>         -: 1155:      }
>         -: 1156:#else
>         -: 1157:      void
>         -: 1158:      erase(iterator __first, iterator __last)
>         -: 1159:      { _M_erase_aux(__first, __last); }
>         -: 1160:
>         -: 1161:      void
>         -: 1162:      erase(const_iterator __first, const_iterator __last)
>         -: 1163:      { _M_erase_aux(__first, __last); }
>         -: 1164:#endif
>         -: 1165:      void
>         -: 1166:      erase(const key_type* __first, const key_type* __last);
>         -: 1167:
>         -: 1168:      void
>     #####: 1169:      clear() _GLIBCXX_NOEXCEPT
>         -: 1170:      {
>     #####: 1171:        _M_erase(_M_begin());
>     #####: 1172:	_M_impl._M_reset();
>     #####: 1173:      }
>         -: 1174:
>         -: 1175:      // Set operations.
>         -: 1176:      iterator
>         -: 1177:      find(const key_type& __k);
>         -: 1178:
>         -: 1179:      const_iterator
>         -: 1180:      find(const key_type& __k) const;
>         -: 1181:
>         -: 1182:      size_type
>         -: 1183:      count(const key_type& __k) const;
>         -: 1184:
>         -: 1185:      iterator
>     #####: 1186:      lower_bound(const key_type& __k)
>     #####: 1187:      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
>         -: 1188:
>         -: 1189:      const_iterator
>         -: 1190:      lower_bound(const key_type& __k) const
>         -: 1191:      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
>         -: 1192:
>         -: 1193:      iterator
>         -: 1194:      upper_bound(const key_type& __k)
>         -: 1195:      { return _M_upper_bound(_M_begin(), _M_end(), __k); }
>         -: 1196:
>         -: 1197:      const_iterator
>         -: 1198:      upper_bound(const key_type& __k) const
>         -: 1199:      { return _M_upper_bound(_M_begin(), _M_end(), __k); }
6757,7706c1203,1863
<         -: 1201:      iterator
<      494*: 1202:      lower_bound(const key_type& __k)
<      494*: 1203:      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11lower_boundERS4_:
<        18: 1202:      lower_bound(const key_type& __k)
<        18: 1203:      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE11lower_boundERS4_:
<        36: 1202:      lower_bound(const key_type& __k)
<        36: 1203:      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11lower_boundERS4_:
<     #####: 1202:      lower_bound(const key_type& __k)
<     #####: 1203:      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11lower_boundERS4_:
<        36: 1202:      lower_bound(const key_type& __k)
<        36: 1203:      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE11lower_boundERS1_:
<     #####: 1202:      lower_bound(const key_type& __k)
<     #####: 1203:      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11lower_boundERS4_:
<        18: 1202:      lower_bound(const key_type& __k)
<        18: 1203:      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE11lower_boundERS5_:
<     #####: 1202:      lower_bound(const key_type& __k)
<     #####: 1203:      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE11lower_boundERS7_:
<       178: 1202:      lower_bound(const key_type& __k)
<       178: 1203:      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_:
<     #####: 1202:      lower_bound(const key_type& __k)
<     #####: 1203:      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE11lower_boundERS7_:
<       208: 1202:      lower_bound(const key_type& __k)
<       208: 1203:      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE11lower_boundERS4_:
<     #####: 1202:      lower_bound(const key_type& __k)
<     #####: 1203:      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE11lower_boundERS4_:
<     #####: 1202:      lower_bound(const key_type& __k)
<     #####: 1203:      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE11lower_boundERS4_:
<     #####: 1202:      lower_bound(const key_type& __k)
<     #####: 1203:      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
< ------------------
<         -: 1204:
<         -: 1205:      const_iterator
<     #####: 1206:      lower_bound(const key_type& __k) const
<     #####: 1207:      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
<         -: 1208:
<         -: 1209:      iterator
<         -: 1210:      upper_bound(const key_type& __k)
<         -: 1211:      { return _M_upper_bound(_M_begin(), _M_end(), __k); }
<         -: 1212:
<         -: 1213:      const_iterator
<         -: 1214:      upper_bound(const key_type& __k) const
<         -: 1215:      { return _M_upper_bound(_M_begin(), _M_end(), __k); }
<         -: 1216:
<         -: 1217:      pair<iterator, iterator>
<         -: 1218:      equal_range(const key_type& __k);
<         -: 1219:
<         -: 1220:      pair<const_iterator, const_iterator>
<         -: 1221:      equal_range(const key_type& __k) const;
<         -: 1222:
<         -: 1223:#if __cplusplus > 201103L
<         -: 1224:      template<typename _Kt,
<         -: 1225:	       typename _Req =
<         -: 1226:		 typename __has_is_transparent<_Compare, _Kt>::type>
<         -: 1227:	iterator
<         -: 1228:	_M_find_tr(const _Kt& __k)
<         -: 1229:	{
<         -: 1230:	  const _Rb_tree* __const_this = this;
<         -: 1231:	  return __const_this->_M_find_tr(__k)._M_const_cast();
<         -: 1232:	}
<         -: 1233:
<         -: 1234:      template<typename _Kt,
<         -: 1235:	       typename _Req =
<         -: 1236:		 typename __has_is_transparent<_Compare, _Kt>::type>
<         -: 1237:	const_iterator
<         -: 1238:	_M_find_tr(const _Kt& __k) const
<         -: 1239:	{
<         -: 1240:	  auto __j = _M_lower_bound_tr(__k);
<         -: 1241:	  if (__j != end() && _M_impl._M_key_compare(__k, _S_key(__j._M_node)))
<         -: 1242:	    __j = end();
<         -: 1243:	  return __j;
<         -: 1244:	}
<         -: 1245:
<         -: 1246:      template<typename _Kt,
<         -: 1247:	       typename _Req =
<         -: 1248:		 typename __has_is_transparent<_Compare, _Kt>::type>
<         -: 1249:	size_type
<         -: 1250:	_M_count_tr(const _Kt& __k) const
<         -: 1251:	{
<         -: 1252:	  auto __p = _M_equal_range_tr(__k);
<         -: 1253:	  return std::distance(__p.first, __p.second);
<         -: 1254:	}
<         -: 1255:
<         -: 1256:      template<typename _Kt,
<         -: 1257:	       typename _Req =
<         -: 1258:		 typename __has_is_transparent<_Compare, _Kt>::type>
<         -: 1259:	iterator
<         -: 1260:	_M_lower_bound_tr(const _Kt& __k)
<         -: 1261:	{
<         -: 1262:	  const _Rb_tree* __const_this = this;
<         -: 1263:	  return __const_this->_M_lower_bound_tr(__k)._M_const_cast();
<         -: 1264:	}
<         -: 1265:
<         -: 1266:      template<typename _Kt,
<         -: 1267:	       typename _Req =
<         -: 1268:		 typename __has_is_transparent<_Compare, _Kt>::type>
<         -: 1269:	const_iterator
<         -: 1270:	_M_lower_bound_tr(const _Kt& __k) const
<         -: 1271:	{
<         -: 1272:	  auto __x = _M_begin();
<         -: 1273:	  auto __y = _M_end();
<         -: 1274:	  while (__x != 0)
<         -: 1275:	    if (!_M_impl._M_key_compare(_S_key(__x), __k))
<         -: 1276:	      {
<         -: 1277:		__y = __x;
<         -: 1278:		__x = _S_left(__x);
<         -: 1279:	      }
<         -: 1280:	    else
<         -: 1281:	      __x = _S_right(__x);
<         -: 1282:	  return const_iterator(__y);
<         -: 1283:	}
<         -: 1284:
<         -: 1285:      template<typename _Kt,
<         -: 1286:	       typename _Req =
<         -: 1287:		 typename __has_is_transparent<_Compare, _Kt>::type>
<         -: 1288:	iterator
<         -: 1289:	_M_upper_bound_tr(const _Kt& __k)
<         -: 1290:	{
<         -: 1291:	  const _Rb_tree* __const_this = this;
<         -: 1292:	  return __const_this->_M_upper_bound_tr(__k)._M_const_cast();
<         -: 1293:	}
<         -: 1294:
<         -: 1295:      template<typename _Kt,
<         -: 1296:	       typename _Req =
<         -: 1297:		 typename __has_is_transparent<_Compare, _Kt>::type>
<         -: 1298:	const_iterator
<         -: 1299:	_M_upper_bound_tr(const _Kt& __k) const
<         -: 1300:	{
<         -: 1301:	  auto __x = _M_begin();
<         -: 1302:	  auto __y = _M_end();
<         -: 1303:	  while (__x != 0)
<         -: 1304:	    if (_M_impl._M_key_compare(__k, _S_key(__x)))
<         -: 1305:	      {
<         -: 1306:		__y = __x;
<         -: 1307:		__x = _S_left(__x);
<         -: 1308:	      }
<         -: 1309:	    else
<         -: 1310:	      __x = _S_right(__x);
<         -: 1311:	  return const_iterator(__y);
<         -: 1312:	}
<         -: 1313:
<         -: 1314:      template<typename _Kt,
<         -: 1315:	       typename _Req =
<         -: 1316:		 typename __has_is_transparent<_Compare, _Kt>::type>
<         -: 1317:	pair<iterator, iterator>
<         -: 1318:	_M_equal_range_tr(const _Kt& __k)
<         -: 1319:	{
<         -: 1320:	  const _Rb_tree* __const_this = this;
<         -: 1321:	  auto __ret = __const_this->_M_equal_range_tr(__k);
<         -: 1322:	  return { __ret.first._M_const_cast(), __ret.second._M_const_cast() };
<         -: 1323:	}
<         -: 1324:
<         -: 1325:      template<typename _Kt,
<         -: 1326:	       typename _Req =
<         -: 1327:		 typename __has_is_transparent<_Compare, _Kt>::type>
<         -: 1328:	pair<const_iterator, const_iterator>
<         -: 1329:	_M_equal_range_tr(const _Kt& __k) const
<         -: 1330:	{
<         -: 1331:	  auto __low = _M_lower_bound_tr(__k);
<         -: 1332:	  auto __high = __low;
<         -: 1333:	  auto& __cmp = _M_impl._M_key_compare;
<         -: 1334:	  while (__high != end() && !__cmp(__k, _S_key(__high._M_node)))
<         -: 1335:	    ++__high;
<         -: 1336:	  return { __low, __high };
<         -: 1337:	}
<         -: 1338:#endif
<         -: 1339:
<         -: 1340:      // Debugging.
<         -: 1341:      bool
<         -: 1342:      __rb_verify() const;
<         -: 1343:
<         -: 1344:#if __cplusplus >= 201103L
<         -: 1345:      _Rb_tree&
<         -: 1346:      operator=(_Rb_tree&&)
<         -: 1347:      noexcept(_Alloc_traits::_S_nothrow_move()
<         -: 1348:	       && is_nothrow_move_assignable<_Compare>::value);
<         -: 1349:
<         -: 1350:      template<typename _Iterator>
<         -: 1351:	void
<         -: 1352:	_M_assign_unique(_Iterator, _Iterator);
<         -: 1353:
<         -: 1354:      template<typename _Iterator>
<         -: 1355:	void
<         -: 1356:	_M_assign_equal(_Iterator, _Iterator);
<         -: 1357:
<         -: 1358:    private:
<         -: 1359:      // Move elements from container with equal allocator.
<         -: 1360:      void
<         -: 1361:      _M_move_data(_Rb_tree& __x, std::true_type)
<         -: 1362:      { _M_impl._M_move_data(__x._M_impl); }
<         -: 1363:
<         -: 1364:      // Move elements from container with possibly non-equal allocator,
<         -: 1365:      // which might result in a copy not a move.
<         -: 1366:      void
<         -: 1367:      _M_move_data(_Rb_tree&, std::false_type);
<         -: 1368:
<         -: 1369:      // Move assignment from container with equal allocator.
<         -: 1370:      void
<         -: 1371:      _M_move_assign(_Rb_tree&, std::true_type);
<         -: 1372:
<         -: 1373:      // Move assignment from container with possibly non-equal allocator,
<         -: 1374:      // which might result in a copy not a move.
<         -: 1375:      void
<         -: 1376:      _M_move_assign(_Rb_tree&, std::false_type);
<         -: 1377:#endif
<         -: 1378:
<         -: 1379:#if __cplusplus > 201402L
<         -: 1380:    public:
<         -: 1381:      /// Re-insert an extracted node.
<         -: 1382:      insert_return_type
<         -: 1383:      _M_reinsert_node_unique(node_type&& __nh)
<         -: 1384:      {
<         -: 1385:	insert_return_type __ret;
<         -: 1386:	if (__nh.empty())
<         -: 1387:	  __ret.position = end();
<         -: 1388:	else
<         -: 1389:	  {
<         -: 1390:	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
<         -: 1391:
<         -: 1392:	    auto __res = _M_get_insert_unique_pos(__nh._M_key());
<         -: 1393:	    if (__res.second)
<         -: 1394:	      {
<         -: 1395:		__ret.position
<         -: 1396:		  = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
<         -: 1397:		__nh._M_ptr = nullptr;
<         -: 1398:		__ret.inserted = true;
<         -: 1399:	      }
<         -: 1400:	    else
<         -: 1401:	      {
<         -: 1402:		__ret.node = std::move(__nh);
<         -: 1403:		__ret.position = iterator(__res.first);
<         -: 1404:		__ret.inserted = false;
<         -: 1405:	      }
<         -: 1406:	  }
<         -: 1407:	return __ret;
<         -: 1408:      }
<         -: 1409:
<         -: 1410:      /// Re-insert an extracted node.
<         -: 1411:      iterator
<         -: 1412:      _M_reinsert_node_equal(node_type&& __nh)
<         -: 1413:      {
<         -: 1414:	iterator __ret;
<         -: 1415:	if (__nh.empty())
<         -: 1416:	  __ret = end();
<         -: 1417:	else
<         -: 1418:	  {
<         -: 1419:	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
<         -: 1420:	    auto __res = _M_get_insert_equal_pos(__nh._M_key());
<         -: 1421:	    if (__res.second)
<         -: 1422:	      __ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
<         -: 1423:	    else
<         -: 1424:	      __ret = _M_insert_equal_lower_node(__nh._M_ptr);
<         -: 1425:	    __nh._M_ptr = nullptr;
<         -: 1426:	  }
<         -: 1427:	return __ret;
<         -: 1428:      }
<         -: 1429:
<         -: 1430:      /// Re-insert an extracted node.
<         -: 1431:      iterator
<         -: 1432:      _M_reinsert_node_hint_unique(const_iterator __hint, node_type&& __nh)
<         -: 1433:      {
<         -: 1434:	iterator __ret;
<         -: 1435:	if (__nh.empty())
<         -: 1436:	  __ret = end();
<         -: 1437:	else
<         -: 1438:	  {
<         -: 1439:	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
<         -: 1440:	    auto __res = _M_get_insert_hint_unique_pos(__hint, __nh._M_key());
<         -: 1441:	    if (__res.second)
<         -: 1442:	      {
<         -: 1443:		__ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
<         -: 1444:		__nh._M_ptr = nullptr;
<         -: 1445:	      }
<         -: 1446:	    else
<         -: 1447:	      __ret = iterator(__res.first);
<         -: 1448:	  }
<         -: 1449:	return __ret;
<         -: 1450:      }
<         -: 1451:
<         -: 1452:      /// Re-insert an extracted node.
<         -: 1453:      iterator
<         -: 1454:      _M_reinsert_node_hint_equal(const_iterator __hint, node_type&& __nh)
<         -: 1455:      {
<         -: 1456:	iterator __ret;
<         -: 1457:	if (__nh.empty())
<         -: 1458:	  __ret = end();
<         -: 1459:	else
<         -: 1460:	  {
<         -: 1461:	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
<         -: 1462:	    auto __res = _M_get_insert_hint_equal_pos(__hint, __nh._M_key());
<         -: 1463:	    if (__res.second)
<         -: 1464:	      __ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
<         -: 1465:	    else
<         -: 1466:	      __ret = _M_insert_equal_lower_node(__nh._M_ptr);
<         -: 1467:	    __nh._M_ptr = nullptr;
<         -: 1468:	  }
<         -: 1469:	return __ret;
<         -: 1470:      }
<         -: 1471:
<         -: 1472:      /// Extract a node.
<         -: 1473:      node_type
<         -: 1474:      extract(const_iterator __pos)
<         -: 1475:      {
<         -: 1476:	auto __ptr = _Rb_tree_rebalance_for_erase(
<         -: 1477:	    __pos._M_const_cast()._M_node, _M_impl._M_header);
<         -: 1478:	--_M_impl._M_node_count;
<         -: 1479:	return { static_cast<_Link_type>(__ptr), _M_get_Node_allocator() };
<         -: 1480:      }
<         -: 1481:
<         -: 1482:      /// Extract a node.
<         -: 1483:      node_type
<         -: 1484:      extract(const key_type& __k)
<         -: 1485:      {
<         -: 1486:	node_type __nh;
<         -: 1487:	auto __pos = find(__k);
<         -: 1488:	if (__pos != end())
<         -: 1489:	  __nh = extract(const_iterator(__pos));
<         -: 1490:	return __nh;
<         -: 1491:      }
<         -: 1492:
<         -: 1493:      template<typename _Compare2>
<         -: 1494:	using _Compatible_tree
<         -: 1495:	  = _Rb_tree<_Key, _Val, _KeyOfValue, _Compare2, _Alloc>;
<         -: 1496:
<         -: 1497:      template<typename, typename>
<         -: 1498:	friend class _Rb_tree_merge_helper;
<         -: 1499:
<         -: 1500:      /// Merge from a compatible container into one with unique keys.
<         -: 1501:      template<typename _Compare2>
<         -: 1502:	void
<         -: 1503:	_M_merge_unique(_Compatible_tree<_Compare2>& __src) noexcept
<         -: 1504:	{
<         -: 1505:	  using _Merge_helper = _Rb_tree_merge_helper<_Rb_tree, _Compare2>;
<         -: 1506:	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
<         -: 1507:	    {
<         -: 1508:	      auto __pos = __i++;
<         -: 1509:	      auto __res = _M_get_insert_unique_pos(_KeyOfValue()(*__pos));
<         -: 1510:	      if (__res.second)
<         -: 1511:		{
<         -: 1512:		  auto& __src_impl = _Merge_helper::_S_get_impl(__src);
<         -: 1513:		  auto __ptr = _Rb_tree_rebalance_for_erase(
<         -: 1514:		      __pos._M_node, __src_impl._M_header);
<         -: 1515:		  --__src_impl._M_node_count;
<         -: 1516:		  _M_insert_node(__res.first, __res.second,
<         -: 1517:				 static_cast<_Link_type>(__ptr));
<         -: 1518:		}
<         -: 1519:	    }
<         -: 1520:	}
<         -: 1521:
<         -: 1522:      /// Merge from a compatible container into one with equivalent keys.
<         -: 1523:      template<typename _Compare2>
<         -: 1524:	void
<         -: 1525:	_M_merge_equal(_Compatible_tree<_Compare2>& __src) noexcept
<         -: 1526:	{
<         -: 1527:	  using _Merge_helper = _Rb_tree_merge_helper<_Rb_tree, _Compare2>;
<         -: 1528:	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
<         -: 1529:	    {
<         -: 1530:	      auto __pos = __i++;
<         -: 1531:	      auto __res = _M_get_insert_equal_pos(_KeyOfValue()(*__pos));
<         -: 1532:	      if (__res.second)
<         -: 1533:		{
<         -: 1534:		  auto& __src_impl = _Merge_helper::_S_get_impl(__src);
<         -: 1535:		  auto __ptr = _Rb_tree_rebalance_for_erase(
<         -: 1536:		      __pos._M_node, __src_impl._M_header);
<         -: 1537:		  --__src_impl._M_node_count;
<         -: 1538:		  _M_insert_node(__res.first, __res.second,
<         -: 1539:				 static_cast<_Link_type>(__ptr));
<         -: 1540:		}
<         -: 1541:	    }
<         -: 1542:	}
<         -: 1543:#endif // C++17
<         -: 1544:    };
<         -: 1545:
<         -: 1546:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1547:	   typename _Compare, typename _Alloc>
<         -: 1548:    inline bool
<         -: 1549:    operator==(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
<         -: 1550:	       const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
<         -: 1551:    {
<         -: 1552:      return __x.size() == __y.size()
<         -: 1553:	     && std::equal(__x.begin(), __x.end(), __y.begin());
<         -: 1554:    }
<         -: 1555:
<         -: 1556:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1557:	   typename _Compare, typename _Alloc>
<         -: 1558:    inline bool
<         -: 1559:    operator<(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
<         -: 1560:	      const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
<         -: 1561:    {
<         -: 1562:      return std::lexicographical_compare(__x.begin(), __x.end(), 
<         -: 1563:					  __y.begin(), __y.end());
<         -: 1564:    }
<         -: 1565:
<         -: 1566:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1567:	   typename _Compare, typename _Alloc>
<         -: 1568:    inline bool
<         -: 1569:    operator!=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
<         -: 1570:	       const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
<         -: 1571:    { return !(__x == __y); }
<         -: 1572:
<         -: 1573:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1574:	   typename _Compare, typename _Alloc>
<         -: 1575:    inline bool
<         -: 1576:    operator>(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
<         -: 1577:	      const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
<         -: 1578:    { return __y < __x; }
<         -: 1579:
<         -: 1580:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1581:	   typename _Compare, typename _Alloc>
<         -: 1582:    inline bool
<         -: 1583:    operator<=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
<         -: 1584:	       const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
<         -: 1585:    { return !(__y < __x); }
<         -: 1586:
<         -: 1587:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1588:	   typename _Compare, typename _Alloc>
<         -: 1589:    inline bool
<         -: 1590:    operator>=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
<         -: 1591:	       const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
<         -: 1592:    { return !(__x < __y); }
<         -: 1593:
<         -: 1594:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1595:	   typename _Compare, typename _Alloc>
<         -: 1596:    inline void
<         -: 1597:    swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
<         -: 1598:	 _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
<         -: 1599:    { __x.swap(__y); }
<         -: 1600:
<         -: 1601:#if __cplusplus >= 201103L
<         -: 1602:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1603:	   typename _Compare, typename _Alloc>
<         -: 1604:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1605:    _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a)
<         -: 1606:    : _M_impl(__x._M_impl._M_key_compare, std::move(__a))
<         -: 1607:    {
<         -: 1608:      using __eq = typename _Alloc_traits::is_always_equal;
<         -: 1609:      if (__x._M_root() != nullptr)
<         -: 1610:	_M_move_data(__x, __eq());
<         -: 1611:    }
<         -: 1612:
<         -: 1613:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1614:	   typename _Compare, typename _Alloc>
<         -: 1615:    void
<         -: 1616:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1617:    _M_move_data(_Rb_tree& __x, std::false_type)
<         -: 1618:    {
<         -: 1619:      if (_M_get_Node_allocator() == __x._M_get_Node_allocator())
<         -: 1620:	_M_move_data(__x, std::true_type());
<         -: 1621:      else
<         -: 1622:	{
<         -: 1623:	  _Alloc_node __an(*this);
<         -: 1624:	  auto __lbd =
<         -: 1625:	    [&__an](const value_type& __cval)
<         -: 1626:	    {
<         -: 1627:	      auto& __val = const_cast<value_type&>(__cval);
<         -: 1628:	      return __an(std::move_if_noexcept(__val));
<         -: 1629:	    };
<         -: 1630:	  _M_root() = _M_copy(__x, __lbd);
<         -: 1631:	}
<         -: 1632:    }
<         -: 1633:
<         -: 1634:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1635:	   typename _Compare, typename _Alloc>
<         -: 1636:    inline void
<         -: 1637:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1638:    _M_move_assign(_Rb_tree& __x, true_type)
<         -: 1639:    {
<         -: 1640:      clear();
<         -: 1641:      if (__x._M_root() != nullptr)
<         -: 1642:	_M_move_data(__x, std::true_type());
<         -: 1643:      std::__alloc_on_move(_M_get_Node_allocator(),
<         -: 1644:			   __x._M_get_Node_allocator());
<         -: 1645:    }
<         -: 1646:
<         -: 1647:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1648:	   typename _Compare, typename _Alloc>
<         -: 1649:    void
<         -: 1650:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1651:    _M_move_assign(_Rb_tree& __x, false_type)
<         -: 1652:    {
<         -: 1653:      if (_M_get_Node_allocator() == __x._M_get_Node_allocator())
<         -: 1654:	return _M_move_assign(__x, true_type{});
<         -: 1655:
<         -: 1656:      // Try to move each node reusing existing nodes and copying __x nodes
<         -: 1657:      // structure.
<         -: 1658:      _Reuse_or_alloc_node __roan(*this);
<         -: 1659:      _M_impl._M_reset();
<         -: 1660:      if (__x._M_root() != nullptr)
<         -: 1661:	{
<         -: 1662:	  auto __lbd =
<         -: 1663:	    [&__roan](const value_type& __cval)
<         -: 1664:	    {
<         -: 1665:	      auto& __val = const_cast<value_type&>(__cval);
<         -: 1666:	      return __roan(std::move_if_noexcept(__val));
<         -: 1667:	    };
<         -: 1668:	  _M_root() = _M_copy(__x, __lbd);
<         -: 1669:	  __x.clear();
<         -: 1670:	}
<         -: 1671:    }
<         -: 1672:
<         -: 1673:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1674:	   typename _Compare, typename _Alloc>
<         -: 1675:    inline _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
<         -: 1676:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1677:    operator=(_Rb_tree&& __x)
<         -: 1678:    noexcept(_Alloc_traits::_S_nothrow_move()
<         -: 1679:	     && is_nothrow_move_assignable<_Compare>::value)
<         -: 1680:    {
<         -: 1681:      _M_impl._M_key_compare = std::move(__x._M_impl._M_key_compare);
<         -: 1682:      _M_move_assign(__x, __bool_constant<_Alloc_traits::_S_nothrow_move()>());
<         -: 1683:      return *this;
<         -: 1684:    }
<         -: 1685:
<         -: 1686:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1687:	   typename _Compare, typename _Alloc>
<         -: 1688:    template<typename _Iterator>
<         -: 1689:      void
<         -: 1690:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1691:      _M_assign_unique(_Iterator __first, _Iterator __last)
<         -: 1692:      {
<         -: 1693:	_Reuse_or_alloc_node __roan(*this);
<         -: 1694:	_M_impl._M_reset();
<         -: 1695:	for (; __first != __last; ++__first)
<         -: 1696:	  _M_insert_unique_(end(), *__first, __roan);
<         -: 1697:      }
<         -: 1698:
<         -: 1699:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1700:	   typename _Compare, typename _Alloc>
<         -: 1701:    template<typename _Iterator>
<         -: 1702:      void
<         -: 1703:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1704:      _M_assign_equal(_Iterator __first, _Iterator __last)
<         -: 1705:      {
<         -: 1706:	_Reuse_or_alloc_node __roan(*this);
<         -: 1707:	_M_impl._M_reset();
<         -: 1708:	for (; __first != __last; ++__first)
<         -: 1709:	  _M_insert_equal_(end(), *__first, __roan);
<         -: 1710:      }
<         -: 1711:#endif
<         -: 1712:
<         -: 1713:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1714:	   typename _Compare, typename _Alloc>
<         -: 1715:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
<     #####: 1716:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1717:    operator=(const _Rb_tree& __x)
<         -: 1718:    {
<     #####: 1719:      if (this != &__x)
<         -: 1720:	{
<         -: 1721:	  // Note that _Key may be a constant type.
<         -: 1722:#if __cplusplus >= 201103L
<     #####: 1723:	  if (_Alloc_traits::_S_propagate_on_copy_assign())
<         -: 1724:	    {
<     #####: 1725:	      auto& __this_alloc = this->_M_get_Node_allocator();
<     #####: 1726:	      auto& __that_alloc = __x._M_get_Node_allocator();
<     #####: 1727:	      if (!_Alloc_traits::_S_always_equal()
<     #####: 1728:		  && __this_alloc != __that_alloc)
<         -: 1729:		{
<         -: 1730:		  // Replacement allocator cannot free existing storage, we need
<         -: 1731:		  // to erase nodes first.
<     #####: 1732:		  clear();
<     #####: 1733:		  std::__alloc_on_copy(__this_alloc, __that_alloc);
<         -: 1734:		}
<         -: 1735:	    }
<         -: 1736:#endif
<         -: 1737:
<     #####: 1738:	  _Reuse_or_alloc_node __roan(*this);
<     #####: 1739:	  _M_impl._M_reset();
<         -: 1740:	  _M_impl._M_key_compare = __x._M_impl._M_key_compare;
<     #####: 1741:	  if (__x._M_root() != 0)
<     #####: 1742:	    _M_root() = _M_copy(__x, __roan);
<         -: 1743:	}
<         -: 1744:
<     #####: 1745:      return *this;
<         -: 1746:    }
<         -: 1747:
<         -: 1748:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1749:	   typename _Compare, typename _Alloc>
<         -: 1750:#if __cplusplus >= 201103L
<         -: 1751:    template<typename _Arg, typename _NodeGen>
<         -: 1752:#else
<         -: 1753:    template<typename _NodeGen>
<         -: 1754:#endif
<         -: 1755:      typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
<      174*: 1756:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1757:      _M_insert_(_Base_ptr __x, _Base_ptr __p,
<         -: 1758:#if __cplusplus >= 201103L
<         -: 1759:		 _Arg&& __v,
<         -: 1760:#else
<         -: 1761:		 const _Val& __v,
<         -: 1762:#endif
<         -: 1763:		 _NodeGen& __node_gen)
<         -: 1764:      {
<      174*: 1765:	bool __insert_left = (__x != 0 || __p == _M_end()
<      348*: 1766:			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
<         -: 1767:							_S_key(__p)));
<         -: 1768:
<      174*: 1769:	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
<         -: 1770:
<      174*: 1771:	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<      174*: 1772:				      this->_M_impl._M_header);
<      174*: 1773:	++_M_impl._M_node_count;
<      174*: 1774:	return iterator(__z);
<         -: 1775:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE10_M_insert_IRKS2_NS7_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSF_OT_RT0_:
<     #####: 1756:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1757:      _M_insert_(_Base_ptr __x, _Base_ptr __p,
<         -: 1758:#if __cplusplus >= 201103L
<         -: 1759:		 _Arg&& __v,
<         -: 1760:#else
<         -: 1761:		 const _Val& __v,
<         -: 1762:#endif
<         -: 1763:		 _NodeGen& __node_gen)
<         -: 1764:      {
<     #####: 1765:	bool __insert_left = (__x != 0 || __p == _M_end()
<     #####: 1766:			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
<         -: 1767:							_S_key(__p)));
<         -: 1768:
<     #####: 1769:	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
<         -: 1770:
<     #####: 1771:	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<     #####: 1772:				      this->_M_impl._M_header);
<     #####: 1773:	++_M_impl._M_node_count;
<     #####: 1774:	return iterator(__z);
<         -: 1775:      }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE10_M_insert_IS7_NSD_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS7_EPSt18_Rb_tree_node_baseSJ_OT_RT0_:
<        83: 1756:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1757:      _M_insert_(_Base_ptr __x, _Base_ptr __p,
<         -: 1758:#if __cplusplus >= 201103L
<         -: 1759:		 _Arg&& __v,
<         -: 1760:#else
<         -: 1761:		 const _Val& __v,
<         -: 1762:#endif
<         -: 1763:		 _NodeGen& __node_gen)
<         -: 1764:      {
<        83: 1765:	bool __insert_left = (__x != 0 || __p == _M_end()
<       166: 1766:			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
<         -: 1767:							_S_key(__p)));
<         -: 1768:
<        83: 1769:	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
<         -: 1770:
<        83: 1771:	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<        83: 1772:				      this->_M_impl._M_header);
<        83: 1773:	++_M_impl._M_node_count;
<        83: 1774:	return iterator(__z);
<         -: 1775:      }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE10_M_insert_IS7_NSD_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS7_EPSt18_Rb_tree_node_baseSJ_OT_RT0_:
<     #####: 1756:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1757:      _M_insert_(_Base_ptr __x, _Base_ptr __p,
<         -: 1758:#if __cplusplus >= 201103L
<         -: 1759:		 _Arg&& __v,
<         -: 1760:#else
<         -: 1761:		 const _Val& __v,
<         -: 1762:#endif
<         -: 1763:		 _NodeGen& __node_gen)
<         -: 1764:      {
<     #####: 1765:	bool __insert_left = (__x != 0 || __p == _M_end()
<     #####: 1766:			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
<         -: 1767:							_S_key(__p)));
<         -: 1768:
<     #####: 1769:	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
<         -: 1770:
<     #####: 1771:	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<     #####: 1772:				      this->_M_impl._M_header);
<     #####: 1773:	++_M_impl._M_node_count;
<     #####: 1774:	return iterator(__z);
<         -: 1775:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE10_M_insert_ISA_NSG_11_Alloc_nodeEEESt17_Rb_tree_iteratorISA_EPSt18_Rb_tree_node_baseSM_OT_RT0_:
<         2: 1756:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1757:      _M_insert_(_Base_ptr __x, _Base_ptr __p,
<         -: 1758:#if __cplusplus >= 201103L
<         -: 1759:		 _Arg&& __v,
<         -: 1760:#else
<         -: 1761:		 const _Val& __v,
<         -: 1762:#endif
<         -: 1763:		 _NodeGen& __node_gen)
<         -: 1764:      {
<         2: 1765:	bool __insert_left = (__x != 0 || __p == _M_end()
<        4*: 1766:			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
<         -: 1767:							_S_key(__p)));
<         -: 1768:
<         2: 1769:	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
<         -: 1770:
<         2: 1771:	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<         2: 1772:				      this->_M_impl._M_header);
<         2: 1773:	++_M_impl._M_node_count;
<         2: 1774:	return iterator(__z);
<         -: 1775:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_:
<     #####: 1756:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1757:      _M_insert_(_Base_ptr __x, _Base_ptr __p,
<         -: 1758:#if __cplusplus >= 201103L
<         -: 1759:		 _Arg&& __v,
<         -: 1760:#else
<         -: 1761:		 const _Val& __v,
<         -: 1762:#endif
<         -: 1763:		 _NodeGen& __node_gen)
<         -: 1764:      {
<     #####: 1765:	bool __insert_left = (__x != 0 || __p == _M_end()
<     #####: 1766:			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
<         -: 1767:							_S_key(__p)));
<         -: 1768:
<     #####: 1769:	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
<         -: 1770:
<     #####: 1771:	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<     #####: 1772:				      this->_M_impl._M_header);
<     #####: 1773:	++_M_impl._M_node_count;
<     #####: 1774:	return iterator(__z);
<         -: 1775:      }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE10_M_insert_ISD_NSJ_11_Alloc_nodeEEESt17_Rb_tree_iteratorISD_EPSt18_Rb_tree_node_baseSP_OT_RT0_:
<        89: 1756:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1757:      _M_insert_(_Base_ptr __x, _Base_ptr __p,
<         -: 1758:#if __cplusplus >= 201103L
<         -: 1759:		 _Arg&& __v,
<         -: 1760:#else
<         -: 1761:		 const _Val& __v,
<         -: 1762:#endif
<         -: 1763:		 _NodeGen& __node_gen)
<         -: 1764:      {
<        89: 1765:	bool __insert_left = (__x != 0 || __p == _M_end()
<      178*: 1766:			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
<         -: 1767:							_S_key(__p)));
<         -: 1768:
<        89: 1769:	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
<         -: 1770:
<        89: 1771:	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<        89: 1772:				      this->_M_impl._M_header);
<        89: 1773:	++_M_impl._M_node_count;
<        89: 1774:	return iterator(__z);
<         -: 1775:      }
< ------------------
<         -: 1776:
<         -: 1777:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1778:	   typename _Compare, typename _Alloc>
<         -: 1779:#if __cplusplus >= 201103L
<         -: 1780:    template<typename _Arg>
<         -: 1781:#endif
<         -: 1782:    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
<         -: 1783:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1784:#if __cplusplus >= 201103L
<         -: 1785:    _M_insert_lower(_Base_ptr __p, _Arg&& __v)
<         -: 1786:#else
<         -: 1787:    _M_insert_lower(_Base_ptr __p, const _Val& __v)
<         -: 1788:#endif
<         -: 1789:    {
<         -: 1790:      bool __insert_left = (__p == _M_end()
<         -: 1791:			    || !_M_impl._M_key_compare(_S_key(__p),
<         -: 1792:						       _KeyOfValue()(__v)));
<         -: 1793:
<         -: 1794:      _Link_type __z = _M_create_node(_GLIBCXX_FORWARD(_Arg, __v));
<         -: 1795:
<         -: 1796:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<         -: 1797:				    this->_M_impl._M_header);
<         -: 1798:      ++_M_impl._M_node_count;
<         -: 1799:      return iterator(__z);
<         -: 1800:    }
<         -: 1801:
<         -: 1802:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1803:	   typename _Compare, typename _Alloc>
<         -: 1804:#if __cplusplus >= 201103L
<         -: 1805:    template<typename _Arg>
<         -: 1806:#endif
<         -: 1807:    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
<         -: 1808:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1809:#if __cplusplus >= 201103L
<         -: 1810:    _M_insert_equal_lower(_Arg&& __v)
<         -: 1811:#else
<         -: 1812:    _M_insert_equal_lower(const _Val& __v)
<         -: 1813:#endif
<         -: 1814:    {
<         -: 1815:      _Link_type __x = _M_begin();
<         -: 1816:      _Base_ptr __y = _M_end();
<         -: 1817:      while (__x != 0)
<         -: 1818:	{
<         -: 1819:	  __y = __x;
<         -: 1820:	  __x = !_M_impl._M_key_compare(_S_key(__x), _KeyOfValue()(__v)) ?
<         -: 1821:		_S_left(__x) : _S_right(__x);
<         -: 1822:	}
<         -: 1823:      return _M_insert_lower(__y, _GLIBCXX_FORWARD(_Arg, __v));
<         -: 1824:    }
<         -: 1825:
<         -: 1826:  template<typename _Key, typename _Val, typename _KoV,
<         -: 1827:	   typename _Compare, typename _Alloc>
<         -: 1828:    template<typename _NodeGen>
<         -: 1829:      typename _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::_Link_type
<     #####: 1830:      _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::
<         -: 1831:      _M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen& __node_gen)
<         -: 1832:      {
<         -: 1833:	// Structural copy. __x and __p must be non-null.
<     #####: 1834:	_Link_type __top = _M_clone_node(__x, __node_gen);
<     #####: 1835:	__top->_M_parent = __p;
<         -: 1836:
<         -: 1837:	__try
<         -: 1838:	  {
<     #####: 1839:	    if (__x->_M_right)
<     #####: 1840:	      __top->_M_right = _M_copy(_S_right(__x), __top, __node_gen);
<     #####: 1841:	    __p = __top;
<     #####: 1842:	    __x = _S_left(__x);
<         -: 1843:
<     #####: 1844:	    while (__x != 0)
<         -: 1845:	      {
<     #####: 1846:		_Link_type __y = _M_clone_node(__x, __node_gen);
<     #####: 1847:		__p->_M_left = __y;
<     #####: 1848:		__y->_M_parent = __p;
<     #####: 1849:		if (__x->_M_right)
<     #####: 1850:		  __y->_M_right = _M_copy(_S_right(__x), __y, __node_gen);
<     #####: 1851:		__p = __y;
<     #####: 1852:		__x = _S_left(__x);
<         -: 1853:	      }
<         -: 1854:	  }
<     =====: 1855:	__catch(...)
<         -: 1856:	  {
<     =====: 1857:	    _M_erase(__top);
<     =====: 1858:	    __throw_exception_again;
<         -: 1859:	  }
<     #####: 1860:	return __top;
<         -: 1861:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE7_M_copyINS7_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSB_PSt18_Rb_tree_node_baseRT_:
<     #####: 1830:      _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::
<         -: 1831:      _M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen& __node_gen)
<         -: 1832:      {
<         -: 1833:	// Structural copy. __x and __p must be non-null.
<     #####: 1834:	_Link_type __top = _M_clone_node(__x, __node_gen);
<     #####: 1835:	__top->_M_parent = __p;
<         -: 1836:
<         -: 1837:	__try
<         -: 1838:	  {
<     #####: 1839:	    if (__x->_M_right)
<     #####: 1840:	      __top->_M_right = _M_copy(_S_right(__x), __top, __node_gen);
<     #####: 1841:	    __p = __top;
<     #####: 1842:	    __x = _S_left(__x);
<         -: 1843:
<     #####: 1844:	    while (__x != 0)
<         -: 1845:	      {
<     #####: 1846:		_Link_type __y = _M_clone_node(__x, __node_gen);
<     #####: 1847:		__p->_M_left = __y;
<     #####: 1848:		__y->_M_parent = __p;
<     #####: 1849:		if (__x->_M_right)
<     #####: 1850:		  __y->_M_right = _M_copy(_S_right(__x), __y, __node_gen);
<     #####: 1851:		__p = __y;
<     #####: 1852:		__x = _S_left(__x);
<         -: 1853:	      }
<         -: 1854:	  }
<     =====: 1855:	__catch(...)
<         -: 1856:	  {
<     =====: 1857:	    _M_erase(__top);
<     =====: 1858:	    __throw_exception_again;
<         -: 1859:	  }
<     #####: 1860:	return __top;
<         -: 1861:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE7_M_copyINSD_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_EPKSH_PSt18_Rb_tree_node_baseRT_:
<     #####: 1830:      _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::
<         -: 1831:      _M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen& __node_gen)
<         -: 1832:      {
<         -: 1833:	// Structural copy. __x and __p must be non-null.
<     #####: 1834:	_Link_type __top = _M_clone_node(__x, __node_gen);
<     #####: 1835:	__top->_M_parent = __p;
<         -: 1836:
<         -: 1837:	__try
<         -: 1838:	  {
<     #####: 1839:	    if (__x->_M_right)
<     #####: 1840:	      __top->_M_right = _M_copy(_S_right(__x), __top, __node_gen);
<     #####: 1841:	    __p = __top;
<     #####: 1842:	    __x = _S_left(__x);
<         -: 1843:
<     #####: 1844:	    while (__x != 0)
<         -: 1845:	      {
<     #####: 1846:		_Link_type __y = _M_clone_node(__x, __node_gen);
<     #####: 1847:		__p->_M_left = __y;
<     #####: 1848:		__y->_M_parent = __p;
<     #####: 1849:		if (__x->_M_right)
<     #####: 1850:		  __y->_M_right = _M_copy(_S_right(__x), __y, __node_gen);
<     #####: 1851:		__p = __y;
<     #####: 1852:		__x = _S_left(__x);
<         -: 1853:	      }
<         -: 1854:	  }
<     =====: 1855:	__catch(...)
<         -: 1856:	  {
<     =====: 1857:	    _M_erase(__top);
<     =====: 1858:	    __throw_exception_again;
<         -: 1859:	  }
<     #####: 1860:	return __top;
<         -: 1861:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE7_M_copyINSD_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS9_EPKSH_PSt18_Rb_tree_node_baseRT_:
<     #####: 1830:      _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::
<         -: 1831:      _M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen& __node_gen)
<         -: 1832:      {
<         -: 1833:	// Structural copy. __x and __p must be non-null.
<     #####: 1834:	_Link_type __top = _M_clone_node(__x, __node_gen);
<     #####: 1835:	__top->_M_parent = __p;
<         -: 1836:
<         -: 1837:	__try
<         -: 1838:	  {
<     #####: 1839:	    if (__x->_M_right)
<     #####: 1840:	      __top->_M_right = _M_copy(_S_right(__x), __top, __node_gen);
<     #####: 1841:	    __p = __top;
<     #####: 1842:	    __x = _S_left(__x);
<         -: 1843:
<     #####: 1844:	    while (__x != 0)
<         -: 1845:	      {
<     #####: 1846:		_Link_type __y = _M_clone_node(__x, __node_gen);
<     #####: 1847:		__p->_M_left = __y;
<     #####: 1848:		__y->_M_parent = __p;
<     #####: 1849:		if (__x->_M_right)
<     #####: 1850:		  __y->_M_right = _M_copy(_S_right(__x), __y, __node_gen);
<     #####: 1851:		__p = __y;
<     #####: 1852:		__x = _S_left(__x);
<         -: 1853:	      }
<         -: 1854:	  }
<     =====: 1855:	__catch(...)
<         -: 1856:	  {
<     =====: 1857:	    _M_erase(__top);
<     =====: 1858:	    __throw_exception_again;
<         -: 1859:	  }
<     #####: 1860:	return __top;
<         -: 1861:      }
< ------------------
---
>         -: 1201:      pair<iterator, iterator>
>         -: 1202:      equal_range(const key_type& __k);
>         -: 1203:
>         -: 1204:      pair<const_iterator, const_iterator>
>         -: 1205:      equal_range(const key_type& __k) const;
>         -: 1206:
>         -: 1207:#if __cplusplus > 201103L
>         -: 1208:      template<typename _Kt,
>         -: 1209:	       typename _Req =
>         -: 1210:		 typename __has_is_transparent<_Compare, _Kt>::type>
>         -: 1211:	iterator
>         -: 1212:	_M_find_tr(const _Kt& __k)
>         -: 1213:	{
>         -: 1214:	  const _Rb_tree* __const_this = this;
>         -: 1215:	  return __const_this->_M_find_tr(__k)._M_const_cast();
>         -: 1216:	}
>         -: 1217:
>         -: 1218:      template<typename _Kt,
>         -: 1219:	       typename _Req =
>         -: 1220:		 typename __has_is_transparent<_Compare, _Kt>::type>
>         -: 1221:	const_iterator
>         -: 1222:	_M_find_tr(const _Kt& __k) const
>         -: 1223:	{
>         -: 1224:	  auto __j = _M_lower_bound_tr(__k);
>         -: 1225:	  if (__j != end() && _M_impl._M_key_compare(__k, _S_key(__j._M_node)))
>         -: 1226:	    __j = end();
>         -: 1227:	  return __j;
>         -: 1228:	}
>         -: 1229:
>         -: 1230:      template<typename _Kt,
>         -: 1231:	       typename _Req =
>         -: 1232:		 typename __has_is_transparent<_Compare, _Kt>::type>
>         -: 1233:	size_type
>         -: 1234:	_M_count_tr(const _Kt& __k) const
>         -: 1235:	{
>         -: 1236:	  auto __p = _M_equal_range_tr(__k);
>         -: 1237:	  return std::distance(__p.first, __p.second);
>         -: 1238:	}
>         -: 1239:
>         -: 1240:      template<typename _Kt,
>         -: 1241:	       typename _Req =
>         -: 1242:		 typename __has_is_transparent<_Compare, _Kt>::type>
>         -: 1243:	iterator
>         -: 1244:	_M_lower_bound_tr(const _Kt& __k)
>         -: 1245:	{
>         -: 1246:	  const _Rb_tree* __const_this = this;
>         -: 1247:	  return __const_this->_M_lower_bound_tr(__k)._M_const_cast();
>         -: 1248:	}
>         -: 1249:
>         -: 1250:      template<typename _Kt,
>         -: 1251:	       typename _Req =
>         -: 1252:		 typename __has_is_transparent<_Compare, _Kt>::type>
>         -: 1253:	const_iterator
>         -: 1254:	_M_lower_bound_tr(const _Kt& __k) const
>         -: 1255:	{
>         -: 1256:	  auto __x = _M_begin();
>         -: 1257:	  auto __y = _M_end();
>         -: 1258:	  while (__x != 0)
>         -: 1259:	    if (!_M_impl._M_key_compare(_S_key(__x), __k))
>         -: 1260:	      {
>         -: 1261:		__y = __x;
>         -: 1262:		__x = _S_left(__x);
>         -: 1263:	      }
>         -: 1264:	    else
>         -: 1265:	      __x = _S_right(__x);
>         -: 1266:	  return const_iterator(__y);
>         -: 1267:	}
>         -: 1268:
>         -: 1269:      template<typename _Kt,
>         -: 1270:	       typename _Req =
>         -: 1271:		 typename __has_is_transparent<_Compare, _Kt>::type>
>         -: 1272:	iterator
>         -: 1273:	_M_upper_bound_tr(const _Kt& __k)
>         -: 1274:	{
>         -: 1275:	  const _Rb_tree* __const_this = this;
>         -: 1276:	  return __const_this->_M_upper_bound_tr(__k)._M_const_cast();
>         -: 1277:	}
>         -: 1278:
>         -: 1279:      template<typename _Kt,
>         -: 1280:	       typename _Req =
>         -: 1281:		 typename __has_is_transparent<_Compare, _Kt>::type>
>         -: 1282:	const_iterator
>         -: 1283:	_M_upper_bound_tr(const _Kt& __k) const
>         -: 1284:	{
>         -: 1285:	  auto __x = _M_begin();
>         -: 1286:	  auto __y = _M_end();
>         -: 1287:	  while (__x != 0)
>         -: 1288:	    if (_M_impl._M_key_compare(__k, _S_key(__x)))
>         -: 1289:	      {
>         -: 1290:		__y = __x;
>         -: 1291:		__x = _S_left(__x);
>         -: 1292:	      }
>         -: 1293:	    else
>         -: 1294:	      __x = _S_right(__x);
>         -: 1295:	  return const_iterator(__y);
>         -: 1296:	}
>         -: 1297:
>         -: 1298:      template<typename _Kt,
>         -: 1299:	       typename _Req =
>         -: 1300:		 typename __has_is_transparent<_Compare, _Kt>::type>
>         -: 1301:	pair<iterator, iterator>
>         -: 1302:	_M_equal_range_tr(const _Kt& __k)
>         -: 1303:	{
>         -: 1304:	  const _Rb_tree* __const_this = this;
>         -: 1305:	  auto __ret = __const_this->_M_equal_range_tr(__k);
>         -: 1306:	  return { __ret.first._M_const_cast(), __ret.second._M_const_cast() };
>         -: 1307:	}
>         -: 1308:
>         -: 1309:      template<typename _Kt,
>         -: 1310:	       typename _Req =
>         -: 1311:		 typename __has_is_transparent<_Compare, _Kt>::type>
>         -: 1312:	pair<const_iterator, const_iterator>
>         -: 1313:	_M_equal_range_tr(const _Kt& __k) const
>         -: 1314:	{
>         -: 1315:	  auto __low = _M_lower_bound_tr(__k);
>         -: 1316:	  auto __high = __low;
>         -: 1317:	  auto& __cmp = _M_impl._M_key_compare;
>         -: 1318:	  while (__high != end() && !__cmp(__k, _S_key(__high._M_node)))
>         -: 1319:	    ++__high;
>         -: 1320:	  return { __low, __high };
>         -: 1321:	}
>         -: 1322:#endif
>         -: 1323:
>         -: 1324:      // Debugging.
>         -: 1325:      bool
>         -: 1326:      __rb_verify() const;
>         -: 1327:
>         -: 1328:#if __cplusplus >= 201103L
>         -: 1329:      _Rb_tree&
>         -: 1330:      operator=(_Rb_tree&&)
>         -: 1331:      noexcept(_Alloc_traits::_S_nothrow_move()
>         -: 1332:	       && is_nothrow_move_assignable<_Compare>::value);
>         -: 1333:
>         -: 1334:      template<typename _Iterator>
>         -: 1335:	void
>         -: 1336:	_M_assign_unique(_Iterator, _Iterator);
>         -: 1337:
>         -: 1338:      template<typename _Iterator>
>         -: 1339:	void
>         -: 1340:	_M_assign_equal(_Iterator, _Iterator);
>         -: 1341:
>         -: 1342:    private:
>         -: 1343:      // Move elements from container with equal allocator.
>         -: 1344:      void
>         -: 1345:      _M_move_data(_Rb_tree& __x, std::true_type)
>         -: 1346:      { _M_impl._M_move_data(__x._M_impl); }
>         -: 1347:
>         -: 1348:      // Move elements from container with possibly non-equal allocator,
>         -: 1349:      // which might result in a copy not a move.
>         -: 1350:      void
>         -: 1351:      _M_move_data(_Rb_tree&, std::false_type);
>         -: 1352:
>         -: 1353:      // Move assignment from container with equal allocator.
>         -: 1354:      void
>         -: 1355:      _M_move_assign(_Rb_tree&, std::true_type);
>         -: 1356:
>         -: 1357:      // Move assignment from container with possibly non-equal allocator,
>         -: 1358:      // which might result in a copy not a move.
>         -: 1359:      void
>         -: 1360:      _M_move_assign(_Rb_tree&, std::false_type);
>         -: 1361:#endif
>         -: 1362:
>         -: 1363:#if __cplusplus > 201402L
>         -: 1364:    public:
>         -: 1365:      /// Re-insert an extracted node.
>         -: 1366:      insert_return_type
>         -: 1367:      _M_reinsert_node_unique(node_type&& __nh)
>         -: 1368:      {
>         -: 1369:	insert_return_type __ret;
>         -: 1370:	if (__nh.empty())
>         -: 1371:	  __ret.position = end();
>         -: 1372:	else
>         -: 1373:	  {
>         -: 1374:	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
>         -: 1375:
>         -: 1376:	    auto __res = _M_get_insert_unique_pos(__nh._M_key());
>         -: 1377:	    if (__res.second)
>         -: 1378:	      {
>         -: 1379:		__ret.position
>         -: 1380:		  = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
>         -: 1381:		__nh._M_ptr = nullptr;
>         -: 1382:		__ret.inserted = true;
>         -: 1383:	      }
>         -: 1384:	    else
>         -: 1385:	      {
>         -: 1386:		__ret.node = std::move(__nh);
>         -: 1387:		__ret.position = iterator(__res.first);
>         -: 1388:		__ret.inserted = false;
>         -: 1389:	      }
>         -: 1390:	  }
>         -: 1391:	return __ret;
>         -: 1392:      }
>         -: 1393:
>         -: 1394:      /// Re-insert an extracted node.
>         -: 1395:      iterator
>         -: 1396:      _M_reinsert_node_equal(node_type&& __nh)
>         -: 1397:      {
>         -: 1398:	iterator __ret;
>         -: 1399:	if (__nh.empty())
>         -: 1400:	  __ret = end();
>         -: 1401:	else
>         -: 1402:	  {
>         -: 1403:	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
>         -: 1404:	    auto __res = _M_get_insert_equal_pos(__nh._M_key());
>         -: 1405:	    if (__res.second)
>         -: 1406:	      __ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
>         -: 1407:	    else
>         -: 1408:	      __ret = _M_insert_equal_lower_node(__nh._M_ptr);
>         -: 1409:	    __nh._M_ptr = nullptr;
>         -: 1410:	  }
>         -: 1411:	return __ret;
>         -: 1412:      }
>         -: 1413:
>         -: 1414:      /// Re-insert an extracted node.
>         -: 1415:      iterator
>         -: 1416:      _M_reinsert_node_hint_unique(const_iterator __hint, node_type&& __nh)
>         -: 1417:      {
>         -: 1418:	iterator __ret;
>         -: 1419:	if (__nh.empty())
>         -: 1420:	  __ret = end();
>         -: 1421:	else
>         -: 1422:	  {
>         -: 1423:	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
>         -: 1424:	    auto __res = _M_get_insert_hint_unique_pos(__hint, __nh._M_key());
>         -: 1425:	    if (__res.second)
>         -: 1426:	      {
>         -: 1427:		__ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
>         -: 1428:		__nh._M_ptr = nullptr;
>         -: 1429:	      }
>         -: 1430:	    else
>         -: 1431:	      __ret = iterator(__res.first);
>         -: 1432:	  }
>         -: 1433:	return __ret;
>         -: 1434:      }
>         -: 1435:
>         -: 1436:      /// Re-insert an extracted node.
>         -: 1437:      iterator
>         -: 1438:      _M_reinsert_node_hint_equal(const_iterator __hint, node_type&& __nh)
>         -: 1439:      {
>         -: 1440:	iterator __ret;
>         -: 1441:	if (__nh.empty())
>         -: 1442:	  __ret = end();
>         -: 1443:	else
>         -: 1444:	  {
>         -: 1445:	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
>         -: 1446:	    auto __res = _M_get_insert_hint_equal_pos(__hint, __nh._M_key());
>         -: 1447:	    if (__res.second)
>         -: 1448:	      __ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
>         -: 1449:	    else
>         -: 1450:	      __ret = _M_insert_equal_lower_node(__nh._M_ptr);
>         -: 1451:	    __nh._M_ptr = nullptr;
>         -: 1452:	  }
>         -: 1453:	return __ret;
>         -: 1454:      }
>         -: 1455:
>         -: 1456:      /// Extract a node.
>         -: 1457:      node_type
>         -: 1458:      extract(const_iterator __pos)
>         -: 1459:      {
>         -: 1460:	auto __ptr = _Rb_tree_rebalance_for_erase(
>         -: 1461:	    __pos._M_const_cast()._M_node, _M_impl._M_header);
>         -: 1462:	--_M_impl._M_node_count;
>         -: 1463:	return { static_cast<_Link_type>(__ptr), _M_get_Node_allocator() };
>         -: 1464:      }
>         -: 1465:
>         -: 1466:      /// Extract a node.
>         -: 1467:      node_type
>         -: 1468:      extract(const key_type& __k)
>         -: 1469:      {
>         -: 1470:	node_type __nh;
>         -: 1471:	auto __pos = find(__k);
>         -: 1472:	if (__pos != end())
>         -: 1473:	  __nh = extract(const_iterator(__pos));
>         -: 1474:	return __nh;
>         -: 1475:      }
>         -: 1476:
>         -: 1477:      template<typename _Compare2>
>         -: 1478:	using _Compatible_tree
>         -: 1479:	  = _Rb_tree<_Key, _Val, _KeyOfValue, _Compare2, _Alloc>;
>         -: 1480:
>         -: 1481:      template<typename, typename>
>         -: 1482:	friend class _Rb_tree_merge_helper;
>         -: 1483:
>         -: 1484:      /// Merge from a compatible container into one with unique keys.
>         -: 1485:      template<typename _Compare2>
>         -: 1486:	void
>         -: 1487:	_M_merge_unique(_Compatible_tree<_Compare2>& __src) noexcept
>         -: 1488:	{
>         -: 1489:	  using _Merge_helper = _Rb_tree_merge_helper<_Rb_tree, _Compare2>;
>         -: 1490:	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
>         -: 1491:	    {
>         -: 1492:	      auto __pos = __i++;
>         -: 1493:	      auto __res = _M_get_insert_unique_pos(_KeyOfValue()(*__pos));
>         -: 1494:	      if (__res.second)
>         -: 1495:		{
>         -: 1496:		  auto& __src_impl = _Merge_helper::_S_get_impl(__src);
>         -: 1497:		  auto __ptr = _Rb_tree_rebalance_for_erase(
>         -: 1498:		      __pos._M_node, __src_impl._M_header);
>         -: 1499:		  --__src_impl._M_node_count;
>         -: 1500:		  _M_insert_node(__res.first, __res.second,
>         -: 1501:				 static_cast<_Link_type>(__ptr));
>         -: 1502:		}
>         -: 1503:	    }
>         -: 1504:	}
>         -: 1505:
>         -: 1506:      /// Merge from a compatible container into one with equivalent keys.
>         -: 1507:      template<typename _Compare2>
>         -: 1508:	void
>         -: 1509:	_M_merge_equal(_Compatible_tree<_Compare2>& __src) noexcept
>         -: 1510:	{
>         -: 1511:	  using _Merge_helper = _Rb_tree_merge_helper<_Rb_tree, _Compare2>;
>         -: 1512:	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
>         -: 1513:	    {
>         -: 1514:	      auto __pos = __i++;
>         -: 1515:	      auto __res = _M_get_insert_equal_pos(_KeyOfValue()(*__pos));
>         -: 1516:	      if (__res.second)
>         -: 1517:		{
>         -: 1518:		  auto& __src_impl = _Merge_helper::_S_get_impl(__src);
>         -: 1519:		  auto __ptr = _Rb_tree_rebalance_for_erase(
>         -: 1520:		      __pos._M_node, __src_impl._M_header);
>         -: 1521:		  --__src_impl._M_node_count;
>         -: 1522:		  _M_insert_node(__res.first, __res.second,
>         -: 1523:				 static_cast<_Link_type>(__ptr));
>         -: 1524:		}
>         -: 1525:	    }
>         -: 1526:	}
>         -: 1527:#endif // C++17
>         -: 1528:    };
>         -: 1529:
>         -: 1530:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1531:           typename _Compare, typename _Alloc>
>         -: 1532:    inline bool
>         -: 1533:    operator==(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
>         -: 1534:	       const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
>         -: 1535:    {
>         -: 1536:      return __x.size() == __y.size()
>         -: 1537:	     && std::equal(__x.begin(), __x.end(), __y.begin());
>         -: 1538:    }
>         -: 1539:
>         -: 1540:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1541:           typename _Compare, typename _Alloc>
>         -: 1542:    inline bool
>         -: 1543:    operator<(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
>         -: 1544:	      const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
>         -: 1545:    {
>         -: 1546:      return std::lexicographical_compare(__x.begin(), __x.end(), 
>         -: 1547:					  __y.begin(), __y.end());
>         -: 1548:    }
>         -: 1549:
>         -: 1550:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1551:           typename _Compare, typename _Alloc>
>         -: 1552:    inline bool
>         -: 1553:    operator!=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
>         -: 1554:	       const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
>         -: 1555:    { return !(__x == __y); }
>         -: 1556:
>         -: 1557:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1558:           typename _Compare, typename _Alloc>
>         -: 1559:    inline bool
>         -: 1560:    operator>(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
>         -: 1561:	      const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
>         -: 1562:    { return __y < __x; }
>         -: 1563:
>         -: 1564:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1565:           typename _Compare, typename _Alloc>
>         -: 1566:    inline bool
>         -: 1567:    operator<=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
>         -: 1568:	       const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
>         -: 1569:    { return !(__y < __x); }
>         -: 1570:
>         -: 1571:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1572:           typename _Compare, typename _Alloc>
>         -: 1573:    inline bool
>         -: 1574:    operator>=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
>         -: 1575:	       const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
>         -: 1576:    { return !(__x < __y); }
>         -: 1577:
>         -: 1578:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1579:           typename _Compare, typename _Alloc>
>         -: 1580:    inline void
>         -: 1581:    swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
>         -: 1582:	 _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
>         -: 1583:    { __x.swap(__y); }
>         -: 1584:
>         -: 1585:#if __cplusplus >= 201103L
>         -: 1586:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1587:           typename _Compare, typename _Alloc>
>         -: 1588:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 1589:    _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a)
>         -: 1590:    : _M_impl(__x._M_impl._M_key_compare, std::move(__a))
>         -: 1591:    {
>         -: 1592:      using __eq = typename _Alloc_traits::is_always_equal;
>         -: 1593:      if (__x._M_root() != nullptr)
>         -: 1594:	_M_move_data(__x, __eq());
>         -: 1595:    }
>         -: 1596:
>         -: 1597:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1598:           typename _Compare, typename _Alloc>
>         -: 1599:    void
>         -: 1600:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 1601:    _M_move_data(_Rb_tree& __x, std::false_type)
>         -: 1602:    {
>         -: 1603:      if (_M_get_Node_allocator() == __x._M_get_Node_allocator())
>         -: 1604:	_M_move_data(__x, std::true_type());
>         -: 1605:      else
>         -: 1606:	{
>         -: 1607:	  _Alloc_node __an(*this);
>         -: 1608:	  auto __lbd =
>         -: 1609:	    [&__an](const value_type& __cval)
>         -: 1610:	    {
>         -: 1611:	      auto& __val = const_cast<value_type&>(__cval);
>         -: 1612:	      return __an(std::move_if_noexcept(__val));
>         -: 1613:	    };
>         -: 1614:	  _M_root() = _M_copy(__x, __lbd);
>         -: 1615:	}
>         -: 1616:    }
>         -: 1617:
>         -: 1618:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1619:           typename _Compare, typename _Alloc>
>         -: 1620:    inline void
>         -: 1621:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 1622:    _M_move_assign(_Rb_tree& __x, true_type)
>         -: 1623:    {
>         -: 1624:      clear();
>         -: 1625:      if (__x._M_root() != nullptr)
>         -: 1626:	_M_move_data(__x, std::true_type());
>         -: 1627:      std::__alloc_on_move(_M_get_Node_allocator(),
>         -: 1628:			   __x._M_get_Node_allocator());
>         -: 1629:    }
>         -: 1630:
>         -: 1631:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1632:           typename _Compare, typename _Alloc>
>         -: 1633:    void
>         -: 1634:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 1635:    _M_move_assign(_Rb_tree& __x, false_type)
>         -: 1636:    {
>         -: 1637:      if (_M_get_Node_allocator() == __x._M_get_Node_allocator())
>         -: 1638:	return _M_move_assign(__x, true_type{});
>         -: 1639:
>         -: 1640:      // Try to move each node reusing existing nodes and copying __x nodes
>         -: 1641:      // structure.
>         -: 1642:      _Reuse_or_alloc_node __roan(*this);
>         -: 1643:      _M_impl._M_reset();
>         -: 1644:      if (__x._M_root() != nullptr)
>         -: 1645:	{
>         -: 1646:	  auto __lbd =
>         -: 1647:	    [&__roan](const value_type& __cval)
>         -: 1648:	    {
>         -: 1649:	      auto& __val = const_cast<value_type&>(__cval);
>         -: 1650:	      return __roan(std::move_if_noexcept(__val));
>         -: 1651:	    };
>         -: 1652:	  _M_root() = _M_copy(__x, __lbd);
>         -: 1653:	  __x.clear();
>         -: 1654:	}
>         -: 1655:    }
>         -: 1656:
>         -: 1657:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1658:           typename _Compare, typename _Alloc>
>         -: 1659:    inline _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
>         -: 1660:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 1661:    operator=(_Rb_tree&& __x)
>         -: 1662:    noexcept(_Alloc_traits::_S_nothrow_move()
>         -: 1663:	     && is_nothrow_move_assignable<_Compare>::value)
>         -: 1664:    {
>         -: 1665:      _M_impl._M_key_compare = std::move(__x._M_impl._M_key_compare);
>         -: 1666:      _M_move_assign(__x, __bool_constant<_Alloc_traits::_S_nothrow_move()>());
>         -: 1667:      return *this;
>         -: 1668:    }
>         -: 1669:
>         -: 1670:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1671:           typename _Compare, typename _Alloc>
>         -: 1672:    template<typename _Iterator>
>         -: 1673:      void
>         -: 1674:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 1675:      _M_assign_unique(_Iterator __first, _Iterator __last)
>         -: 1676:      {
>         -: 1677:	_Reuse_or_alloc_node __roan(*this);
>         -: 1678:	_M_impl._M_reset();
>         -: 1679:	for (; __first != __last; ++__first)
>         -: 1680:	  _M_insert_unique_(end(), *__first, __roan);
>         -: 1681:      }
>         -: 1682:
>         -: 1683:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1684:           typename _Compare, typename _Alloc>
>         -: 1685:    template<typename _Iterator>
>         -: 1686:      void
>         -: 1687:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 1688:      _M_assign_equal(_Iterator __first, _Iterator __last)
>         -: 1689:      {
>         -: 1690:	_Reuse_or_alloc_node __roan(*this);
>         -: 1691:	_M_impl._M_reset();
>         -: 1692:	for (; __first != __last; ++__first)
>         -: 1693:	  _M_insert_equal_(end(), *__first, __roan);
>         -: 1694:      }
>         -: 1695:#endif
>         -: 1696:
>         -: 1697:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1698:           typename _Compare, typename _Alloc>
>         -: 1699:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
>         -: 1700:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 1701:    operator=(const _Rb_tree& __x)
>         -: 1702:    {
>         -: 1703:      if (this != &__x)
>         -: 1704:	{
>         -: 1705:	  // Note that _Key may be a constant type.
>         -: 1706:#if __cplusplus >= 201103L
>         -: 1707:	  if (_Alloc_traits::_S_propagate_on_copy_assign())
>         -: 1708:	    {
>         -: 1709:	      auto& __this_alloc = this->_M_get_Node_allocator();
>         -: 1710:	      auto& __that_alloc = __x._M_get_Node_allocator();
>         -: 1711:	      if (!_Alloc_traits::_S_always_equal()
>         -: 1712:		  && __this_alloc != __that_alloc)
>         -: 1713:		{
>         -: 1714:		  // Replacement allocator cannot free existing storage, we need
>         -: 1715:		  // to erase nodes first.
>         -: 1716:		  clear();
>         -: 1717:		  std::__alloc_on_copy(__this_alloc, __that_alloc);
>         -: 1718:		}
>         -: 1719:	    }
>         -: 1720:#endif
>         -: 1721:
>         -: 1722:	  _Reuse_or_alloc_node __roan(*this);
>         -: 1723:	  _M_impl._M_reset();
>         -: 1724:	  _M_impl._M_key_compare = __x._M_impl._M_key_compare;
>         -: 1725:	  if (__x._M_root() != 0)
>         -: 1726:	    _M_root() = _M_copy(__x, __roan);
>         -: 1727:	}
>         -: 1728:
>         -: 1729:      return *this;
>         -: 1730:    }
>         -: 1731:
>         -: 1732:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1733:           typename _Compare, typename _Alloc>
>         -: 1734:#if __cplusplus >= 201103L
>         -: 1735:    template<typename _Arg, typename _NodeGen>
>         -: 1736:#else
>         -: 1737:    template<typename _NodeGen>
>         -: 1738:#endif
>         -: 1739:      typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
>         -: 1740:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 1741:      _M_insert_(_Base_ptr __x, _Base_ptr __p,
>         -: 1742:#if __cplusplus >= 201103L
>         -: 1743:		 _Arg&& __v,
>         -: 1744:#else
>         -: 1745:		 const _Val& __v,
>         -: 1746:#endif
>         -: 1747:		 _NodeGen& __node_gen)
>         -: 1748:      {
>         -: 1749:	bool __insert_left = (__x != 0 || __p == _M_end()
>         -: 1750:			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
>         -: 1751:							_S_key(__p)));
>         -: 1752:
>         -: 1753:	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
>         -: 1754:
>         -: 1755:	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
>         -: 1756:				      this->_M_impl._M_header);
>         -: 1757:	++_M_impl._M_node_count;
>         -: 1758:	return iterator(__z);
>         -: 1759:      }
>         -: 1760:
>         -: 1761:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1762:           typename _Compare, typename _Alloc>
>         -: 1763:#if __cplusplus >= 201103L
>         -: 1764:    template<typename _Arg>
>         -: 1765:#endif
>         -: 1766:    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
>         -: 1767:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 1768:#if __cplusplus >= 201103L
>         -: 1769:    _M_insert_lower(_Base_ptr __p, _Arg&& __v)
>         -: 1770:#else
>         -: 1771:    _M_insert_lower(_Base_ptr __p, const _Val& __v)
>         -: 1772:#endif
>         -: 1773:    {
>         -: 1774:      bool __insert_left = (__p == _M_end()
>         -: 1775:			    || !_M_impl._M_key_compare(_S_key(__p),
>         -: 1776:						       _KeyOfValue()(__v)));
>         -: 1777:
>         -: 1778:      _Link_type __z = _M_create_node(_GLIBCXX_FORWARD(_Arg, __v));
>         -: 1779:
>         -: 1780:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
>         -: 1781:				    this->_M_impl._M_header);
>         -: 1782:      ++_M_impl._M_node_count;
>         -: 1783:      return iterator(__z);
>         -: 1784:    }
>         -: 1785:
>         -: 1786:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1787:           typename _Compare, typename _Alloc>
>         -: 1788:#if __cplusplus >= 201103L
>         -: 1789:    template<typename _Arg>
>         -: 1790:#endif
>         -: 1791:    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
>         -: 1792:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 1793:#if __cplusplus >= 201103L
>         -: 1794:    _M_insert_equal_lower(_Arg&& __v)
>         -: 1795:#else
>         -: 1796:    _M_insert_equal_lower(const _Val& __v)
>         -: 1797:#endif
>         -: 1798:    {
>         -: 1799:      _Link_type __x = _M_begin();
>         -: 1800:      _Base_ptr __y = _M_end();
>         -: 1801:      while (__x != 0)
>         -: 1802:	{
>         -: 1803:	  __y = __x;
>         -: 1804:	  __x = !_M_impl._M_key_compare(_S_key(__x), _KeyOfValue()(__v)) ?
>         -: 1805:	        _S_left(__x) : _S_right(__x);
>         -: 1806:	}
>         -: 1807:      return _M_insert_lower(__y, _GLIBCXX_FORWARD(_Arg, __v));
>         -: 1808:    }
>         -: 1809:
>         -: 1810:  template<typename _Key, typename _Val, typename _KoV,
>         -: 1811:	   typename _Compare, typename _Alloc>
>         -: 1812:    template<typename _NodeGen>
>         -: 1813:      typename _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::_Link_type
>         -: 1814:      _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::
>         -: 1815:      _M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen& __node_gen)
>         -: 1816:      {
>         -: 1817:	// Structural copy. __x and __p must be non-null.
>         -: 1818:	_Link_type __top = _M_clone_node(__x, __node_gen);
>         -: 1819:	__top->_M_parent = __p;
>         -: 1820:
>         -: 1821:	__try
>         -: 1822:	  {
>         -: 1823:	    if (__x->_M_right)
>         -: 1824:	      __top->_M_right = _M_copy(_S_right(__x), __top, __node_gen);
>         -: 1825:	    __p = __top;
>         -: 1826:	    __x = _S_left(__x);
>         -: 1827:
>         -: 1828:	    while (__x != 0)
>         -: 1829:	      {
>         -: 1830:		_Link_type __y = _M_clone_node(__x, __node_gen);
>         -: 1831:		__p->_M_left = __y;
>         -: 1832:		__y->_M_parent = __p;
>         -: 1833:		if (__x->_M_right)
>         -: 1834:		  __y->_M_right = _M_copy(_S_right(__x), __y, __node_gen);
>         -: 1835:		__p = __y;
>         -: 1836:		__x = _S_left(__x);
>         -: 1837:	      }
>         -: 1838:	  }
>         -: 1839:	__catch(...)
>         -: 1840:	  {
>         -: 1841:	    _M_erase(__top);
>         -: 1842:	    __throw_exception_again;
>         -: 1843:	  }
>         -: 1844:	return __top;
>         -: 1845:      }
>         -: 1846:
>         -: 1847:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1848:           typename _Compare, typename _Alloc>
>         -: 1849:    void
>     #####: 1850:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 1851:    _M_erase(_Link_type __x)
>         -: 1852:    {
>         -: 1853:      // Erase without rebalancing.
>     #####: 1854:      while (__x != 0)
>         -: 1855:	{
>     #####: 1856:	  _M_erase(_S_right(__x));
>     #####: 1857:	  _Link_type __y = _S_left(__x);
>     #####: 1858:	  _M_drop_node(__x);
>     #####: 1859:	  __x = __y;
>         -: 1860:	}
>     #####: 1861:    }
7709,8059c1866,1879
<         -: 1864:	   typename _Compare, typename _Alloc>
<         -: 1865:    void
<     2526*: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<     2526*: 1870:      while (__x != 0)
<         -: 1871:	{
<      610*: 1872:	  _M_erase(_S_right(__x));
<      610*: 1873:	  _Link_type __y = _S_left(__x);
<      610*: 1874:	  _M_drop_node(__x);
<      610*: 1875:	  __x = __y;
<         -: 1876:	}
<     1916*: 1877:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE8_M_eraseEPSt13_Rb_tree_nodeIS7_E:
<     #####: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<     #####: 1870:      while (__x != 0)
<         -: 1871:	{
<     #####: 1872:	  _M_erase(_S_right(__x));
<     #####: 1873:	  _Link_type __y = _S_left(__x);
<     #####: 1874:	  _M_drop_node(__x);
<     #####: 1875:	  __x = __y;
<         -: 1876:	}
<     #####: 1877:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE8_M_eraseEPSt13_Rb_tree_nodeISC_E:
<     #####: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<     #####: 1870:      while (__x != 0)
<         -: 1871:	{
<     #####: 1872:	  _M_erase(_S_right(__x));
<     #####: 1873:	  _Link_type __y = _S_left(__x);
<     #####: 1874:	  _M_drop_node(__x);
<     #####: 1875:	  __x = __y;
<         -: 1876:	}
<     #####: 1877:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE8_M_eraseEPSt13_Rb_tree_nodeISI_E:
<     #####: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<     #####: 1870:      while (__x != 0)
<         -: 1871:	{
<     #####: 1872:	  _M_erase(_S_right(__x));
<     #####: 1873:	  _Link_type __y = _S_left(__x);
<     #####: 1874:	  _M_drop_node(__x);
<     #####: 1875:	  __x = __y;
<         -: 1876:	}
<     #####: 1877:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E:
<     #####: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<     #####: 1870:      while (__x != 0)
<         -: 1871:	{
<     #####: 1872:	  _M_erase(_S_right(__x));
<     #####: 1873:	  _Link_type __y = _S_left(__x);
<     #####: 1874:	  _M_drop_node(__x);
<     #####: 1875:	  __x = __y;
<         -: 1876:	}
<     #####: 1877:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E:
<       416: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<       416: 1870:      while (__x != 0)
<         -: 1871:	{
<        89: 1872:	  _M_erase(_S_right(__x));
<        89: 1873:	  _Link_type __y = _S_left(__x);
<        89: 1874:	  _M_drop_node(__x);
<        89: 1875:	  __x = __y;
<         -: 1876:	}
<       327: 1877:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E:
<       654: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<       654: 1870:      while (__x != 0)
<         -: 1871:	{
<       208: 1872:	  _M_erase(_S_right(__x));
<       208: 1873:	  _Link_type __y = _S_left(__x);
<       208: 1874:	  _M_drop_node(__x);
<       208: 1875:	  __x = __y;
<         -: 1876:	}
<       446: 1877:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E:
<       594: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<       594: 1870:      while (__x != 0)
<         -: 1871:	{
<       178: 1872:	  _M_erase(_S_right(__x));
<       178: 1873:	  _Link_type __y = _S_left(__x);
<       178: 1874:	  _M_drop_node(__x);
<       178: 1875:	  __x = __y;
<         -: 1876:	}
<       416: 1877:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E:
<     #####: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<     #####: 1870:      while (__x != 0)
<         -: 1871:	{
<     #####: 1872:	  _M_erase(_S_right(__x));
<     #####: 1873:	  _Link_type __y = _S_left(__x);
<     #####: 1874:	  _M_drop_node(__x);
<     #####: 1875:	  __x = __y;
<         -: 1876:	}
<     #####: 1877:    }
< ------------------
< _ZNSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE8_M_eraseEPSt13_Rb_tree_nodeIS7_E:
<       238: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<      238*: 1870:      while (__x != 0)
<         -: 1871:	{
<     #####: 1872:	  _M_erase(_S_right(__x));
<     #####: 1873:	  _Link_type __y = _S_left(__x);
<     #####: 1874:	  _M_drop_node(__x);
<     #####: 1875:	  __x = __y;
<         -: 1876:	}
<       238: 1877:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E:
<     #####: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<     #####: 1870:      while (__x != 0)
<         -: 1871:	{
<     #####: 1872:	  _M_erase(_S_right(__x));
<     #####: 1873:	  _Link_type __y = _S_left(__x);
<     #####: 1874:	  _M_drop_node(__x);
<     #####: 1875:	  __x = __y;
<         -: 1876:	}
<     #####: 1877:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E:
<     #####: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<     #####: 1870:      while (__x != 0)
<         -: 1871:	{
<     #####: 1872:	  _M_erase(_S_right(__x));
<     #####: 1873:	  _Link_type __y = _S_left(__x);
<     #####: 1874:	  _M_drop_node(__x);
<     #####: 1875:	  __x = __y;
<         -: 1876:	}
<     #####: 1877:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEESt4pairIKS4_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stISA_ESt4lessIS4_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E:
<         5: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<        5*: 1870:      while (__x != 0)
<         -: 1871:	{
<     #####: 1872:	  _M_erase(_S_right(__x));
<     #####: 1873:	  _Link_type __y = _S_left(__x);
<     #####: 1874:	  _M_drop_node(__x);
<     #####: 1875:	  __x = __y;
<         -: 1876:	}
<         5: 1877:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E:
<     #####: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<     #####: 1870:      while (__x != 0)
<         -: 1871:	{
<     #####: 1872:	  _M_erase(_S_right(__x));
<     #####: 1873:	  _Link_type __y = _S_left(__x);
<     #####: 1874:	  _M_drop_node(__x);
<     #####: 1875:	  __x = __y;
<         -: 1876:	}
<     #####: 1877:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E:
<        84: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<       84*: 1870:      while (__x != 0)
<         -: 1871:	{
<     #####: 1872:	  _M_erase(_S_right(__x));
<     #####: 1873:	  _Link_type __y = _S_left(__x);
<     #####: 1874:	  _M_drop_node(__x);
<     #####: 1875:	  __x = __y;
<         -: 1876:	}
<        84: 1877:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E:
<        14: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<       14*: 1870:      while (__x != 0)
<         -: 1871:	{
<     #####: 1872:	  _M_erase(_S_right(__x));
<     #####: 1873:	  _Link_type __y = _S_left(__x);
<     #####: 1874:	  _M_drop_node(__x);
<     #####: 1875:	  __x = __y;
<         -: 1876:	}
<        14: 1877:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E:
<        54: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<        54: 1870:      while (__x != 0)
<         -: 1871:	{
<        18: 1872:	  _M_erase(_S_right(__x));
<        18: 1873:	  _Link_type __y = _S_left(__x);
<        18: 1874:	  _M_drop_node(__x);
<        18: 1875:	  __x = __y;
<         -: 1876:	}
<        36: 1877:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E:
<        60: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<        60: 1870:      while (__x != 0)
<         -: 1871:	{
<        18: 1872:	  _M_erase(_S_right(__x));
<        18: 1873:	  _Link_type __y = _S_left(__x);
<        18: 1874:	  _M_drop_node(__x);
<        18: 1875:	  __x = __y;
<         -: 1876:	}
<        42: 1877:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E:
<        24: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<        24: 1870:      while (__x != 0)
<         -: 1871:	{
<         6: 1872:	  _M_erase(_S_right(__x));
<         6: 1873:	  _Link_type __y = _S_left(__x);
<         6: 1874:	  _M_drop_node(__x);
<         6: 1875:	  __x = __y;
<         -: 1876:	}
<        18: 1877:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E:
<     #####: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<     #####: 1870:      while (__x != 0)
<         -: 1871:	{
<     #####: 1872:	  _M_erase(_S_right(__x));
<     #####: 1873:	  _Link_type __y = _S_left(__x);
<     #####: 1874:	  _M_drop_node(__x);
<     #####: 1875:	  __x = __y;
<         -: 1876:	}
<     #####: 1877:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE8_M_eraseEPSt13_Rb_tree_nodeIS7_E:
<       347: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<       347: 1870:      while (__x != 0)
<         -: 1871:	{
<        87: 1872:	  _M_erase(_S_right(__x));
<        87: 1873:	  _Link_type __y = _S_left(__x);
<        87: 1874:	  _M_drop_node(__x);
<        87: 1875:	  __x = __y;
<         -: 1876:	}
<       260: 1877:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E:
<     #####: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<     #####: 1870:      while (__x != 0)
<         -: 1871:	{
<     #####: 1872:	  _M_erase(_S_right(__x));
<     #####: 1873:	  _Link_type __y = _S_left(__x);
<     #####: 1874:	  _M_drop_node(__x);
<     #####: 1875:	  __x = __y;
<         -: 1876:	}
<     #####: 1877:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E:
<     #####: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<     #####: 1870:      while (__x != 0)
<         -: 1871:	{
<     #####: 1872:	  _M_erase(_S_right(__x));
<     #####: 1873:	  _Link_type __y = _S_left(__x);
<     #####: 1874:	  _M_drop_node(__x);
<     #####: 1875:	  __x = __y;
<         -: 1876:	}
<     #####: 1877:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E:
<         6: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<        6*: 1870:      while (__x != 0)
<         -: 1871:	{
<     #####: 1872:	  _M_erase(_S_right(__x));
<     #####: 1873:	  _Link_type __y = _S_left(__x);
<     #####: 1874:	  _M_drop_node(__x);
<     #####: 1875:	  __x = __y;
<         -: 1876:	}
<         6: 1877:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E:
<        30: 1866:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1867:    _M_erase(_Link_type __x)
<         -: 1868:    {
<         -: 1869:      // Erase without rebalancing.
<        30: 1870:      while (__x != 0)
<         -: 1871:	{
<         6: 1872:	  _M_erase(_S_right(__x));
<         6: 1873:	  _Link_type __y = _S_left(__x);
<         6: 1874:	  _M_drop_node(__x);
<         6: 1875:	  __x = __y;
<         -: 1876:	}
<        24: 1877:    }
< ------------------
---
>         -: 1864:           typename _Compare, typename _Alloc>
>         -: 1865:    typename _Rb_tree<_Key, _Val, _KeyOfValue,
>         -: 1866:		      _Compare, _Alloc>::iterator
>     #####: 1867:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 1868:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
>         -: 1869:		   const _Key& __k)
>         -: 1870:    {
>     #####: 1871:      while (__x != 0)
>     #####: 1872:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
>     #####: 1873:	  __y = __x, __x = _S_left(__x);
>         -: 1874:	else
>     #####: 1875:	  __x = _S_right(__x);
>     #####: 1876:      return iterator(__y);
>         -: 1877:    }
8062c1882
<         -: 1880:	   typename _Compare, typename _Alloc>
---
>         -: 1880:           typename _Compare, typename _Alloc>
8064,8077c1884
<         -: 1882:		      _Compare, _Alloc>::iterator
<     1356*: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<     1356*: 1887:      while (__x != 0)
<      481*: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<      187*: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<      294*: 1891:	  __x = _S_right(__x);
<      875*: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS7_EPSt18_Rb_tree_node_baseRS1_:
---
>         -: 1882:		      _Compare, _Alloc>::const_iterator
8079,8080c1886,1887
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
---
>         -: 1884:    _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
>         -: 1885:		   const _Key& __k) const
8087c1894
<     #####: 1892:      return iterator(__y);
---
>     #####: 1892:      return const_iterator(__y);
8089,8388d1895
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE14_M_lower_boundEPSt13_Rb_tree_nodeISI_EPSt18_Rb_tree_node_baseRS4_:
<     #####: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<     #####: 1887:      while (__x != 0)
<     #####: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<     #####: 1891:	  __x = _S_right(__x);
<     #####: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE14_M_lower_boundEPSt13_Rb_tree_nodeISC_EPSt18_Rb_tree_node_baseRS4_:
<     #####: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<     #####: 1887:      while (__x != 0)
<     #####: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<     #####: 1891:	  __x = _S_right(__x);
<     #####: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_EPSt18_Rb_tree_node_baseRS4_:
<     #####: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<     #####: 1887:      while (__x != 0)
<     #####: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<     #####: 1891:	  __x = _S_right(__x);
<     #####: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE14_M_lower_boundEPSt13_Rb_tree_nodeISD_EPSt18_Rb_tree_node_baseRS7_:
<       267: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<       267: 1887:      while (__x != 0)
<        89: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<        89: 1891:	  __x = _S_right(__x);
<       178: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_:
<     #####: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<     #####: 1887:      while (__x != 0)
<     #####: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<     #####: 1891:	  __x = _S_right(__x);
<     #####: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE14_M_lower_boundEPSt13_Rb_tree_nodeISD_EPSt18_Rb_tree_node_baseRS7_:
<       297: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<       297: 1887:      while (__x != 0)
<        89: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<        89: 1891:	  __x = _S_right(__x);
<       208: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE14_M_lower_boundEPSt13_Rb_tree_nodeISD_EPSt18_Rb_tree_node_baseRS7_:
<        89: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<       89*: 1887:      while (__x != 0)
<     #####: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<     #####: 1891:	  __x = _S_right(__x);
<        89: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE14_M_lower_boundEPSt13_Rb_tree_nodeISB_EPSt18_Rb_tree_node_baseRS5_:
<     #####: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<     #####: 1887:      while (__x != 0)
<     #####: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<     #####: 1891:	  __x = _S_right(__x);
<     #####: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS3_EPSt18_Rb_tree_node_baseRKS3_:
<     #####: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<     #####: 1887:      while (__x != 0)
<     #####: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<     #####: 1891:	  __x = _S_right(__x);
<     #####: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS4_:
<        33: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<        33: 1887:      while (__x != 0)
<        15: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<        11: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<         4: 1891:	  __x = _S_right(__x);
<        18: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS4_:
<     #####: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<     #####: 1887:      while (__x != 0)
<     #####: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<     #####: 1891:	  __x = _S_right(__x);
<     #####: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRKS2_:
<     #####: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<     #####: 1887:      while (__x != 0)
<     #####: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<     #####: 1891:	  __x = _S_right(__x);
<     #####: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS4_:
<        72: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<        72: 1887:      while (__x != 0)
<        27: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<        27: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<     #####: 1891:	  __x = _S_right(__x);
<        45: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS4_:
<        78: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<        78: 1887:      while (__x != 0)
<        34: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<        26: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<         8: 1891:	  __x = _S_right(__x);
<        44: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS7_EPSt18_Rb_tree_node_baseRS1_:
<     #####: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<     #####: 1887:      while (__x != 0)
<     #####: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<     #####: 1891:	  __x = _S_right(__x);
<     #####: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS4_:
<       228: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<       228: 1887:      while (__x != 0)
<       132: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<        73: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<        59: 1891:	  __x = _S_right(__x);
<        96: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS4_:
<        24: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<        24: 1887:      while (__x != 0)
<        15: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<        11: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<         4: 1891:	  __x = _S_right(__x);
<         9: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS4_:
<     #####: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<     #####: 1887:      while (__x != 0)
<     #####: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<     #####: 1891:	  __x = _S_right(__x);
<     #####: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS7_EPSt18_Rb_tree_node_baseRS1_:
<       134: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<       134: 1887:      while (__x != 0)
<        21: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<        12: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<         9: 1891:	  __x = _S_right(__x);
<       113: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS4_:
<     #####: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<     #####: 1887:      while (__x != 0)
<     #####: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<     #####: 1891:	  __x = _S_right(__x);
<     #####: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS4_:
<     #####: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<     #####: 1887:      while (__x != 0)
<     #####: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<     #####: 1891:	  __x = _S_right(__x);
<     #####: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS4_:
<       116: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<       116: 1887:      while (__x != 0)
<        59: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<        27: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<        32: 1891:	  __x = _S_right(__x);
<        57: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS4_:
<        18: 1883:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1884:    _M_lower_bound(_Link_type __x, _Base_ptr __y,
<         -: 1885:		   const _Key& __k)
<         -: 1886:    {
<       18*: 1887:      while (__x != 0)
<     #####: 1888:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1889:	  __y = __x, __x = _S_left(__x);
<         -: 1890:	else
<     #####: 1891:	  __x = _S_right(__x);
<        18: 1892:      return iterator(__y);
<         -: 1893:    }
< ------------------
8391c1898
<         -: 1896:	   typename _Compare, typename _Alloc>
---
>         -: 1896:           typename _Compare, typename _Alloc>
8393,8435c1900,1903
<         -: 1898:		      _Compare, _Alloc>::const_iterator
<     1014*: 1899:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1900:    _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -: 1901:		   const _Key& __k) const
<         -: 1902:    {
<     1014*: 1903:      while (__x != 0)
<      467*: 1904:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<      274*: 1905:	  __y = __x, __x = _S_left(__x);
<         -: 1906:	else
<      193*: 1907:	  __x = _S_right(__x);
<      547*: 1908:      return const_iterator(__y);
<         -: 1909:    }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_EPKSt18_Rb_tree_node_baseRKS2_:
<     #####: 1899:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1900:    _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -: 1901:		   const _Key& __k) const
<         -: 1902:    {
<     #####: 1903:      while (__x != 0)
<     #####: 1904:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1905:	  __y = __x, __x = _S_left(__x);
<         -: 1906:	else
<     #####: 1907:	  __x = _S_right(__x);
<     #####: 1908:      return const_iterator(__y);
<         -: 1909:    }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS8_EPKSt18_Rb_tree_node_baseRS4_:
<     #####: 1899:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1900:    _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -: 1901:		   const _Key& __k) const
<         -: 1902:    {
<     #####: 1903:      while (__x != 0)
<     #####: 1904:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1905:	  __y = __x, __x = _S_left(__x);
<         -: 1906:	else
<     #####: 1907:	  __x = _S_right(__x);
<     #####: 1908:      return const_iterator(__y);
<         -: 1909:    }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS4_:
<     #####: 1899:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1900:    _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -: 1901:		   const _Key& __k) const
---
>         -: 1898:		      _Compare, _Alloc>::iterator
>         -: 1899:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 1900:    _M_upper_bound(_Link_type __x, _Base_ptr __y,
>         -: 1901:		   const _Key& __k)
8437,8439c1905,1907
<     #####: 1903:      while (__x != 0)
<     #####: 1904:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1905:	  __y = __x, __x = _S_left(__x);
---
>         -: 1903:      while (__x != 0)
>         -: 1904:	if (_M_impl._M_key_compare(__k, _S_key(__x)))
>         -: 1905:	  __y = __x, __x = _S_left(__x);
8441,8442c1909,1910
<     #####: 1907:	  __x = _S_right(__x);
<     #####: 1908:      return const_iterator(__y);
---
>         -: 1907:	  __x = _S_right(__x);
>         -: 1908:      return iterator(__y);
8444,8600d1911
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS8_EPKSt18_Rb_tree_node_baseRS4_:
<     #####: 1899:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1900:    _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -: 1901:		   const _Key& __k) const
<         -: 1902:    {
<     #####: 1903:      while (__x != 0)
<     #####: 1904:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1905:	  __y = __x, __x = _S_left(__x);
<         -: 1906:	else
<     #####: 1907:	  __x = _S_right(__x);
<     #####: 1908:      return const_iterator(__y);
<         -: 1909:    }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS8_EPKSt18_Rb_tree_node_baseRS4_:
<     #####: 1899:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1900:    _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -: 1901:		   const _Key& __k) const
<         -: 1902:    {
<     #####: 1903:      while (__x != 0)
<     #####: 1904:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1905:	  __y = __x, __x = _S_left(__x);
<         -: 1906:	else
<     #####: 1907:	  __x = _S_right(__x);
<     #####: 1908:      return const_iterator(__y);
<         -: 1909:    }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_EPKSt18_Rb_tree_node_baseRKS2_:
<     #####: 1899:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1900:    _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -: 1901:		   const _Key& __k) const
<         -: 1902:    {
<     #####: 1903:      while (__x != 0)
<     #####: 1904:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1905:	  __y = __x, __x = _S_left(__x);
<         -: 1906:	else
<     #####: 1907:	  __x = _S_right(__x);
<     #####: 1908:      return const_iterator(__y);
<         -: 1909:    }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS8_EPKSt18_Rb_tree_node_baseRS4_:
<     #####: 1899:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1900:    _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -: 1901:		   const _Key& __k) const
<         -: 1902:    {
<     #####: 1903:      while (__x != 0)
<     #####: 1904:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1905:	  __y = __x, __x = _S_left(__x);
<         -: 1906:	else
<     #####: 1907:	  __x = _S_right(__x);
<     #####: 1908:      return const_iterator(__y);
<         -: 1909:    }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS8_EPKSt18_Rb_tree_node_baseRS4_:
<        30: 1899:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1900:    _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -: 1901:		   const _Key& __k) const
<         -: 1902:    {
<        30: 1903:      while (__x != 0)
<        20: 1904:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<         6: 1905:	  __y = __x, __x = _S_left(__x);
<         -: 1906:	else
<        14: 1907:	  __x = _S_right(__x);
<        10: 1908:      return const_iterator(__y);
<         -: 1909:    }
< ------------------
< _ZNKSt8_Rb_treeIiSt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEESt10_Select1stIS7_ESt4lessIiESaIS7_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS7_EPKSt18_Rb_tree_node_baseRS1_:
<     #####: 1899:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1900:    _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -: 1901:		   const _Key& __k) const
<         -: 1902:    {
<     #####: 1903:      while (__x != 0)
<     #####: 1904:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1905:	  __y = __x, __x = _S_left(__x);
<         -: 1906:	else
<     #####: 1907:	  __x = _S_right(__x);
<     #####: 1908:      return const_iterator(__y);
<         -: 1909:    }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRKS3_:
<     #####: 1899:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1900:    _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -: 1901:		   const _Key& __k) const
<         -: 1902:    {
<     #####: 1903:      while (__x != 0)
<     #####: 1904:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1905:	  __y = __x, __x = _S_left(__x);
<         -: 1906:	else
<     #####: 1907:	  __x = _S_right(__x);
<     #####: 1908:      return const_iterator(__y);
<         -: 1909:    }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE14_M_lower_boundEPKSt13_Rb_tree_nodeISB_EPKSt18_Rb_tree_node_baseRS5_:
<     #####: 1899:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1900:    _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -: 1901:		   const _Key& __k) const
<         -: 1902:    {
<     #####: 1903:      while (__x != 0)
<     #####: 1904:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1905:	  __y = __x, __x = _S_left(__x);
<         -: 1906:	else
<     #####: 1907:	  __x = _S_right(__x);
<     #####: 1908:      return const_iterator(__y);
<         -: 1909:    }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE14_M_lower_boundEPKSt13_Rb_tree_nodeISD_EPKSt18_Rb_tree_node_baseRS7_:
<       358: 1899:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1900:    _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -: 1901:		   const _Key& __k) const
<         -: 1902:    {
<       358: 1903:      while (__x != 0)
<       178: 1904:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<       178: 1905:	  __y = __x, __x = _S_left(__x);
<         -: 1906:	else
<     #####: 1907:	  __x = _S_right(__x);
<       180: 1908:      return const_iterator(__y);
<         -: 1909:    }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE14_M_lower_boundEPKSt13_Rb_tree_nodeISD_EPKSt18_Rb_tree_node_baseRS7_:
<       359: 1899:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1900:    _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -: 1901:		   const _Key& __k) const
<         -: 1902:    {
<       359: 1903:      while (__x != 0)
<       180: 1904:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<        90: 1905:	  __y = __x, __x = _S_left(__x);
<         -: 1906:	else
<        90: 1907:	  __x = _S_right(__x);
<       179: 1908:      return const_iterator(__y);
<         -: 1909:    }
< ------------------
< _ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE14_M_lower_boundEPKSt13_Rb_tree_nodeISD_EPKSt18_Rb_tree_node_baseRS7_:
<       267: 1899:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1900:    _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -: 1901:		   const _Key& __k) const
<         -: 1902:    {
<       267: 1903:      while (__x != 0)
<        89: 1904:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1905:	  __y = __x, __x = _S_left(__x);
<         -: 1906:	else
<        89: 1907:	  __x = _S_right(__x);
<       178: 1908:      return const_iterator(__y);
<         -: 1909:    }
< ------------------
< _ZNKSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE14_M_lower_boundEPKSt13_Rb_tree_nodeISC_EPKSt18_Rb_tree_node_baseRS4_:
<     #####: 1899:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1900:    _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -: 1901:		   const _Key& __k) const
<         -: 1902:    {
<     #####: 1903:      while (__x != 0)
<     #####: 1904:	if (!_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1905:	  __y = __x, __x = _S_left(__x);
<         -: 1906:	else
<     #####: 1907:	  __x = _S_right(__x);
<     #####: 1908:      return const_iterator(__y);
<         -: 1909:    }
< ------------------
8603c1914
<         -: 1912:	   typename _Compare, typename _Alloc>
---
>         -: 1912:           typename _Compare, typename _Alloc>
8605,8608c1916,1919
<         -: 1914:		      _Compare, _Alloc>::iterator
<       54*: 1915:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1916:    _M_upper_bound(_Link_type __x, _Base_ptr __y,
<         -: 1917:		   const _Key& __k)
---
>         -: 1914:		      _Compare, _Alloc>::const_iterator
>         -: 1915:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 1916:    _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
>         -: 1917:		   const _Key& __k) const
8610,8612c1921,1923
<       54*: 1919:      while (__x != 0)
<        8*: 1920:	if (_M_impl._M_key_compare(__k, _S_key(__x)))
<        8*: 1921:	  __y = __x, __x = _S_left(__x);
---
>         -: 1919:      while (__x != 0)
>         -: 1920:	if (_M_impl._M_key_compare(__k, _S_key(__x)))
>         -: 1921:	  __y = __x, __x = _S_left(__x);
8614,8615c1925,1926
<     #####: 1923:	  __x = _S_right(__x);
<       46*: 1924:      return iterator(__y);
---
>         -: 1923:	  __x = _S_right(__x);
>         -: 1924:      return const_iterator(__y);
8617,8760d1927
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS4_:
<     #####: 1915:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1916:    _M_upper_bound(_Link_type __x, _Base_ptr __y,
<         -: 1917:		   const _Key& __k)
<         -: 1918:    {
<     #####: 1919:      while (__x != 0)
<     #####: 1920:	if (_M_impl._M_key_compare(__k, _S_key(__x)))
<     #####: 1921:	  __y = __x, __x = _S_left(__x);
<         -: 1922:	else
<     #####: 1923:	  __x = _S_right(__x);
<     #####: 1924:      return iterator(__y);
<         -: 1925:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRKS2_:
<     #####: 1915:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1916:    _M_upper_bound(_Link_type __x, _Base_ptr __y,
<         -: 1917:		   const _Key& __k)
<         -: 1918:    {
<     #####: 1919:      while (__x != 0)
<     #####: 1920:	if (_M_impl._M_key_compare(__k, _S_key(__x)))
<     #####: 1921:	  __y = __x, __x = _S_left(__x);
<         -: 1922:	else
<     #####: 1923:	  __x = _S_right(__x);
<     #####: 1924:      return iterator(__y);
<         -: 1925:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS4_:
<        20: 1915:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1916:    _M_upper_bound(_Link_type __x, _Base_ptr __y,
<         -: 1917:		   const _Key& __k)
<         -: 1918:    {
<        20: 1919:      while (__x != 0)
<         2: 1920:	if (_M_impl._M_key_compare(__k, _S_key(__x)))
<         2: 1921:	  __y = __x, __x = _S_left(__x);
<         -: 1922:	else
<     #####: 1923:	  __x = _S_right(__x);
<        18: 1924:      return iterator(__y);
<         -: 1925:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS4_:
<     #####: 1915:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1916:    _M_upper_bound(_Link_type __x, _Base_ptr __y,
<         -: 1917:		   const _Key& __k)
<         -: 1918:    {
<     #####: 1919:      while (__x != 0)
<     #####: 1920:	if (_M_impl._M_key_compare(__k, _S_key(__x)))
<     #####: 1921:	  __y = __x, __x = _S_left(__x);
<         -: 1922:	else
<     #####: 1923:	  __x = _S_right(__x);
<     #####: 1924:      return iterator(__y);
<         -: 1925:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS7_EPSt18_Rb_tree_node_baseRS1_:
<        14: 1915:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1916:    _M_upper_bound(_Link_type __x, _Base_ptr __y,
<         -: 1917:		   const _Key& __k)
<         -: 1918:    {
<        14: 1919:      while (__x != 0)
<         4: 1920:	if (_M_impl._M_key_compare(__k, _S_key(__x)))
<         4: 1921:	  __y = __x, __x = _S_left(__x);
<         -: 1922:	else
<     #####: 1923:	  __x = _S_right(__x);
<        10: 1924:      return iterator(__y);
<         -: 1925:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS4_:
<     #####: 1915:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1916:    _M_upper_bound(_Link_type __x, _Base_ptr __y,
<         -: 1917:		   const _Key& __k)
<         -: 1918:    {
<     #####: 1919:      while (__x != 0)
<     #####: 1920:	if (_M_impl._M_key_compare(__k, _S_key(__x)))
<     #####: 1921:	  __y = __x, __x = _S_left(__x);
<         -: 1922:	else
<     #####: 1923:	  __x = _S_right(__x);
<     #####: 1924:      return iterator(__y);
<         -: 1925:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS4_:
<        20: 1915:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1916:    _M_upper_bound(_Link_type __x, _Base_ptr __y,
<         -: 1917:		   const _Key& __k)
<         -: 1918:    {
<        20: 1919:      while (__x != 0)
<         2: 1920:	if (_M_impl._M_key_compare(__k, _S_key(__x)))
<         2: 1921:	  __y = __x, __x = _S_left(__x);
<         -: 1922:	else
<     #####: 1923:	  __x = _S_right(__x);
<        18: 1924:      return iterator(__y);
<         -: 1925:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS4_:
<     #####: 1915:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1916:    _M_upper_bound(_Link_type __x, _Base_ptr __y,
<         -: 1917:		   const _Key& __k)
<         -: 1918:    {
<     #####: 1919:      while (__x != 0)
<     #####: 1920:	if (_M_impl._M_key_compare(__k, _S_key(__x)))
<     #####: 1921:	  __y = __x, __x = _S_left(__x);
<         -: 1922:	else
<     #####: 1923:	  __x = _S_right(__x);
<     #####: 1924:      return iterator(__y);
<         -: 1925:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE14_M_upper_boundEPSt13_Rb_tree_nodeISB_EPSt18_Rb_tree_node_baseRS5_:
<     #####: 1915:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1916:    _M_upper_bound(_Link_type __x, _Base_ptr __y,
<         -: 1917:		   const _Key& __k)
<         -: 1918:    {
<     #####: 1919:      while (__x != 0)
<     #####: 1920:	if (_M_impl._M_key_compare(__k, _S_key(__x)))
<     #####: 1921:	  __y = __x, __x = _S_left(__x);
<         -: 1922:	else
<     #####: 1923:	  __x = _S_right(__x);
<     #####: 1924:      return iterator(__y);
<         -: 1925:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS3_EPSt18_Rb_tree_node_baseRKS3_:
<     #####: 1915:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1916:    _M_upper_bound(_Link_type __x, _Base_ptr __y,
<         -: 1917:		   const _Key& __k)
<         -: 1918:    {
<     #####: 1919:      while (__x != 0)
<     #####: 1920:	if (_M_impl._M_key_compare(__k, _S_key(__x)))
<     #####: 1921:	  __y = __x, __x = _S_left(__x);
<         -: 1922:	else
<     #####: 1923:	  __x = _S_right(__x);
<     #####: 1924:      return iterator(__y);
<         -: 1925:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS6_EPSt18_Rb_tree_node_baseRS4_:
<     #####: 1915:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1916:    _M_upper_bound(_Link_type __x, _Base_ptr __y,
<         -: 1917:		   const _Key& __k)
<         -: 1918:    {
<     #####: 1919:      while (__x != 0)
<     #####: 1920:	if (_M_impl._M_key_compare(__k, _S_key(__x)))
<     #####: 1921:	  __y = __x, __x = _S_left(__x);
<         -: 1922:	else
<     #####: 1923:	  __x = _S_right(__x);
<     #####: 1924:      return iterator(__y);
<         -: 1925:    }
< ------------------
8763,9134c1930,2003
<         -: 1928:	   typename _Compare, typename _Alloc>
<         -: 1929:    typename _Rb_tree<_Key, _Val, _KeyOfValue,
<         -: 1930:		      _Compare, _Alloc>::const_iterator
<         -: 1931:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1932:    _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
<         -: 1933:		   const _Key& __k) const
<         -: 1934:    {
<         -: 1935:      while (__x != 0)
<         -: 1936:	if (_M_impl._M_key_compare(__k, _S_key(__x)))
<         -: 1937:	  __y = __x, __x = _S_left(__x);
<         -: 1938:	else
<         -: 1939:	  __x = _S_right(__x);
<         -: 1940:      return const_iterator(__y);
<         -: 1941:    }
<         -: 1942:
<         -: 1943:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1944:	   typename _Compare, typename _Alloc>
<         -: 1945:    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
<         -: 1946:			   _Compare, _Alloc>::iterator,
<         -: 1947:	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
<         -: 1948:			   _Compare, _Alloc>::iterator>
<       74*: 1949:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1950:    equal_range(const _Key& __k)
<         -: 1951:    {
<       74*: 1952:      _Link_type __x = _M_begin();
<       74*: 1953:      _Base_ptr __y = _M_end();
<       86*: 1954:      while (__x != 0)
<         -: 1955:	{
<       58*: 1956:	  if (_M_impl._M_key_compare(_S_key(__x), __k))
<        4*: 1957:	    __x = _S_right(__x);
<       54*: 1958:	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
<        8*: 1959:	    __y = __x, __x = _S_left(__x);
<         -: 1960:	  else
<         -: 1961:	    {
<       46*: 1962:	      _Link_type __xu(__x);
<       46*: 1963:	      _Base_ptr __yu(__y);
<       46*: 1964:	      __y = __x, __x = _S_left(__x);
<       46*: 1965:	      __xu = _S_right(__xu);
<       46*: 1966:	      return pair<iterator,
<         -: 1967:			  iterator>(_M_lower_bound(__x, __y, __k),
<       46*: 1968:				    _M_upper_bound(__xu, __yu, __k));
<         -: 1969:	    }
<         -: 1970:	}
<         -: 1971:      return pair<iterator, iterator>(iterator(__y),
<       28*: 1972:				      iterator(__y));
<         -: 1973:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11equal_rangeERS4_:
<     #####: 1949:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1950:    equal_range(const _Key& __k)
<         -: 1951:    {
<     #####: 1952:      _Link_type __x = _M_begin();
<     #####: 1953:      _Base_ptr __y = _M_end();
<     #####: 1954:      while (__x != 0)
<         -: 1955:	{
<     #####: 1956:	  if (_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1957:	    __x = _S_right(__x);
<     #####: 1958:	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
<     #####: 1959:	    __y = __x, __x = _S_left(__x);
<         -: 1960:	  else
<         -: 1961:	    {
<     #####: 1962:	      _Link_type __xu(__x);
<     #####: 1963:	      _Base_ptr __yu(__y);
<     #####: 1964:	      __y = __x, __x = _S_left(__x);
<     #####: 1965:	      __xu = _S_right(__xu);
<     #####: 1966:	      return pair<iterator,
<         -: 1967:			  iterator>(_M_lower_bound(__x, __y, __k),
<     #####: 1968:				    _M_upper_bound(__xu, __yu, __k));
<         -: 1969:	    }
<         -: 1970:	}
<         -: 1971:      return pair<iterator, iterator>(iterator(__y),
<     #####: 1972:				      iterator(__y));
<         -: 1973:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE11equal_rangeERKS2_:
<     #####: 1949:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1950:    equal_range(const _Key& __k)
<         -: 1951:    {
<     #####: 1952:      _Link_type __x = _M_begin();
<     #####: 1953:      _Base_ptr __y = _M_end();
<     #####: 1954:      while (__x != 0)
<         -: 1955:	{
<     #####: 1956:	  if (_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1957:	    __x = _S_right(__x);
<     #####: 1958:	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
<     #####: 1959:	    __y = __x, __x = _S_left(__x);
<         -: 1960:	  else
<         -: 1961:	    {
<     #####: 1962:	      _Link_type __xu(__x);
<     #####: 1963:	      _Base_ptr __yu(__y);
<     #####: 1964:	      __y = __x, __x = _S_left(__x);
<     #####: 1965:	      __xu = _S_right(__xu);
<     #####: 1966:	      return pair<iterator,
<         -: 1967:			  iterator>(_M_lower_bound(__x, __y, __k),
<     #####: 1968:				    _M_upper_bound(__xu, __yu, __k));
<         -: 1969:	    }
<         -: 1970:	}
<         -: 1971:      return pair<iterator, iterator>(iterator(__y),
<     #####: 1972:				      iterator(__y));
<         -: 1973:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE11equal_rangeERS4_:
<        18: 1949:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1950:    equal_range(const _Key& __k)
<         -: 1951:    {
<        18: 1952:      _Link_type __x = _M_begin();
<        18: 1953:      _Base_ptr __y = _M_end();
<        24: 1954:      while (__x != 0)
<         -: 1955:	{
<        24: 1956:	  if (_M_impl._M_key_compare(_S_key(__x), __k))
<         2: 1957:	    __x = _S_right(__x);
<        22: 1958:	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
<         4: 1959:	    __y = __x, __x = _S_left(__x);
<         -: 1960:	  else
<         -: 1961:	    {
<        18: 1962:	      _Link_type __xu(__x);
<        18: 1963:	      _Base_ptr __yu(__y);
<        18: 1964:	      __y = __x, __x = _S_left(__x);
<        18: 1965:	      __xu = _S_right(__xu);
<        18: 1966:	      return pair<iterator,
<         -: 1967:			  iterator>(_M_lower_bound(__x, __y, __k),
<        18: 1968:				    _M_upper_bound(__xu, __yu, __k));
<         -: 1969:	    }
<         -: 1970:	}
<         -: 1971:      return pair<iterator, iterator>(iterator(__y),
<     #####: 1972:				      iterator(__y));
<         -: 1973:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11equal_rangeERS4_:
<     #####: 1949:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1950:    equal_range(const _Key& __k)
<         -: 1951:    {
<     #####: 1952:      _Link_type __x = _M_begin();
<     #####: 1953:      _Base_ptr __y = _M_end();
<     #####: 1954:      while (__x != 0)
<         -: 1955:	{
<     #####: 1956:	  if (_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1957:	    __x = _S_right(__x);
<     #####: 1958:	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
<     #####: 1959:	    __y = __x, __x = _S_left(__x);
<         -: 1960:	  else
<         -: 1961:	    {
<     #####: 1962:	      _Link_type __xu(__x);
<     #####: 1963:	      _Base_ptr __yu(__y);
<     #####: 1964:	      __y = __x, __x = _S_left(__x);
<     #####: 1965:	      __xu = _S_right(__xu);
<     #####: 1966:	      return pair<iterator,
<         -: 1967:			  iterator>(_M_lower_bound(__x, __y, __k),
<     #####: 1968:				    _M_upper_bound(__xu, __yu, __k));
<         -: 1969:	    }
<         -: 1970:	}
<         -: 1971:      return pair<iterator, iterator>(iterator(__y),
<     #####: 1972:				      iterator(__y));
<         -: 1973:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE11equal_rangeERS1_:
<        10: 1949:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1950:    equal_range(const _Key& __k)
<         -: 1951:    {
<        10: 1952:      _Link_type __x = _M_begin();
<        10: 1953:      _Base_ptr __y = _M_end();
<       10*: 1954:      while (__x != 0)
<         -: 1955:	{
<        10: 1956:	  if (_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1957:	    __x = _S_right(__x);
<        10: 1958:	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
<     #####: 1959:	    __y = __x, __x = _S_left(__x);
<         -: 1960:	  else
<         -: 1961:	    {
<        10: 1962:	      _Link_type __xu(__x);
<        10: 1963:	      _Base_ptr __yu(__y);
<        10: 1964:	      __y = __x, __x = _S_left(__x);
<        10: 1965:	      __xu = _S_right(__xu);
<        10: 1966:	      return pair<iterator,
<         -: 1967:			  iterator>(_M_lower_bound(__x, __y, __k),
<        10: 1968:				    _M_upper_bound(__xu, __yu, __k));
<         -: 1969:	    }
<         -: 1970:	}
<         -: 1971:      return pair<iterator, iterator>(iterator(__y),
<     #####: 1972:				      iterator(__y));
<         -: 1973:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11equal_rangeERS4_:
<     #####: 1949:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1950:    equal_range(const _Key& __k)
<         -: 1951:    {
<     #####: 1952:      _Link_type __x = _M_begin();
<     #####: 1953:      _Base_ptr __y = _M_end();
<     #####: 1954:      while (__x != 0)
<         -: 1955:	{
<     #####: 1956:	  if (_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1957:	    __x = _S_right(__x);
<     #####: 1958:	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
<     #####: 1959:	    __y = __x, __x = _S_left(__x);
<         -: 1960:	  else
<         -: 1961:	    {
<     #####: 1962:	      _Link_type __xu(__x);
<     #####: 1963:	      _Base_ptr __yu(__y);
<     #####: 1964:	      __y = __x, __x = _S_left(__x);
<     #####: 1965:	      __xu = _S_right(__xu);
<     #####: 1966:	      return pair<iterator,
<         -: 1967:			  iterator>(_M_lower_bound(__x, __y, __k),
<     #####: 1968:				    _M_upper_bound(__xu, __yu, __k));
<         -: 1969:	    }
<         -: 1970:	}
<         -: 1971:      return pair<iterator, iterator>(iterator(__y),
<     #####: 1972:				      iterator(__y));
<         -: 1973:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE11equal_rangeERS4_:
<        18: 1949:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1950:    equal_range(const _Key& __k)
<         -: 1951:    {
<        18: 1952:      _Link_type __x = _M_begin();
<        18: 1953:      _Base_ptr __y = _M_end();
<        24: 1954:      while (__x != 0)
<         -: 1955:	{
<        24: 1956:	  if (_M_impl._M_key_compare(_S_key(__x), __k))
<         2: 1957:	    __x = _S_right(__x);
<        22: 1958:	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
<         4: 1959:	    __y = __x, __x = _S_left(__x);
<         -: 1960:	  else
<         -: 1961:	    {
<        18: 1962:	      _Link_type __xu(__x);
<        18: 1963:	      _Base_ptr __yu(__y);
<        18: 1964:	      __y = __x, __x = _S_left(__x);
<        18: 1965:	      __xu = _S_right(__xu);
<        18: 1966:	      return pair<iterator,
<         -: 1967:			  iterator>(_M_lower_bound(__x, __y, __k),
<        18: 1968:				    _M_upper_bound(__xu, __yu, __k));
<         -: 1969:	    }
<         -: 1970:	}
<         -: 1971:      return pair<iterator, iterator>(iterator(__y),
<     #####: 1972:				      iterator(__y));
<         -: 1973:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE11equal_rangeERS4_:
<        28: 1949:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1950:    equal_range(const _Key& __k)
<         -: 1951:    {
<        28: 1952:      _Link_type __x = _M_begin();
<        28: 1953:      _Base_ptr __y = _M_end();
<       28*: 1954:      while (__x != 0)
<         -: 1955:	{
<     #####: 1956:	  if (_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1957:	    __x = _S_right(__x);
<     #####: 1958:	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
<     #####: 1959:	    __y = __x, __x = _S_left(__x);
<         -: 1960:	  else
<         -: 1961:	    {
<     #####: 1962:	      _Link_type __xu(__x);
<     #####: 1963:	      _Base_ptr __yu(__y);
<     #####: 1964:	      __y = __x, __x = _S_left(__x);
<     #####: 1965:	      __xu = _S_right(__xu);
<     #####: 1966:	      return pair<iterator,
<         -: 1967:			  iterator>(_M_lower_bound(__x, __y, __k),
<     #####: 1968:				    _M_upper_bound(__xu, __yu, __k));
<         -: 1969:	    }
<         -: 1970:	}
<         -: 1971:      return pair<iterator, iterator>(iterator(__y),
<        28: 1972:				      iterator(__y));
<         -: 1973:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE11equal_rangeERS5_:
<     #####: 1949:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1950:    equal_range(const _Key& __k)
<         -: 1951:    {
<     #####: 1952:      _Link_type __x = _M_begin();
<     #####: 1953:      _Base_ptr __y = _M_end();
<     #####: 1954:      while (__x != 0)
<         -: 1955:	{
<     #####: 1956:	  if (_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1957:	    __x = _S_right(__x);
<     #####: 1958:	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
<     #####: 1959:	    __y = __x, __x = _S_left(__x);
<         -: 1960:	  else
<         -: 1961:	    {
<     #####: 1962:	      _Link_type __xu(__x);
<     #####: 1963:	      _Base_ptr __yu(__y);
<     #####: 1964:	      __y = __x, __x = _S_left(__x);
<     #####: 1965:	      __xu = _S_right(__xu);
<     #####: 1966:	      return pair<iterator,
<         -: 1967:			  iterator>(_M_lower_bound(__x, __y, __k),
<     #####: 1968:				    _M_upper_bound(__xu, __yu, __k));
<         -: 1969:	    }
<         -: 1970:	}
<         -: 1971:      return pair<iterator, iterator>(iterator(__y),
<     #####: 1972:				      iterator(__y));
<         -: 1973:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE11equal_rangeERKS3_:
<     #####: 1949:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1950:    equal_range(const _Key& __k)
<         -: 1951:    {
<     #####: 1952:      _Link_type __x = _M_begin();
<     #####: 1953:      _Base_ptr __y = _M_end();
<     #####: 1954:      while (__x != 0)
<         -: 1955:	{
<     #####: 1956:	  if (_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1957:	    __x = _S_right(__x);
<     #####: 1958:	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
<     #####: 1959:	    __y = __x, __x = _S_left(__x);
<         -: 1960:	  else
<         -: 1961:	    {
<     #####: 1962:	      _Link_type __xu(__x);
<     #####: 1963:	      _Base_ptr __yu(__y);
<     #####: 1964:	      __y = __x, __x = _S_left(__x);
<     #####: 1965:	      __xu = _S_right(__xu);
<     #####: 1966:	      return pair<iterator,
<         -: 1967:			  iterator>(_M_lower_bound(__x, __y, __k),
<     #####: 1968:				    _M_upper_bound(__xu, __yu, __k));
<         -: 1969:	    }
<         -: 1970:	}
<         -: 1971:      return pair<iterator, iterator>(iterator(__y),
<     #####: 1972:				      iterator(__y));
<         -: 1973:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE11equal_rangeERS4_:
<     #####: 1949:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1950:    equal_range(const _Key& __k)
<         -: 1951:    {
<     #####: 1952:      _Link_type __x = _M_begin();
<     #####: 1953:      _Base_ptr __y = _M_end();
<     #####: 1954:      while (__x != 0)
<         -: 1955:	{
<     #####: 1956:	  if (_M_impl._M_key_compare(_S_key(__x), __k))
<     #####: 1957:	    __x = _S_right(__x);
<     #####: 1958:	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
<     #####: 1959:	    __y = __x, __x = _S_left(__x);
<         -: 1960:	  else
<         -: 1961:	    {
<     #####: 1962:	      _Link_type __xu(__x);
<     #####: 1963:	      _Base_ptr __yu(__y);
<     #####: 1964:	      __y = __x, __x = _S_left(__x);
<     #####: 1965:	      __xu = _S_right(__xu);
<     #####: 1966:	      return pair<iterator,
<         -: 1967:			  iterator>(_M_lower_bound(__x, __y, __k),
<     #####: 1968:				    _M_upper_bound(__xu, __yu, __k));
<         -: 1969:	    }
<         -: 1970:	}
<         -: 1971:      return pair<iterator, iterator>(iterator(__y),
<     #####: 1972:				      iterator(__y));
<         -: 1973:    }
< ------------------
<         -: 1974:
<         -: 1975:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 1976:	   typename _Compare, typename _Alloc>
<         -: 1977:    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
<         -: 1978:			   _Compare, _Alloc>::const_iterator,
<         -: 1979:	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
<         -: 1980:			   _Compare, _Alloc>::const_iterator>
<         -: 1981:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 1982:    equal_range(const _Key& __k) const
<         -: 1983:    {
<         -: 1984:      _Const_Link_type __x = _M_begin();
<         -: 1985:      _Const_Base_ptr __y = _M_end();
<         -: 1986:      while (__x != 0)
<         -: 1987:	{
<         -: 1988:	  if (_M_impl._M_key_compare(_S_key(__x), __k))
<         -: 1989:	    __x = _S_right(__x);
<         -: 1990:	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
<         -: 1991:	    __y = __x, __x = _S_left(__x);
<         -: 1992:	  else
<         -: 1993:	    {
<         -: 1994:	      _Const_Link_type __xu(__x);
<         -: 1995:	      _Const_Base_ptr __yu(__y);
<         -: 1996:	      __y = __x, __x = _S_left(__x);
<         -: 1997:	      __xu = _S_right(__xu);
<         -: 1998:	      return pair<const_iterator,
<         -: 1999:			  const_iterator>(_M_lower_bound(__x, __y, __k),
<         -: 2000:					  _M_upper_bound(__xu, __yu, __k));
<         -: 2001:	    }
---
>         -: 1928:           typename _Compare, typename _Alloc>
>         -: 1929:    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
>         -: 1930:			   _Compare, _Alloc>::iterator,
>         -: 1931:	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
>         -: 1932:			   _Compare, _Alloc>::iterator>
>         -: 1933:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 1934:    equal_range(const _Key& __k)
>         -: 1935:    {
>         -: 1936:      _Link_type __x = _M_begin();
>         -: 1937:      _Base_ptr __y = _M_end();
>         -: 1938:      while (__x != 0)
>         -: 1939:	{
>         -: 1940:	  if (_M_impl._M_key_compare(_S_key(__x), __k))
>         -: 1941:	    __x = _S_right(__x);
>         -: 1942:	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
>         -: 1943:	    __y = __x, __x = _S_left(__x);
>         -: 1944:	  else
>         -: 1945:	    {
>         -: 1946:	      _Link_type __xu(__x);
>         -: 1947:	      _Base_ptr __yu(__y);
>         -: 1948:	      __y = __x, __x = _S_left(__x);
>         -: 1949:	      __xu = _S_right(__xu);
>         -: 1950:	      return pair<iterator,
>         -: 1951:		          iterator>(_M_lower_bound(__x, __y, __k),
>         -: 1952:				    _M_upper_bound(__xu, __yu, __k));
>         -: 1953:	    }
>         -: 1954:	}
>         -: 1955:      return pair<iterator, iterator>(iterator(__y),
>         -: 1956:				      iterator(__y));
>         -: 1957:    }
>         -: 1958:
>         -: 1959:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1960:           typename _Compare, typename _Alloc>
>         -: 1961:    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
>         -: 1962:			   _Compare, _Alloc>::const_iterator,
>         -: 1963:	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
>         -: 1964:			   _Compare, _Alloc>::const_iterator>
>         -: 1965:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 1966:    equal_range(const _Key& __k) const
>         -: 1967:    {
>         -: 1968:      _Const_Link_type __x = _M_begin();
>         -: 1969:      _Const_Base_ptr __y = _M_end();
>         -: 1970:      while (__x != 0)
>         -: 1971:	{
>         -: 1972:	  if (_M_impl._M_key_compare(_S_key(__x), __k))
>         -: 1973:	    __x = _S_right(__x);
>         -: 1974:	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
>         -: 1975:	    __y = __x, __x = _S_left(__x);
>         -: 1976:	  else
>         -: 1977:	    {
>         -: 1978:	      _Const_Link_type __xu(__x);
>         -: 1979:	      _Const_Base_ptr __yu(__y);
>         -: 1980:	      __y = __x, __x = _S_left(__x);
>         -: 1981:	      __xu = _S_right(__xu);
>         -: 1982:	      return pair<const_iterator,
>         -: 1983:		          const_iterator>(_M_lower_bound(__x, __y, __k),
>         -: 1984:					  _M_upper_bound(__xu, __yu, __k));
>         -: 1985:	    }
>         -: 1986:	}
>         -: 1987:      return pair<const_iterator, const_iterator>(const_iterator(__y),
>         -: 1988:						  const_iterator(__y));
>         -: 1989:    }
>         -: 1990:
>         -: 1991:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 1992:           typename _Compare, typename _Alloc>
>         -: 1993:    void
>         -: 1994:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 1995:    swap(_Rb_tree& __t)
>         -: 1996:    _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value)
>         -: 1997:    {
>         -: 1998:      if (_M_root() == 0)
>         -: 1999:	{
>         -: 2000:	  if (__t._M_root() != 0)
>         -: 2001:	    _M_impl._M_move_data(__t._M_impl);
9136,10488c2005,2160
<         -: 2003:      return pair<const_iterator, const_iterator>(const_iterator(__y),
<         -: 2004:						  const_iterator(__y));
<         -: 2005:    }
<         -: 2006:
<         -: 2007:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2008:	   typename _Compare, typename _Alloc>
<         -: 2009:    void
<         -: 2010:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2011:    swap(_Rb_tree& __t)
<         -: 2012:    _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value)
<         -: 2013:    {
<         -: 2014:      if (_M_root() == 0)
<         -: 2015:	{
<         -: 2016:	  if (__t._M_root() != 0)
<         -: 2017:	    _M_impl._M_move_data(__t._M_impl);
<         -: 2018:	}
<         -: 2019:      else if (__t._M_root() == 0)
<         -: 2020:	__t._M_impl._M_move_data(_M_impl);
<         -: 2021:      else
<         -: 2022:	{
<         -: 2023:	  std::swap(_M_root(),__t._M_root());
<         -: 2024:	  std::swap(_M_leftmost(),__t._M_leftmost());
<         -: 2025:	  std::swap(_M_rightmost(),__t._M_rightmost());
<         -: 2026:
<         -: 2027:	  _M_root()->_M_parent = _M_end();
<         -: 2028:	  __t._M_root()->_M_parent = __t._M_end();
<         -: 2029:	  std::swap(this->_M_impl._M_node_count, __t._M_impl._M_node_count);
<         -: 2030:	}
<         -: 2031:      // No need to swap header's color as it does not change.
<         -: 2032:      std::swap(this->_M_impl._M_key_compare, __t._M_impl._M_key_compare);
<         -: 2033:
<         -: 2034:      _Alloc_traits::_S_on_swap(_M_get_Node_allocator(),
<         -: 2035:				__t._M_get_Node_allocator());
<         -: 2036:    }
<         -: 2037:
<         -: 2038:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2039:	   typename _Compare, typename _Alloc>
<         -: 2040:    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
<         -: 2041:			   _Compare, _Alloc>::_Base_ptr,
<         -: 2042:	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
<         -: 2043:			   _Compare, _Alloc>::_Base_ptr>
<      486*: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<      486*: 2048:      _Link_type __x = _M_begin();
<      486*: 2049:      _Base_ptr __y = _M_end();
<      486*: 2050:      bool __comp = true;
<      515*: 2051:      while (__x != 0)
<         -: 2052:	{
<       29*: 2053:	  __y = __x;
<       29*: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<       29*: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<      486*: 2057:      iterator __j = iterator(__y);
<      486*: 2058:      if (__comp)
<         -: 2059:	{
<      467*: 2060:	  if (__j == begin())
<      465*: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<        2*: 2063:	    --__j;
<         -: 2064:	}
<       21*: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<       21*: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE24_M_get_insert_unique_posERS4_:
<        18: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<        18: 2048:      _Link_type __x = _M_begin();
<        18: 2049:      _Base_ptr __y = _M_end();
<        18: 2050:      bool __comp = true;
<       18*: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<        18: 2057:      iterator __j = iterator(__y);
<        18: 2058:      if (__comp)
<         -: 2059:	{
<        18: 2060:	  if (__j == begin())
<        18: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE24_M_get_insert_unique_posERS4_:
<     #####: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<     #####: 2048:      _Link_type __x = _M_begin();
<     #####: 2049:      _Base_ptr __y = _M_end();
<     #####: 2050:      bool __comp = true;
<     #####: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<     #####: 2057:      iterator __j = iterator(__y);
<     #####: 2058:      if (__comp)
<         -: 2059:	{
<     #####: 2060:	  if (__j == begin())
<     #####: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_:
<     #####: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<     #####: 2048:      _Link_type __x = _M_begin();
<     #####: 2049:      _Base_ptr __y = _M_end();
<     #####: 2050:      bool __comp = true;
<     #####: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<     #####: 2057:      iterator __j = iterator(__y);
<     #####: 2058:      if (__comp)
<         -: 2059:	{
<     #####: 2060:	  if (__j == begin())
<     #####: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE24_M_get_insert_unique_posERS4_:
<     #####: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<     #####: 2048:      _Link_type __x = _M_begin();
<     #####: 2049:      _Base_ptr __y = _M_end();
<     #####: 2050:      bool __comp = true;
<     #####: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<     #####: 2057:      iterator __j = iterator(__y);
<     #####: 2058:      if (__comp)
<         -: 2059:	{
<     #####: 2060:	  if (__j == begin())
<     #####: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE24_M_get_insert_unique_posERS7_:
<       119: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<       119: 2048:      _Link_type __x = _M_begin();
<       119: 2049:      _Base_ptr __y = _M_end();
<       119: 2050:      bool __comp = true;
<      119*: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<       119: 2057:      iterator __j = iterator(__y);
<       119: 2058:      if (__comp)
<         -: 2059:	{
<       119: 2060:	  if (__j == begin())
<       119: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_:
<     #####: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<     #####: 2048:      _Link_type __x = _M_begin();
<     #####: 2049:      _Base_ptr __y = _M_end();
<     #####: 2050:      bool __comp = true;
<     #####: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<     #####: 2057:      iterator __j = iterator(__y);
<     #####: 2058:      if (__comp)
<         -: 2059:	{
<     #####: 2060:	  if (__j == begin())
<     #####: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE24_M_get_insert_unique_posERS7_:
<        89: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<        89: 2048:      _Link_type __x = _M_begin();
<        89: 2049:      _Base_ptr __y = _M_end();
<        89: 2050:      bool __comp = true;
<       89*: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<        89: 2057:      iterator __j = iterator(__y);
<        89: 2058:      if (__comp)
<         -: 2059:	{
<        89: 2060:	  if (__j == begin())
<        89: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE24_M_get_insert_unique_posERS7_:
<        89: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<        89: 2048:      _Link_type __x = _M_begin();
<        89: 2049:      _Base_ptr __y = _M_end();
<        89: 2050:      bool __comp = true;
<       89*: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<        89: 2057:      iterator __j = iterator(__y);
<        89: 2058:      if (__comp)
<         -: 2059:	{
<        89: 2060:	  if (__j == begin())
<        89: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE24_M_get_insert_unique_posERKS3_:
<     #####: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<     #####: 2048:      _Link_type __x = _M_begin();
<     #####: 2049:      _Base_ptr __y = _M_end();
<     #####: 2050:      bool __comp = true;
<     #####: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<     #####: 2057:      iterator __j = iterator(__y);
<     #####: 2058:      if (__comp)
<         -: 2059:	{
<     #####: 2060:	  if (__j == begin())
<     #####: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE24_M_get_insert_unique_posERS5_:
<     #####: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<     #####: 2048:      _Link_type __x = _M_begin();
<     #####: 2049:      _Base_ptr __y = _M_end();
<     #####: 2050:      bool __comp = true;
<     #####: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<     #####: 2057:      iterator __j = iterator(__y);
<     #####: 2058:      if (__comp)
<         -: 2059:	{
<     #####: 2060:	  if (__j == begin())
<     #####: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE24_M_get_insert_unique_posERS1_:
<     #####: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<     #####: 2048:      _Link_type __x = _M_begin();
<     #####: 2049:      _Base_ptr __y = _M_end();
<     #####: 2050:      bool __comp = true;
<     #####: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<     #####: 2057:      iterator __j = iterator(__y);
<     #####: 2058:      if (__comp)
<         -: 2059:	{
<     #####: 2060:	  if (__j == begin())
<     #####: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE24_M_get_insert_unique_posERS4_:
<        18: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<        18: 2048:      _Link_type __x = _M_begin();
<        18: 2049:      _Base_ptr __y = _M_end();
<        18: 2050:      bool __comp = true;
<       18*: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<        18: 2057:      iterator __j = iterator(__y);
<        18: 2058:      if (__comp)
<         -: 2059:	{
<        18: 2060:	  if (__j == begin())
<        18: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE24_M_get_insert_unique_posERS4_:
<        14: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<        14: 2048:      _Link_type __x = _M_begin();
<        14: 2049:      _Base_ptr __y = _M_end();
<        14: 2050:      bool __comp = true;
<       14*: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<        14: 2057:      iterator __j = iterator(__y);
<        14: 2058:      if (__comp)
<         -: 2059:	{
<        14: 2060:	  if (__j == begin())
<        14: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE24_M_get_insert_unique_posERS1_:
<     #####: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<     #####: 2048:      _Link_type __x = _M_begin();
<     #####: 2049:      _Base_ptr __y = _M_end();
<     #####: 2050:      bool __comp = true;
<     #####: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<     #####: 2057:      iterator __j = iterator(__y);
<     #####: 2058:      if (__comp)
<         -: 2059:	{
<     #####: 2060:	  if (__j == begin())
<     #####: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE24_M_get_insert_unique_posERS4_:
<        27: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<        27: 2048:      _Link_type __x = _M_begin();
<        27: 2049:      _Base_ptr __y = _M_end();
<        27: 2050:      bool __comp = true;
<        37: 2051:      while (__x != 0)
<         -: 2052:	{
<        10: 2053:	  __y = __x;
<        10: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<       10*: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<        27: 2057:      iterator __j = iterator(__y);
<        27: 2058:      if (__comp)
<         -: 2059:	{
<        21: 2060:	  if (__j == begin())
<        21: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<         6: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<         6: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE24_M_get_insert_unique_posERS4_:
<         6: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         6: 2048:      _Link_type __x = _M_begin();
<         6: 2049:      _Base_ptr __y = _M_end();
<         6: 2050:      bool __comp = true;
<        6*: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<         6: 2057:      iterator __j = iterator(__y);
<         6: 2058:      if (__comp)
<         -: 2059:	{
<         6: 2060:	  if (__j == begin())
<         6: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE24_M_get_insert_unique_posERS1_:
<        91: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<        91: 2048:      _Link_type __x = _M_begin();
<        91: 2049:      _Base_ptr __y = _M_end();
<        91: 2050:      bool __comp = true;
<       100: 2051:      while (__x != 0)
<         -: 2052:	{
<         9: 2053:	  __y = __x;
<         9: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<        9*: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<        91: 2057:      iterator __j = iterator(__y);
<        91: 2058:      if (__comp)
<         -: 2059:	{
<        82: 2060:	  if (__j == begin())
<        82: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<         9: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<         9: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE24_M_get_insert_unique_posERS4_:
<     #####: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<     #####: 2048:      _Link_type __x = _M_begin();
<     #####: 2049:      _Base_ptr __y = _M_end();
<     #####: 2050:      bool __comp = true;
<     #####: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<     #####: 2057:      iterator __j = iterator(__y);
<     #####: 2058:      if (__comp)
<         -: 2059:	{
<     #####: 2060:	  if (__j == begin())
<     #####: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE24_M_get_insert_unique_posERKS2_:
<     #####: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<     #####: 2048:      _Link_type __x = _M_begin();
<     #####: 2049:      _Base_ptr __y = _M_end();
<     #####: 2050:      bool __comp = true;
<     #####: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<     #####: 2057:      iterator __j = iterator(__y);
<     #####: 2058:      if (__comp)
<         -: 2059:	{
<     #####: 2060:	  if (__j == begin())
<     #####: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE24_M_get_insert_unique_posERS4_:
<         9: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         9: 2048:      _Link_type __x = _M_begin();
<         9: 2049:      _Base_ptr __y = _M_end();
<         9: 2050:      bool __comp = true;
<        19: 2051:      while (__x != 0)
<         -: 2052:	{
<        10: 2053:	  __y = __x;
<        10: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<        10: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<         9: 2057:      iterator __j = iterator(__y);
<         9: 2058:      if (__comp)
<         -: 2059:	{
<         5: 2060:	  if (__j == begin())
<         3: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<         2: 2063:	    --__j;
<         -: 2064:	}
<         6: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<         6: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE24_M_get_insert_unique_posERS4_:
<     #####: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<     #####: 2048:      _Link_type __x = _M_begin();
<     #####: 2049:      _Base_ptr __y = _M_end();
<     #####: 2050:      bool __comp = true;
<     #####: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<     #####: 2057:      iterator __j = iterator(__y);
<     #####: 2058:      if (__comp)
<         -: 2059:	{
<     #####: 2060:	  if (__j == begin())
<     #####: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE24_M_get_insert_unique_posERS4_:
<         6: 2044:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2045:    _M_get_insert_unique_pos(const key_type& __k)
<         -: 2046:    {
<         -: 2047:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         6: 2048:      _Link_type __x = _M_begin();
<         6: 2049:      _Base_ptr __y = _M_end();
<         6: 2050:      bool __comp = true;
<        6*: 2051:      while (__x != 0)
<         -: 2052:	{
<     #####: 2053:	  __y = __x;
<     #####: 2054:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
<     #####: 2055:	  __x = __comp ? _S_left(__x) : _S_right(__x);
<         -: 2056:	}
<         6: 2057:      iterator __j = iterator(__y);
<         6: 2058:      if (__comp)
<         -: 2059:	{
<         6: 2060:	  if (__j == begin())
<         6: 2061:	    return _Res(__x, __y);
<         -: 2062:	  else
<     #####: 2063:	    --__j;
<         -: 2064:	}
<     #####: 2065:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
<     #####: 2066:	return _Res(__x, __y);
<     #####: 2067:      return _Res(__j._M_node, 0);
<         -: 2068:    }
< ------------------
<         -: 2069:
<         -: 2070:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2071:	   typename _Compare, typename _Alloc>
<         -: 2072:    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
<         -: 2073:			   _Compare, _Alloc>::_Base_ptr,
<         -: 2074:	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
<         -: 2075:			   _Compare, _Alloc>::_Base_ptr>
<         2: 2076:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2077:    _M_get_insert_equal_pos(const key_type& __k)
<         -: 2078:    {
<         -: 2079:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         2: 2080:      _Link_type __x = _M_begin();
<         2: 2081:      _Base_ptr __y = _M_end();
<        2*: 2082:      while (__x != 0)
<         -: 2083:	{
<     #####: 2084:	  __y = __x;
<     #####: 2085:	  __x = _M_impl._M_key_compare(__k, _S_key(__x)) ?
<     #####: 2086:		_S_left(__x) : _S_right(__x);
<         -: 2087:	}
<         2: 2088:      return _Res(__x, __y);
<         -: 2089:    }
<         -: 2090:
<         -: 2091:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2092:	   typename _Compare, typename _Alloc>
<         -: 2093:#if __cplusplus >= 201103L
<         -: 2094:    template<typename _Arg>
<         -: 2095:#endif
<         -: 2096:    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
<         -: 2097:			   _Compare, _Alloc>::iterator, bool>
<      172*: 2098:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2099:#if __cplusplus >= 201103L
<         -: 2100:    _M_insert_unique(_Arg&& __v)
<         -: 2101:#else
<         -: 2102:    _M_insert_unique(const _Val& __v)
<         -: 2103:#endif
<         -: 2104:    {
<         -: 2105:      typedef pair<iterator, bool> _Res;
<      172*: 2106:      pair<_Base_ptr, _Base_ptr> __res
<      172*: 2107:	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
<         -: 2108:
<      172*: 2109:      if (__res.second)
<         -: 2110:	{
<      172*: 2111:	  _Alloc_node __an(*this);
<      172*: 2112:	  return _Res(_M_insert_(__res.first, __res.second,
<         -: 2113:				 _GLIBCXX_FORWARD(_Arg, __v), __an),
<      344*: 2114:		      true);
<         -: 2115:	}
<         -: 2116:
<     #####: 2117:      return _Res(iterator(__res.first), false);
<         -: 2118:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_:
<     #####: 2098:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2099:#if __cplusplus >= 201103L
<         -: 2100:    _M_insert_unique(_Arg&& __v)
<         -: 2101:#else
<         -: 2102:    _M_insert_unique(const _Val& __v)
<         -: 2103:#endif
<         -: 2104:    {
<         -: 2105:      typedef pair<iterator, bool> _Res;
<     #####: 2106:      pair<_Base_ptr, _Base_ptr> __res
<     #####: 2107:	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
<         -: 2108:
<     #####: 2109:      if (__res.second)
<         -: 2110:	{
<     #####: 2111:	  _Alloc_node __an(*this);
<     #####: 2112:	  return _Res(_M_insert_(__res.first, __res.second,
<         -: 2113:				 _GLIBCXX_FORWARD(_Arg, __v), __an),
<     #####: 2114:		      true);
<         -: 2115:	}
<         -: 2116:
<     #####: 2117:      return _Res(iterator(__res.first), false);
<         -: 2118:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE16_M_insert_uniqueIS7_EES0_ISt17_Rb_tree_iteratorIS7_EbEOT_:
<        83: 2098:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2099:#if __cplusplus >= 201103L
<         -: 2100:    _M_insert_unique(_Arg&& __v)
<         -: 2101:#else
<         -: 2102:    _M_insert_unique(const _Val& __v)
<         -: 2103:#endif
<         -: 2104:    {
<         -: 2105:      typedef pair<iterator, bool> _Res;
<        83: 2106:      pair<_Base_ptr, _Base_ptr> __res
<        83: 2107:	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
<         -: 2108:
<        83: 2109:      if (__res.second)
<         -: 2110:	{
<        83: 2111:	  _Alloc_node __an(*this);
<        83: 2112:	  return _Res(_M_insert_(__res.first, __res.second,
<         -: 2113:				 _GLIBCXX_FORWARD(_Arg, __v), __an),
<       166: 2114:		      true);
<         -: 2115:	}
<         -: 2116:
<     #####: 2117:      return _Res(iterator(__res.first), false);
<         -: 2118:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE16_M_insert_uniqueIS7_EES0_ISt17_Rb_tree_iteratorIS7_EbEOT_:
<     #####: 2098:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2099:#if __cplusplus >= 201103L
<         -: 2100:    _M_insert_unique(_Arg&& __v)
<         -: 2101:#else
<         -: 2102:    _M_insert_unique(const _Val& __v)
<         -: 2103:#endif
<         -: 2104:    {
<         -: 2105:      typedef pair<iterator, bool> _Res;
<     #####: 2106:      pair<_Base_ptr, _Base_ptr> __res
<     #####: 2107:	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
<         -: 2108:
<     #####: 2109:      if (__res.second)
<         -: 2110:	{
<     #####: 2111:	  _Alloc_node __an(*this);
<     #####: 2112:	  return _Res(_M_insert_(__res.first, __res.second,
<         -: 2113:				 _GLIBCXX_FORWARD(_Arg, __v), __an),
<     #####: 2114:		      true);
<         -: 2115:	}
<         -: 2116:
<     #####: 2117:      return _Res(iterator(__res.first), false);
<         -: 2118:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_:
<     #####: 2098:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2099:#if __cplusplus >= 201103L
<         -: 2100:    _M_insert_unique(_Arg&& __v)
<         -: 2101:#else
<         -: 2102:    _M_insert_unique(const _Val& __v)
<         -: 2103:#endif
<         -: 2104:    {
<         -: 2105:      typedef pair<iterator, bool> _Res;
<     #####: 2106:      pair<_Base_ptr, _Base_ptr> __res
<     #####: 2107:	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
<         -: 2108:
<     #####: 2109:      if (__res.second)
<         -: 2110:	{
<     #####: 2111:	  _Alloc_node __an(*this);
<     #####: 2112:	  return _Res(_M_insert_(__res.first, __res.second,
<         -: 2113:				 _GLIBCXX_FORWARD(_Arg, __v), __an),
<     #####: 2114:		      true);
<         -: 2115:	}
<         -: 2116:
<     #####: 2117:      return _Res(iterator(__res.first), false);
<         -: 2118:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE16_M_insert_uniqueISD_EES6_ISt17_Rb_tree_iteratorISD_EbEOT_:
<        89: 2098:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2099:#if __cplusplus >= 201103L
<         -: 2100:    _M_insert_unique(_Arg&& __v)
<         -: 2101:#else
<         -: 2102:    _M_insert_unique(const _Val& __v)
<         -: 2103:#endif
<         -: 2104:    {
<         -: 2105:      typedef pair<iterator, bool> _Res;
<        89: 2106:      pair<_Base_ptr, _Base_ptr> __res
<        89: 2107:	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
<         -: 2108:
<        89: 2109:      if (__res.second)
<         -: 2110:	{
<        89: 2111:	  _Alloc_node __an(*this);
<        89: 2112:	  return _Res(_M_insert_(__res.first, __res.second,
<         -: 2113:				 _GLIBCXX_FORWARD(_Arg, __v), __an),
<       178: 2114:		      true);
<         -: 2115:	}
<         -: 2116:
<     #####: 2117:      return _Res(iterator(__res.first), false);
<         -: 2118:    }
< ------------------
<         -: 2119:
<         -: 2120:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2121:	   typename _Compare, typename _Alloc>
<         -: 2122:#if __cplusplus >= 201103L
<         -: 2123:    template<typename _Arg>
<         -: 2124:#endif
<         -: 2125:    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
<         2: 2126:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2127:#if __cplusplus >= 201103L
<         -: 2128:    _M_insert_equal(_Arg&& __v)
<         -: 2129:#else
<         -: 2130:    _M_insert_equal(const _Val& __v)
<         -: 2131:#endif
<         -: 2132:    {
<         2: 2133:      pair<_Base_ptr, _Base_ptr> __res
<         2: 2134:	= _M_get_insert_equal_pos(_KeyOfValue()(__v));
<         2: 2135:      _Alloc_node __an(*this);
<         -: 2136:      return _M_insert_(__res.first, __res.second,
<         4: 2137:			_GLIBCXX_FORWARD(_Arg, __v), __an);
<         -: 2138:    }
<         -: 2139:
<         -: 2140:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2141:	   typename _Compare, typename _Alloc>
<         -: 2142:    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
<         -: 2143:			   _Compare, _Alloc>::_Base_ptr,
<         -: 2144:	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
<         -: 2145:			   _Compare, _Alloc>::_Base_ptr>
<      458*: 2146:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2147:    _M_get_insert_hint_unique_pos(const_iterator __position,
<         -: 2148:				  const key_type& __k)
<         -: 2149:    {
<      458*: 2150:      iterator __pos = __position._M_const_cast();
<         -: 2151:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         -: 2152:
<         -: 2153:      // end()
<      458*: 2154:      if (__pos._M_node == _M_end())
<         -: 2155:	{
<      454*: 2156:	  if (size() > 0
<      454*: 2157:	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
<      202*: 2158:	    return _Res(0, _M_rightmost());
<         -: 2159:	  else
<      252*: 2160:	    return _M_get_insert_unique_pos(__k);
<         -: 2161:	}
<        4*: 2162:      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
<         -: 2163:	{
<         -: 2164:	  // First, try before...
<        4*: 2165:	  iterator __before = __pos;
<        4*: 2166:	  if (__pos._M_node == _M_leftmost()) // begin()
<     #####: 2167:	    return _Res(_M_leftmost(), _M_leftmost());
<        4*: 2168:	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
<         -: 2169:	    {
<        4*: 2170:	      if (_S_right(__before._M_node) == 0)
<     #####: 2171:		return _Res(0, __before._M_node);
<         -: 2172:	      else
<        4*: 2173:		return _Res(__pos._M_node, __pos._M_node);
<         -: 2174:	    }
<         -: 2175:	  else
<     #####: 2176:	    return _M_get_insert_unique_pos(__k);
<         -: 2177:	}
<     #####: 2178:      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
<         -: 2179:	{
<         -: 2180:	  // ... then try after.
<     #####: 2181:	  iterator __after = __pos;
<     #####: 2182:	  if (__pos._M_node == _M_rightmost())
<     #####: 2183:	    return _Res(0, _M_rightmost());
<     #####: 2184:	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
<         -: 2185:	    {
<     #####: 2186:	      if (_S_right(__pos._M_node) == 0)
<     #####: 2187:		return _Res(0, __pos._M_node);
<         -: 2188:	      else
<     #####: 2189:		return _Res(__after._M_node, __after._M_node);
<         -: 2190:	    }
<         -: 2191:	  else
<     #####: 2192:	    return _M_get_insert_unique_pos(__k);
<         -: 2193:	}
<         -: 2194:      else
<         -: 2195:	// Equivalent keys.
<     #####: 2196:	return _Res(__pos._M_node, 0);
<         -: 2197:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_:
<        18: 2146:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2147:    _M_get_insert_hint_unique_pos(const_iterator __position,
<         -: 2148:				  const key_type& __k)
<         -: 2149:    {
<        18: 2150:      iterator __pos = __position._M_const_cast();
<         -: 2151:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         -: 2152:
<         -: 2153:      // end()
<        18: 2154:      if (__pos._M_node == _M_end())
<         -: 2155:	{
<        18: 2156:	  if (size() > 0
<       18*: 2157:	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
<     #####: 2158:	    return _Res(0, _M_rightmost());
<         -: 2159:	  else
<        18: 2160:	    return _M_get_insert_unique_pos(__k);
<         -: 2161:	}
<     #####: 2162:      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
<         -: 2163:	{
<         -: 2164:	  // First, try before...
<     #####: 2165:	  iterator __before = __pos;
<     #####: 2166:	  if (__pos._M_node == _M_leftmost()) // begin()
<     #####: 2167:	    return _Res(_M_leftmost(), _M_leftmost());
<     #####: 2168:	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
<         -: 2169:	    {
<     #####: 2170:	      if (_S_right(__before._M_node) == 0)
<     #####: 2171:		return _Res(0, __before._M_node);
<         -: 2172:	      else
<     #####: 2173:		return _Res(__pos._M_node, __pos._M_node);
<         -: 2174:	    }
<         -: 2175:	  else
<     #####: 2176:	    return _M_get_insert_unique_pos(__k);
<         -: 2177:	}
<     #####: 2178:      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
<         -: 2179:	{
<         -: 2180:	  // ... then try after.
<     #####: 2181:	  iterator __after = __pos;
<     #####: 2182:	  if (__pos._M_node == _M_rightmost())
<     #####: 2183:	    return _Res(0, _M_rightmost());
<     #####: 2184:	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
<         -: 2185:	    {
<     #####: 2186:	      if (_S_right(__pos._M_node) == 0)
<     #####: 2187:		return _Res(0, __pos._M_node);
<         -: 2188:	      else
<     #####: 2189:		return _Res(__after._M_node, __after._M_node);
<         -: 2190:	    }
<         -: 2191:	  else
<     #####: 2192:	    return _M_get_insert_unique_pos(__k);
<         -: 2193:	}
<         -: 2194:      else
<         -: 2195:	// Equivalent keys.
<     #####: 2196:	return _Res(__pos._M_node, 0);
<         -: 2197:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS4_:
<        18: 2146:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2147:    _M_get_insert_hint_unique_pos(const_iterator __position,
<         -: 2148:				  const key_type& __k)
<         -: 2149:    {
<        18: 2150:      iterator __pos = __position._M_const_cast();
<         -: 2151:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         -: 2152:
<         -: 2153:      // end()
<        18: 2154:      if (__pos._M_node == _M_end())
<         -: 2155:	{
<        16: 2156:	  if (size() > 0
<        16: 2157:	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
<        10: 2158:	    return _Res(0, _M_rightmost());
<         -: 2159:	  else
<         6: 2160:	    return _M_get_insert_unique_pos(__k);
<         -: 2161:	}
<         2: 2162:      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
<         -: 2163:	{
<         -: 2164:	  // First, try before...
<         2: 2165:	  iterator __before = __pos;
<         2: 2166:	  if (__pos._M_node == _M_leftmost()) // begin()
<     #####: 2167:	    return _Res(_M_leftmost(), _M_leftmost());
<         2: 2168:	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
<         -: 2169:	    {
<         2: 2170:	      if (_S_right(__before._M_node) == 0)
<     #####: 2171:		return _Res(0, __before._M_node);
<         -: 2172:	      else
<         2: 2173:		return _Res(__pos._M_node, __pos._M_node);
<         -: 2174:	    }
<         -: 2175:	  else
<     #####: 2176:	    return _M_get_insert_unique_pos(__k);
<         -: 2177:	}
<     #####: 2178:      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
<         -: 2179:	{
<         -: 2180:	  // ... then try after.
<     #####: 2181:	  iterator __after = __pos;
<     #####: 2182:	  if (__pos._M_node == _M_rightmost())
<     #####: 2183:	    return _Res(0, _M_rightmost());
<     #####: 2184:	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
<         -: 2185:	    {
<     #####: 2186:	      if (_S_right(__pos._M_node) == 0)
<     #####: 2187:		return _Res(0, __pos._M_node);
<         -: 2188:	      else
<     #####: 2189:		return _Res(__after._M_node, __after._M_node);
<         -: 2190:	    }
<         -: 2191:	  else
<     #####: 2192:	    return _M_get_insert_unique_pos(__k);
<         -: 2193:	}
<         -: 2194:      else
<         -: 2195:	// Equivalent keys.
<     #####: 2196:	return _Res(__pos._M_node, 0);
<         -: 2197:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_:
<     #####: 2146:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2147:    _M_get_insert_hint_unique_pos(const_iterator __position,
<         -: 2148:				  const key_type& __k)
<         -: 2149:    {
<     #####: 2150:      iterator __pos = __position._M_const_cast();
<         -: 2151:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         -: 2152:
<         -: 2153:      // end()
<     #####: 2154:      if (__pos._M_node == _M_end())
<         -: 2155:	{
<     #####: 2156:	  if (size() > 0
<     #####: 2157:	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
<     #####: 2158:	    return _Res(0, _M_rightmost());
<         -: 2159:	  else
<     #####: 2160:	    return _M_get_insert_unique_pos(__k);
<         -: 2161:	}
<     #####: 2162:      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
<         -: 2163:	{
<         -: 2164:	  // First, try before...
<     #####: 2165:	  iterator __before = __pos;
<     #####: 2166:	  if (__pos._M_node == _M_leftmost()) // begin()
<     #####: 2167:	    return _Res(_M_leftmost(), _M_leftmost());
<     #####: 2168:	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
<         -: 2169:	    {
<     #####: 2170:	      if (_S_right(__before._M_node) == 0)
<     #####: 2171:		return _Res(0, __before._M_node);
<         -: 2172:	      else
<     #####: 2173:		return _Res(__pos._M_node, __pos._M_node);
<         -: 2174:	    }
<         -: 2175:	  else
<     #####: 2176:	    return _M_get_insert_unique_pos(__k);
<         -: 2177:	}
<     #####: 2178:      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
<         -: 2179:	{
<         -: 2180:	  // ... then try after.
<     #####: 2181:	  iterator __after = __pos;
<     #####: 2182:	  if (__pos._M_node == _M_rightmost())
<     #####: 2183:	    return _Res(0, _M_rightmost());
<     #####: 2184:	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
<         -: 2185:	    {
<     #####: 2186:	      if (_S_right(__pos._M_node) == 0)
<     #####: 2187:		return _Res(0, __pos._M_node);
<         -: 2188:	      else
<     #####: 2189:		return _Res(__after._M_node, __after._M_node);
<         -: 2190:	    }
<         -: 2191:	  else
<     #####: 2192:	    return _M_get_insert_unique_pos(__k);
<         -: 2193:	}
<         -: 2194:      else
<         -: 2195:	// Equivalent keys.
<     #####: 2196:	return _Res(__pos._M_node, 0);
<         -: 2197:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_:
<        18: 2146:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2147:    _M_get_insert_hint_unique_pos(const_iterator __position,
<         -: 2148:				  const key_type& __k)
<         -: 2149:    {
<        18: 2150:      iterator __pos = __position._M_const_cast();
<         -: 2151:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         -: 2152:
<         -: 2153:      // end()
<        18: 2154:      if (__pos._M_node == _M_end())
<         -: 2155:	{
<        16: 2156:	  if (size() > 0
<        16: 2157:	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
<        10: 2158:	    return _Res(0, _M_rightmost());
<         -: 2159:	  else
<         6: 2160:	    return _M_get_insert_unique_pos(__k);
<         -: 2161:	}
<         2: 2162:      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
<         -: 2163:	{
<         -: 2164:	  // First, try before...
<         2: 2165:	  iterator __before = __pos;
<         2: 2166:	  if (__pos._M_node == _M_leftmost()) // begin()
<     #####: 2167:	    return _Res(_M_leftmost(), _M_leftmost());
<         2: 2168:	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
<         -: 2169:	    {
<         2: 2170:	      if (_S_right(__before._M_node) == 0)
<     #####: 2171:		return _Res(0, __before._M_node);
<         -: 2172:	      else
<         2: 2173:		return _Res(__pos._M_node, __pos._M_node);
<         -: 2174:	    }
<         -: 2175:	  else
<     #####: 2176:	    return _M_get_insert_unique_pos(__k);
<         -: 2177:	}
<     #####: 2178:      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
<         -: 2179:	{
<         -: 2180:	  // ... then try after.
<     #####: 2181:	  iterator __after = __pos;
<     #####: 2182:	  if (__pos._M_node == _M_rightmost())
<     #####: 2183:	    return _Res(0, _M_rightmost());
<     #####: 2184:	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
<         -: 2185:	    {
<     #####: 2186:	      if (_S_right(__pos._M_node) == 0)
<     #####: 2187:		return _Res(0, __pos._M_node);
<         -: 2188:	      else
<     #####: 2189:		return _Res(__after._M_node, __after._M_node);
<         -: 2190:	    }
<         -: 2191:	  else
<     #####: 2192:	    return _M_get_insert_unique_pos(__k);
<         -: 2193:	}
<         -: 2194:      else
<         -: 2195:	// Equivalent keys.
<     #####: 2196:	return _Res(__pos._M_node, 0);
<         -: 2197:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS7_ERS1_:
<     #####: 2146:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2147:    _M_get_insert_hint_unique_pos(const_iterator __position,
<         -: 2148:				  const key_type& __k)
<         -: 2149:    {
<     #####: 2150:      iterator __pos = __position._M_const_cast();
<         -: 2151:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         -: 2152:
<         -: 2153:      // end()
<     #####: 2154:      if (__pos._M_node == _M_end())
<         -: 2155:	{
<     #####: 2156:	  if (size() > 0
<     #####: 2157:	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
<     #####: 2158:	    return _Res(0, _M_rightmost());
<         -: 2159:	  else
<     #####: 2160:	    return _M_get_insert_unique_pos(__k);
<         -: 2161:	}
<     #####: 2162:      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
<         -: 2163:	{
<         -: 2164:	  // First, try before...
<     #####: 2165:	  iterator __before = __pos;
<     #####: 2166:	  if (__pos._M_node == _M_leftmost()) // begin()
<     #####: 2167:	    return _Res(_M_leftmost(), _M_leftmost());
<     #####: 2168:	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
<         -: 2169:	    {
<     #####: 2170:	      if (_S_right(__before._M_node) == 0)
<     #####: 2171:		return _Res(0, __before._M_node);
<         -: 2172:	      else
<     #####: 2173:		return _Res(__pos._M_node, __pos._M_node);
<         -: 2174:	    }
<         -: 2175:	  else
<     #####: 2176:	    return _M_get_insert_unique_pos(__k);
<         -: 2177:	}
<     #####: 2178:      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
<         -: 2179:	{
<         -: 2180:	  // ... then try after.
<     #####: 2181:	  iterator __after = __pos;
<     #####: 2182:	  if (__pos._M_node == _M_rightmost())
<     #####: 2183:	    return _Res(0, _M_rightmost());
<     #####: 2184:	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
<         -: 2185:	    {
<     #####: 2186:	      if (_S_right(__pos._M_node) == 0)
<     #####: 2187:		return _Res(0, __pos._M_node);
<         -: 2188:	      else
<     #####: 2189:		return _Res(__after._M_node, __after._M_node);
<         -: 2190:	    }
<         -: 2191:	  else
<     #####: 2192:	    return _M_get_insert_unique_pos(__k);
<         -: 2193:	}
<         -: 2194:      else
<         -: 2195:	// Equivalent keys.
<     #####: 2196:	return _Res(__pos._M_node, 0);
<         -: 2197:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_:
<        18: 2146:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2147:    _M_get_insert_hint_unique_pos(const_iterator __position,
<         -: 2148:				  const key_type& __k)
<         -: 2149:    {
<        18: 2150:      iterator __pos = __position._M_const_cast();
<         -: 2151:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         -: 2152:
<         -: 2153:      // end()
<        18: 2154:      if (__pos._M_node == _M_end())
<         -: 2155:	{
<        18: 2156:	  if (size() > 0
<        18: 2157:	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
<         4: 2158:	    return _Res(0, _M_rightmost());
<         -: 2159:	  else
<        14: 2160:	    return _M_get_insert_unique_pos(__k);
<         -: 2161:	}
<     #####: 2162:      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
<         -: 2163:	{
<         -: 2164:	  // First, try before...
<     #####: 2165:	  iterator __before = __pos;
<     #####: 2166:	  if (__pos._M_node == _M_leftmost()) // begin()
<     #####: 2167:	    return _Res(_M_leftmost(), _M_leftmost());
<     #####: 2168:	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
<         -: 2169:	    {
<     #####: 2170:	      if (_S_right(__before._M_node) == 0)
<     #####: 2171:		return _Res(0, __before._M_node);
<         -: 2172:	      else
<     #####: 2173:		return _Res(__pos._M_node, __pos._M_node);
<         -: 2174:	    }
<         -: 2175:	  else
<     #####: 2176:	    return _M_get_insert_unique_pos(__k);
<         -: 2177:	}
<     #####: 2178:      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
<         -: 2179:	{
<         -: 2180:	  // ... then try after.
<     #####: 2181:	  iterator __after = __pos;
<     #####: 2182:	  if (__pos._M_node == _M_rightmost())
<     #####: 2183:	    return _Res(0, _M_rightmost());
<     #####: 2184:	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
<         -: 2185:	    {
<     #####: 2186:	      if (_S_right(__pos._M_node) == 0)
<     #####: 2187:		return _Res(0, __pos._M_node);
<         -: 2188:	      else
<     #####: 2189:		return _Res(__after._M_node, __after._M_node);
<         -: 2190:	    }
<         -: 2191:	  else
<     #####: 2192:	    return _M_get_insert_unique_pos(__k);
<         -: 2193:	}
<         -: 2194:      else
<         -: 2195:	// Equivalent keys.
<     #####: 2196:	return _Res(__pos._M_node, 0);
<         -: 2197:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS5_:
<     #####: 2146:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2147:    _M_get_insert_hint_unique_pos(const_iterator __position,
<         -: 2148:				  const key_type& __k)
<         -: 2149:    {
<     #####: 2150:      iterator __pos = __position._M_const_cast();
<         -: 2151:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         -: 2152:
<         -: 2153:      // end()
<     #####: 2154:      if (__pos._M_node == _M_end())
<         -: 2155:	{
<     #####: 2156:	  if (size() > 0
<     #####: 2157:	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
<     #####: 2158:	    return _Res(0, _M_rightmost());
<         -: 2159:	  else
<     #####: 2160:	    return _M_get_insert_unique_pos(__k);
<         -: 2161:	}
<     #####: 2162:      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
<         -: 2163:	{
<         -: 2164:	  // First, try before...
<     #####: 2165:	  iterator __before = __pos;
<     #####: 2166:	  if (__pos._M_node == _M_leftmost()) // begin()
<     #####: 2167:	    return _Res(_M_leftmost(), _M_leftmost());
<     #####: 2168:	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
<         -: 2169:	    {
<     #####: 2170:	      if (_S_right(__before._M_node) == 0)
<     #####: 2171:		return _Res(0, __before._M_node);
<         -: 2172:	      else
<     #####: 2173:		return _Res(__pos._M_node, __pos._M_node);
<         -: 2174:	    }
<         -: 2175:	  else
<     #####: 2176:	    return _M_get_insert_unique_pos(__k);
<         -: 2177:	}
<     #####: 2178:      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
<         -: 2179:	{
<         -: 2180:	  // ... then try after.
<     #####: 2181:	  iterator __after = __pos;
<     #####: 2182:	  if (__pos._M_node == _M_rightmost())
<     #####: 2183:	    return _Res(0, _M_rightmost());
<     #####: 2184:	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
<         -: 2185:	    {
<     #####: 2186:	      if (_S_right(__pos._M_node) == 0)
<     #####: 2187:		return _Res(0, __pos._M_node);
<         -: 2188:	      else
<     #####: 2189:		return _Res(__after._M_node, __after._M_node);
<         -: 2190:	    }
<         -: 2191:	  else
<     #####: 2192:	    return _M_get_insert_unique_pos(__k);
<         -: 2193:	}
<         -: 2194:      else
<         -: 2195:	// Equivalent keys.
<     #####: 2196:	return _Res(__pos._M_node, 0);
<         -: 2197:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISD_ERS7_:
<       178: 2146:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2147:    _M_get_insert_hint_unique_pos(const_iterator __position,
<         -: 2148:				  const key_type& __k)
<         -: 2149:    {
<       178: 2150:      iterator __pos = __position._M_const_cast();
<         -: 2151:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         -: 2152:
<         -: 2153:      // end()
<       178: 2154:      if (__pos._M_node == _M_end())
<         -: 2155:	{
<       178: 2156:	  if (size() > 0
<       178: 2157:	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
<        89: 2158:	    return _Res(0, _M_rightmost());
<         -: 2159:	  else
<        89: 2160:	    return _M_get_insert_unique_pos(__k);
<         -: 2161:	}
<     #####: 2162:      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
<         -: 2163:	{
<         -: 2164:	  // First, try before...
<     #####: 2165:	  iterator __before = __pos;
<     #####: 2166:	  if (__pos._M_node == _M_leftmost()) // begin()
<     #####: 2167:	    return _Res(_M_leftmost(), _M_leftmost());
<     #####: 2168:	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
<         -: 2169:	    {
<     #####: 2170:	      if (_S_right(__before._M_node) == 0)
<     #####: 2171:		return _Res(0, __before._M_node);
<         -: 2172:	      else
<     #####: 2173:		return _Res(__pos._M_node, __pos._M_node);
<         -: 2174:	    }
<         -: 2175:	  else
<     #####: 2176:	    return _M_get_insert_unique_pos(__k);
<         -: 2177:	}
<     #####: 2178:      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
<         -: 2179:	{
<         -: 2180:	  // ... then try after.
<     #####: 2181:	  iterator __after = __pos;
<     #####: 2182:	  if (__pos._M_node == _M_rightmost())
<     #####: 2183:	    return _Res(0, _M_rightmost());
<     #####: 2184:	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
<         -: 2185:	    {
<     #####: 2186:	      if (_S_right(__pos._M_node) == 0)
<     #####: 2187:		return _Res(0, __pos._M_node);
<         -: 2188:	      else
<     #####: 2189:		return _Res(__after._M_node, __after._M_node);
<         -: 2190:	    }
<         -: 2191:	  else
<     #####: 2192:	    return _M_get_insert_unique_pos(__k);
<         -: 2193:	}
<         -: 2194:      else
<         -: 2195:	// Equivalent keys.
<     #####: 2196:	return _Res(__pos._M_node, 0);
<         -: 2197:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_:
<     #####: 2146:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2147:    _M_get_insert_hint_unique_pos(const_iterator __position,
<         -: 2148:				  const key_type& __k)
<         -: 2149:    {
<     #####: 2150:      iterator __pos = __position._M_const_cast();
<         -: 2151:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         -: 2152:
<         -: 2153:      // end()
<     #####: 2154:      if (__pos._M_node == _M_end())
<         -: 2155:	{
<     #####: 2156:	  if (size() > 0
<     #####: 2157:	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
<     #####: 2158:	    return _Res(0, _M_rightmost());
---
>         -: 2003:      else if (__t._M_root() == 0)
>         -: 2004:	__t._M_impl._M_move_data(_M_impl);
>         -: 2005:      else
>         -: 2006:	{
>         -: 2007:	  std::swap(_M_root(),__t._M_root());
>         -: 2008:	  std::swap(_M_leftmost(),__t._M_leftmost());
>         -: 2009:	  std::swap(_M_rightmost(),__t._M_rightmost());
>         -: 2010:	  
>         -: 2011:	  _M_root()->_M_parent = _M_end();
>         -: 2012:	  __t._M_root()->_M_parent = __t._M_end();
>         -: 2013:	  std::swap(this->_M_impl._M_node_count, __t._M_impl._M_node_count);
>         -: 2014:	}
>         -: 2015:      // No need to swap header's color as it does not change.
>         -: 2016:      std::swap(this->_M_impl._M_key_compare, __t._M_impl._M_key_compare);
>         -: 2017:
>         -: 2018:      _Alloc_traits::_S_on_swap(_M_get_Node_allocator(),
>         -: 2019:				__t._M_get_Node_allocator());
>         -: 2020:    }
>         -: 2021:
>         -: 2022:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2023:           typename _Compare, typename _Alloc>
>         -: 2024:    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
>         -: 2025:			   _Compare, _Alloc>::_Base_ptr,
>         -: 2026:	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
>         -: 2027:			   _Compare, _Alloc>::_Base_ptr>
>     #####: 2028:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2029:    _M_get_insert_unique_pos(const key_type& __k)
>         -: 2030:    {
>         -: 2031:      typedef pair<_Base_ptr, _Base_ptr> _Res;
>     #####: 2032:      _Link_type __x = _M_begin();
>     #####: 2033:      _Base_ptr __y = _M_end();
>     #####: 2034:      bool __comp = true;
>     #####: 2035:      while (__x != 0)
>         -: 2036:	{
>     #####: 2037:	  __y = __x;
>     #####: 2038:	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
>     #####: 2039:	  __x = __comp ? _S_left(__x) : _S_right(__x);
>         -: 2040:	}
>     #####: 2041:      iterator __j = iterator(__y);
>     #####: 2042:      if (__comp)
>         -: 2043:	{
>     #####: 2044:	  if (__j == begin())
>     #####: 2045:	    return _Res(__x, __y);
>         -: 2046:	  else
>     #####: 2047:	    --__j;
>         -: 2048:	}
>     #####: 2049:      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
>     #####: 2050:	return _Res(__x, __y);
>     #####: 2051:      return _Res(__j._M_node, 0);
>         -: 2052:    }
>         -: 2053:
>         -: 2054:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2055:           typename _Compare, typename _Alloc>
>         -: 2056:    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
>         -: 2057:			   _Compare, _Alloc>::_Base_ptr,
>         -: 2058:	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
>         -: 2059:			   _Compare, _Alloc>::_Base_ptr>
>         -: 2060:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2061:    _M_get_insert_equal_pos(const key_type& __k)
>         -: 2062:    {
>         -: 2063:      typedef pair<_Base_ptr, _Base_ptr> _Res;
>         -: 2064:      _Link_type __x = _M_begin();
>         -: 2065:      _Base_ptr __y = _M_end();
>         -: 2066:      while (__x != 0)
>         -: 2067:	{
>         -: 2068:	  __y = __x;
>         -: 2069:	  __x = _M_impl._M_key_compare(__k, _S_key(__x)) ?
>         -: 2070:	        _S_left(__x) : _S_right(__x);
>         -: 2071:	}
>         -: 2072:      return _Res(__x, __y);
>         -: 2073:    }
>         -: 2074:
>         -: 2075:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2076:           typename _Compare, typename _Alloc>
>         -: 2077:#if __cplusplus >= 201103L
>         -: 2078:    template<typename _Arg>
>         -: 2079:#endif
>         -: 2080:    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
>         -: 2081:			   _Compare, _Alloc>::iterator, bool>
>         -: 2082:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2083:#if __cplusplus >= 201103L
>         -: 2084:    _M_insert_unique(_Arg&& __v)
>         -: 2085:#else
>         -: 2086:    _M_insert_unique(const _Val& __v)
>         -: 2087:#endif
>         -: 2088:    {
>         -: 2089:      typedef pair<iterator, bool> _Res;
>         -: 2090:      pair<_Base_ptr, _Base_ptr> __res
>         -: 2091:	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
>         -: 2092:
>         -: 2093:      if (__res.second)
>         -: 2094:	{
>         -: 2095:	  _Alloc_node __an(*this);
>         -: 2096:	  return _Res(_M_insert_(__res.first, __res.second,
>         -: 2097:				 _GLIBCXX_FORWARD(_Arg, __v), __an),
>         -: 2098:		      true);
>         -: 2099:	}
>         -: 2100:
>         -: 2101:      return _Res(iterator(__res.first), false);
>         -: 2102:    }
>         -: 2103:
>         -: 2104:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2105:           typename _Compare, typename _Alloc>
>         -: 2106:#if __cplusplus >= 201103L
>         -: 2107:    template<typename _Arg>
>         -: 2108:#endif
>         -: 2109:    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
>         -: 2110:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2111:#if __cplusplus >= 201103L
>         -: 2112:    _M_insert_equal(_Arg&& __v)
>         -: 2113:#else
>         -: 2114:    _M_insert_equal(const _Val& __v)
>         -: 2115:#endif
>         -: 2116:    {
>         -: 2117:      pair<_Base_ptr, _Base_ptr> __res
>         -: 2118:	= _M_get_insert_equal_pos(_KeyOfValue()(__v));
>         -: 2119:      _Alloc_node __an(*this);
>         -: 2120:      return _M_insert_(__res.first, __res.second,
>         -: 2121:			_GLIBCXX_FORWARD(_Arg, __v), __an);
>         -: 2122:    }
>         -: 2123:
>         -: 2124:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2125:           typename _Compare, typename _Alloc>
>         -: 2126:    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
>         -: 2127:			   _Compare, _Alloc>::_Base_ptr,
>         -: 2128:         typename _Rb_tree<_Key, _Val, _KeyOfValue,
>         -: 2129:			   _Compare, _Alloc>::_Base_ptr>
>     #####: 2130:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2131:    _M_get_insert_hint_unique_pos(const_iterator __position,
>         -: 2132:				  const key_type& __k)
>         -: 2133:    {
>     #####: 2134:      iterator __pos = __position._M_const_cast();
>         -: 2135:      typedef pair<_Base_ptr, _Base_ptr> _Res;
>         -: 2136:
>         -: 2137:      // end()
>     #####: 2138:      if (__pos._M_node == _M_end())
>         -: 2139:	{
>     #####: 2140:	  if (size() > 0
>     #####: 2141:	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
>     #####: 2142:	    return _Res(0, _M_rightmost());
>         -: 2143:	  else
>     #####: 2144:	    return _M_get_insert_unique_pos(__k);
>         -: 2145:	}
>     #####: 2146:      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
>         -: 2147:	{
>         -: 2148:	  // First, try before...
>     #####: 2149:	  iterator __before = __pos;
>     #####: 2150:	  if (__pos._M_node == _M_leftmost()) // begin()
>     #####: 2151:	    return _Res(_M_leftmost(), _M_leftmost());
>     #####: 2152:	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
>         -: 2153:	    {
>     #####: 2154:	      if (_S_right(__before._M_node) == 0)
>     #####: 2155:		return _Res(0, __before._M_node);
>         -: 2156:	      else
>     #####: 2157:		return _Res(__pos._M_node, __pos._M_node);
>         -: 2158:	    }
10492,10546c2164
<     #####: 2162:      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
<         -: 2163:	{
<         -: 2164:	  // First, try before...
<     #####: 2165:	  iterator __before = __pos;
<     #####: 2166:	  if (__pos._M_node == _M_leftmost()) // begin()
<     #####: 2167:	    return _Res(_M_leftmost(), _M_leftmost());
<     #####: 2168:	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
<         -: 2169:	    {
<     #####: 2170:	      if (_S_right(__before._M_node) == 0)
<     #####: 2171:		return _Res(0, __before._M_node);
<         -: 2172:	      else
<     #####: 2173:		return _Res(__pos._M_node, __pos._M_node);
<         -: 2174:	    }
<         -: 2175:	  else
<     #####: 2176:	    return _M_get_insert_unique_pos(__k);
<         -: 2177:	}
<     #####: 2178:      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
<         -: 2179:	{
<         -: 2180:	  // ... then try after.
<     #####: 2181:	  iterator __after = __pos;
<     #####: 2182:	  if (__pos._M_node == _M_rightmost())
<     #####: 2183:	    return _Res(0, _M_rightmost());
<     #####: 2184:	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
<         -: 2185:	    {
<     #####: 2186:	      if (_S_right(__pos._M_node) == 0)
<     #####: 2187:		return _Res(0, __pos._M_node);
<         -: 2188:	      else
<     #####: 2189:		return _Res(__after._M_node, __after._M_node);
<         -: 2190:	    }
<         -: 2191:	  else
<     #####: 2192:	    return _M_get_insert_unique_pos(__k);
<         -: 2193:	}
<         -: 2194:      else
<         -: 2195:	// Equivalent keys.
<     #####: 2196:	return _Res(__pos._M_node, 0);
<         -: 2197:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISD_ERS7_:
<       208: 2146:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2147:    _M_get_insert_hint_unique_pos(const_iterator __position,
<         -: 2148:				  const key_type& __k)
<         -: 2149:    {
<       208: 2150:      iterator __pos = __position._M_const_cast();
<         -: 2151:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         -: 2152:
<         -: 2153:      // end()
<       208: 2154:      if (__pos._M_node == _M_end())
<         -: 2155:	{
<       208: 2156:	  if (size() > 0
<       208: 2157:	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
<        89: 2158:	    return _Res(0, _M_rightmost());
<         -: 2159:	  else
<       119: 2160:	    return _M_get_insert_unique_pos(__k);
<         -: 2161:	}
<     #####: 2162:      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
---
>     #####: 2162:      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
10548,10552c2166,2170
<         -: 2164:	  // First, try before...
<     #####: 2165:	  iterator __before = __pos;
<     #####: 2166:	  if (__pos._M_node == _M_leftmost()) // begin()
<     #####: 2167:	    return _Res(_M_leftmost(), _M_leftmost());
<     #####: 2168:	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
---
>         -: 2164:	  // ... then try after.
>     #####: 2165:	  iterator __after = __pos;
>     #####: 2166:	  if (__pos._M_node == _M_rightmost())
>     #####: 2167:	    return _Res(0, _M_rightmost());
>     #####: 2168:	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
10554,10555c2172,2173
<     #####: 2170:	      if (_S_right(__before._M_node) == 0)
<     #####: 2171:		return _Res(0, __before._M_node);
---
>     #####: 2170:	      if (_S_right(__pos._M_node) == 0)
>     #####: 2171:		return _Res(0, __pos._M_node);
10557c2175
<     #####: 2173:		return _Res(__pos._M_node, __pos._M_node);
---
>     #####: 2173:		return _Res(__after._M_node, __after._M_node);
10562,10790c2180,2245
<     #####: 2178:      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
<         -: 2179:	{
<         -: 2180:	  // ... then try after.
<     #####: 2181:	  iterator __after = __pos;
<     #####: 2182:	  if (__pos._M_node == _M_rightmost())
<     #####: 2183:	    return _Res(0, _M_rightmost());
<     #####: 2184:	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
<         -: 2185:	    {
<     #####: 2186:	      if (_S_right(__pos._M_node) == 0)
<     #####: 2187:		return _Res(0, __pos._M_node);
<         -: 2188:	      else
<     #####: 2189:		return _Res(__after._M_node, __after._M_node);
<         -: 2190:	    }
<         -: 2191:	  else
<     #####: 2192:	    return _M_get_insert_unique_pos(__k);
<         -: 2193:	}
<         -: 2194:      else
<         -: 2195:	// Equivalent keys.
<     #####: 2196:	return _Res(__pos._M_node, 0);
<         -: 2197:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISI_ERS4_:
<     #####: 2146:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2147:    _M_get_insert_hint_unique_pos(const_iterator __position,
<         -: 2148:				  const key_type& __k)
<         -: 2149:    {
<     #####: 2150:      iterator __pos = __position._M_const_cast();
<         -: 2151:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         -: 2152:
<         -: 2153:      // end()
<     #####: 2154:      if (__pos._M_node == _M_end())
<         -: 2155:	{
<     #####: 2156:	  if (size() > 0
<     #####: 2157:	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
<     #####: 2158:	    return _Res(0, _M_rightmost());
<         -: 2159:	  else
<     #####: 2160:	    return _M_get_insert_unique_pos(__k);
<         -: 2161:	}
<     #####: 2162:      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
<         -: 2163:	{
<         -: 2164:	  // First, try before...
<     #####: 2165:	  iterator __before = __pos;
<     #####: 2166:	  if (__pos._M_node == _M_leftmost()) // begin()
<     #####: 2167:	    return _Res(_M_leftmost(), _M_leftmost());
<     #####: 2168:	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
<         -: 2169:	    {
<     #####: 2170:	      if (_S_right(__before._M_node) == 0)
<     #####: 2171:		return _Res(0, __before._M_node);
<         -: 2172:	      else
<     #####: 2173:		return _Res(__pos._M_node, __pos._M_node);
<         -: 2174:	    }
<         -: 2175:	  else
<     #####: 2176:	    return _M_get_insert_unique_pos(__k);
<         -: 2177:	}
<     #####: 2178:      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
<         -: 2179:	{
<         -: 2180:	  // ... then try after.
<     #####: 2181:	  iterator __after = __pos;
<     #####: 2182:	  if (__pos._M_node == _M_rightmost())
<     #####: 2183:	    return _Res(0, _M_rightmost());
<     #####: 2184:	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
<         -: 2185:	    {
<     #####: 2186:	      if (_S_right(__pos._M_node) == 0)
<     #####: 2187:		return _Res(0, __pos._M_node);
<         -: 2188:	      else
<     #####: 2189:		return _Res(__after._M_node, __after._M_node);
<         -: 2190:	    }
<         -: 2191:	  else
<     #####: 2192:	    return _M_get_insert_unique_pos(__k);
<         -: 2193:	}
<         -: 2194:      else
<         -: 2195:	// Equivalent keys.
<     #####: 2196:	return _Res(__pos._M_node, 0);
<         -: 2197:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_:
<     #####: 2146:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2147:    _M_get_insert_hint_unique_pos(const_iterator __position,
<         -: 2148:				  const key_type& __k)
<         -: 2149:    {
<     #####: 2150:      iterator __pos = __position._M_const_cast();
<         -: 2151:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         -: 2152:
<         -: 2153:      // end()
<     #####: 2154:      if (__pos._M_node == _M_end())
<         -: 2155:	{
<     #####: 2156:	  if (size() > 0
<     #####: 2157:	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
<     #####: 2158:	    return _Res(0, _M_rightmost());
<         -: 2159:	  else
<     #####: 2160:	    return _M_get_insert_unique_pos(__k);
<         -: 2161:	}
<     #####: 2162:      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
<         -: 2163:	{
<         -: 2164:	  // First, try before...
<     #####: 2165:	  iterator __before = __pos;
<     #####: 2166:	  if (__pos._M_node == _M_leftmost()) // begin()
<     #####: 2167:	    return _Res(_M_leftmost(), _M_leftmost());
<     #####: 2168:	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
<         -: 2169:	    {
<     #####: 2170:	      if (_S_right(__before._M_node) == 0)
<     #####: 2171:		return _Res(0, __before._M_node);
<         -: 2172:	      else
<     #####: 2173:		return _Res(__pos._M_node, __pos._M_node);
<         -: 2174:	    }
<         -: 2175:	  else
<     #####: 2176:	    return _M_get_insert_unique_pos(__k);
<         -: 2177:	}
<     #####: 2178:      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
<         -: 2179:	{
<         -: 2180:	  // ... then try after.
<     #####: 2181:	  iterator __after = __pos;
<     #####: 2182:	  if (__pos._M_node == _M_rightmost())
<     #####: 2183:	    return _Res(0, _M_rightmost());
<     #####: 2184:	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
<         -: 2185:	    {
<     #####: 2186:	      if (_S_right(__pos._M_node) == 0)
<     #####: 2187:		return _Res(0, __pos._M_node);
<         -: 2188:	      else
<     #####: 2189:		return _Res(__after._M_node, __after._M_node);
<         -: 2190:	    }
<         -: 2191:	  else
<     #####: 2192:	    return _M_get_insert_unique_pos(__k);
<         -: 2193:	}
<         -: 2194:      else
<         -: 2195:	// Equivalent keys.
<     #####: 2196:	return _Res(__pos._M_node, 0);
<         -: 2197:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISC_ERS4_:
<     #####: 2146:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2147:    _M_get_insert_hint_unique_pos(const_iterator __position,
<         -: 2148:				  const key_type& __k)
<         -: 2149:    {
<     #####: 2150:      iterator __pos = __position._M_const_cast();
<         -: 2151:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         -: 2152:
<         -: 2153:      // end()
<     #####: 2154:      if (__pos._M_node == _M_end())
<         -: 2155:	{
<     #####: 2156:	  if (size() > 0
<     #####: 2157:	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
<     #####: 2158:	    return _Res(0, _M_rightmost());
<         -: 2159:	  else
<     #####: 2160:	    return _M_get_insert_unique_pos(__k);
<         -: 2161:	}
<     #####: 2162:      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
<         -: 2163:	{
<         -: 2164:	  // First, try before...
<     #####: 2165:	  iterator __before = __pos;
<     #####: 2166:	  if (__pos._M_node == _M_leftmost()) // begin()
<     #####: 2167:	    return _Res(_M_leftmost(), _M_leftmost());
<     #####: 2168:	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
<         -: 2169:	    {
<     #####: 2170:	      if (_S_right(__before._M_node) == 0)
<     #####: 2171:		return _Res(0, __before._M_node);
<         -: 2172:	      else
<     #####: 2173:		return _Res(__pos._M_node, __pos._M_node);
<         -: 2174:	    }
<         -: 2175:	  else
<     #####: 2176:	    return _M_get_insert_unique_pos(__k);
<         -: 2177:	}
<     #####: 2178:      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
<         -: 2179:	{
<         -: 2180:	  // ... then try after.
<     #####: 2181:	  iterator __after = __pos;
<     #####: 2182:	  if (__pos._M_node == _M_rightmost())
<     #####: 2183:	    return _Res(0, _M_rightmost());
<     #####: 2184:	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
<         -: 2185:	    {
<     #####: 2186:	      if (_S_right(__pos._M_node) == 0)
<     #####: 2187:		return _Res(0, __pos._M_node);
<         -: 2188:	      else
<     #####: 2189:		return _Res(__after._M_node, __after._M_node);
<         -: 2190:	    }
<         -: 2191:	  else
<     #####: 2192:	    return _M_get_insert_unique_pos(__k);
<         -: 2193:	}
<         -: 2194:      else
<         -: 2195:	// Equivalent keys.
<     #####: 2196:	return _Res(__pos._M_node, 0);
<         -: 2197:    }
< ------------------
<         -: 2198:
<         -: 2199:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2200:	   typename _Compare, typename _Alloc>
<         -: 2201:#if __cplusplus >= 201103L
<         -: 2202:    template<typename _Arg, typename _NodeGen>
<         -: 2203:#else
<         -: 2204:    template<typename _NodeGen>
<         -: 2205:#endif
<         -: 2206:      typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
<         -: 2207:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2208:      _M_insert_unique_(const_iterator __position,
<         -: 2209:#if __cplusplus >= 201103L
<         -: 2210:			_Arg&& __v,
<         -: 2211:#else
<         -: 2212:			const _Val& __v,
<         -: 2213:#endif
<         -: 2214:			_NodeGen& __node_gen)
<         -: 2215:    {
<         -: 2216:      pair<_Base_ptr, _Base_ptr> __res
<         -: 2217:	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
<         -: 2218:
<         -: 2219:      if (__res.second)
<         -: 2220:	return _M_insert_(__res.first, __res.second,
<         -: 2221:			  _GLIBCXX_FORWARD(_Arg, __v),
<         -: 2222:			  __node_gen);
<         -: 2223:      return iterator(__res.first);
<         -: 2224:    }
<         -: 2225:
<         -: 2226:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2227:	   typename _Compare, typename _Alloc>
<         -: 2228:    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
<         -: 2229:			   _Compare, _Alloc>::_Base_ptr,
<         -: 2230:	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
<         -: 2231:			   _Compare, _Alloc>::_Base_ptr>
<         -: 2232:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2233:    _M_get_insert_hint_equal_pos(const_iterator __position, const key_type& __k)
<         -: 2234:    {
<         -: 2235:      iterator __pos = __position._M_const_cast();
<         -: 2236:      typedef pair<_Base_ptr, _Base_ptr> _Res;
<         -: 2237:
<         -: 2238:      // end()
<         -: 2239:      if (__pos._M_node == _M_end())
<         -: 2240:	{
<         -: 2241:	  if (size() > 0
<         -: 2242:	      && !_M_impl._M_key_compare(__k, _S_key(_M_rightmost())))
<         -: 2243:	    return _Res(0, _M_rightmost());
---
>         -: 2178:      else
>         -: 2179:	// Equivalent keys.
>     #####: 2180:	return _Res(__pos._M_node, 0);
>         -: 2181:    }
>         -: 2182:
>         -: 2183:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2184:           typename _Compare, typename _Alloc>
>         -: 2185:#if __cplusplus >= 201103L
>         -: 2186:    template<typename _Arg, typename _NodeGen>
>         -: 2187:#else
>         -: 2188:    template<typename _NodeGen>
>         -: 2189:#endif
>         -: 2190:      typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
>         -: 2191:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2192:      _M_insert_unique_(const_iterator __position,
>         -: 2193:#if __cplusplus >= 201103L
>         -: 2194:			_Arg&& __v,
>         -: 2195:#else
>         -: 2196:			const _Val& __v,
>         -: 2197:#endif
>         -: 2198:			_NodeGen& __node_gen)
>         -: 2199:    {
>         -: 2200:      pair<_Base_ptr, _Base_ptr> __res
>         -: 2201:	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
>         -: 2202:
>         -: 2203:      if (__res.second)
>         -: 2204:	return _M_insert_(__res.first, __res.second,
>         -: 2205:			  _GLIBCXX_FORWARD(_Arg, __v),
>         -: 2206:			  __node_gen);
>         -: 2207:      return iterator(__res.first);
>         -: 2208:    }
>         -: 2209:
>         -: 2210:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2211:           typename _Compare, typename _Alloc>
>         -: 2212:    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
>         -: 2213:			   _Compare, _Alloc>::_Base_ptr,
>         -: 2214:         typename _Rb_tree<_Key, _Val, _KeyOfValue,
>         -: 2215:			   _Compare, _Alloc>::_Base_ptr>
>         -: 2216:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2217:    _M_get_insert_hint_equal_pos(const_iterator __position, const key_type& __k)
>         -: 2218:    {
>         -: 2219:      iterator __pos = __position._M_const_cast();
>         -: 2220:      typedef pair<_Base_ptr, _Base_ptr> _Res;
>         -: 2221:
>         -: 2222:      // end()
>         -: 2223:      if (__pos._M_node == _M_end())
>         -: 2224:	{
>         -: 2225:	  if (size() > 0
>         -: 2226:	      && !_M_impl._M_key_compare(__k, _S_key(_M_rightmost())))
>         -: 2227:	    return _Res(0, _M_rightmost());
>         -: 2228:	  else
>         -: 2229:	    return _M_get_insert_equal_pos(__k);
>         -: 2230:	}
>         -: 2231:      else if (!_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
>         -: 2232:	{
>         -: 2233:	  // First, try before...
>         -: 2234:	  iterator __before = __pos;
>         -: 2235:	  if (__pos._M_node == _M_leftmost()) // begin()
>         -: 2236:	    return _Res(_M_leftmost(), _M_leftmost());
>         -: 2237:	  else if (!_M_impl._M_key_compare(__k, _S_key((--__before)._M_node)))
>         -: 2238:	    {
>         -: 2239:	      if (_S_right(__before._M_node) == 0)
>         -: 2240:		return _Res(0, __before._M_node);
>         -: 2241:	      else
>         -: 2242:		return _Res(__pos._M_node, __pos._M_node);
>         -: 2243:	    }
10794c2249
<         -: 2247:      else if (!_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
---
>         -: 2247:      else
10796,10800c2251,2255
<         -: 2249:	  // First, try before...
<         -: 2250:	  iterator __before = __pos;
<         -: 2251:	  if (__pos._M_node == _M_leftmost()) // begin()
<         -: 2252:	    return _Res(_M_leftmost(), _M_leftmost());
<         -: 2253:	  else if (!_M_impl._M_key_compare(__k, _S_key((--__before)._M_node)))
---
>         -: 2249:	  // ... then try after.  
>         -: 2250:	  iterator __after = __pos;
>         -: 2251:	  if (__pos._M_node == _M_rightmost())
>         -: 2252:	    return _Res(0, _M_rightmost());
>         -: 2253:	  else if (!_M_impl._M_key_compare(_S_key((++__after)._M_node), __k))
10802,10803c2257,2258
<         -: 2255:	      if (_S_right(__before._M_node) == 0)
<         -: 2256:		return _Res(0, __before._M_node);
---
>         -: 2255:	      if (_S_right(__pos._M_node) == 0)
>         -: 2256:		return _Res(0, __pos._M_node);
10805c2260
<         -: 2258:		return _Res(__pos._M_node, __pos._M_node);
---
>         -: 2258:		return _Res(__after._M_node, __after._M_node);
10808c2263
<         -: 2261:	    return _M_get_insert_equal_pos(__k);
---
>         -: 2261:	    return _Res(0, 0);
10810,10856c2265,2311
<         -: 2263:      else
<         -: 2264:	{
<         -: 2265:	  // ... then try after.
<         -: 2266:	  iterator __after = __pos;
<         -: 2267:	  if (__pos._M_node == _M_rightmost())
<         -: 2268:	    return _Res(0, _M_rightmost());
<         -: 2269:	  else if (!_M_impl._M_key_compare(_S_key((++__after)._M_node), __k))
<         -: 2270:	    {
<         -: 2271:	      if (_S_right(__pos._M_node) == 0)
<         -: 2272:		return _Res(0, __pos._M_node);
<         -: 2273:	      else
<         -: 2274:		return _Res(__after._M_node, __after._M_node);
<         -: 2275:	    }
<         -: 2276:	  else
<         -: 2277:	    return _Res(0, 0);
<         -: 2278:	}
<         -: 2279:    }
<         -: 2280:
<         -: 2281:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2282:	   typename _Compare, typename _Alloc>
<         -: 2283:#if __cplusplus >= 201103L
<         -: 2284:    template<typename _Arg, typename _NodeGen>
<         -: 2285:#else
<         -: 2286:    template<typename _NodeGen>
<         -: 2287:#endif
<         -: 2288:      typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
<         -: 2289:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2290:      _M_insert_equal_(const_iterator __position,
<         -: 2291:#if __cplusplus >= 201103L
<         -: 2292:		       _Arg&& __v,
<         -: 2293:#else
<         -: 2294:		       const _Val& __v,
<         -: 2295:#endif
<         -: 2296:		       _NodeGen& __node_gen)
<         -: 2297:      {
<         -: 2298:	pair<_Base_ptr, _Base_ptr> __res
<         -: 2299:	  = _M_get_insert_hint_equal_pos(__position, _KeyOfValue()(__v));
<         -: 2300:
<         -: 2301:	if (__res.second)
<         -: 2302:	  return _M_insert_(__res.first, __res.second,
<         -: 2303:			    _GLIBCXX_FORWARD(_Arg, __v),
<         -: 2304:			    __node_gen);
<         -: 2305:
<         -: 2306:	return _M_insert_equal_lower(_GLIBCXX_FORWARD(_Arg, __v));
<         -: 2307:      }
<         -: 2308:
<         -: 2309:#if __cplusplus >= 201103L
---
>         -: 2263:    }
>         -: 2264:
>         -: 2265:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2266:           typename _Compare, typename _Alloc>
>         -: 2267:#if __cplusplus >= 201103L
>         -: 2268:    template<typename _Arg, typename _NodeGen>
>         -: 2269:#else
>         -: 2270:    template<typename _NodeGen>
>         -: 2271:#endif
>         -: 2272:      typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
>         -: 2273:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2274:      _M_insert_equal_(const_iterator __position,
>         -: 2275:#if __cplusplus >= 201103L
>         -: 2276:		       _Arg&& __v,
>         -: 2277:#else
>         -: 2278:		       const _Val& __v,
>         -: 2279:#endif
>         -: 2280:		       _NodeGen& __node_gen)
>         -: 2281:      {
>         -: 2282:	pair<_Base_ptr, _Base_ptr> __res
>         -: 2283:	  = _M_get_insert_hint_equal_pos(__position, _KeyOfValue()(__v));
>         -: 2284:
>         -: 2285:	if (__res.second)
>         -: 2286:	  return _M_insert_(__res.first, __res.second,
>         -: 2287:			    _GLIBCXX_FORWARD(_Arg, __v),
>         -: 2288:			    __node_gen);
>         -: 2289:
>         -: 2290:	return _M_insert_equal_lower(_GLIBCXX_FORWARD(_Arg, __v));
>         -: 2291:      }
>         -: 2292:
>         -: 2293:#if __cplusplus >= 201103L
>         -: 2294:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2295:           typename _Compare, typename _Alloc>
>         -: 2296:    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
>     #####: 2297:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2298:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
>         -: 2299:    {
>     #####: 2300:      bool __insert_left = (__x != 0 || __p == _M_end()
>     #####: 2301:			    || _M_impl._M_key_compare(_S_key(__z),
>         -: 2302:						      _S_key(__p)));
>         -: 2303:
>     #####: 2304:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
>         -: 2305:				    this->_M_impl._M_header);
>     #####: 2306:      ++_M_impl._M_node_count;
>     #####: 2307:      return iterator(__z);
>         -: 2308:    }
>         -: 2309:
10858c2313
<         -: 2311:	   typename _Compare, typename _Alloc>
---
>         -: 2311:           typename _Compare, typename _Alloc>
10860,10917c2315,2316
<      520*: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
<         -: 2315:    {
<      516*: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<     1036*: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
<         -: 2319:
<      520*: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<      520*: 2321:				    this->_M_impl._M_header);
<      520*: 2322:      ++_M_impl._M_node_count;
<      520*: 2323:      return iterator(__z);
<         -: 2324:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS9_E:
<        18: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
<         -: 2315:    {
<        18: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<       36*: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
<         -: 2319:
<        18: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<        18: 2321:				    this->_M_impl._M_header);
<        18: 2322:      ++_M_impl._M_node_count;
<        18: 2323:      return iterator(__z);
<         -: 2324:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSK_PSt13_Rb_tree_nodeISC_E:
<     #####: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
<         -: 2315:    {
<     #####: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<     #####: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
<         -: 2319:
<     #####: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<     #####: 2321:				    this->_M_impl._M_header);
<     #####: 2322:      ++_M_impl._M_node_count;
<     #####: 2323:      return iterator(__z);
<         -: 2324:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSE_PSt13_Rb_tree_nodeIS6_E:
<     #####: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
<         -: 2315:    {
<     #####: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<     #####: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
<         -: 2319:
<     #####: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<     #####: 2321:				    this->_M_impl._M_header);
<     #####: 2322:      ++_M_impl._M_node_count;
<     #####: 2323:      return iterator(__z);
<         -: 2324:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISI_E:
<     #####: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
---
>         -: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2314:    _M_insert_lower_node(_Base_ptr __p, _Link_type __z)
10919,10921c2318,2320
<     #####: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<     #####: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
---
>         -: 2316:      bool __insert_left = (__p == _M_end()
>         -: 2317:			    || !_M_impl._M_key_compare(_S_key(__p),
>         -: 2318:						       _S_key(__z)));
10923,10926c2322,2325
<     #####: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<     #####: 2321:				    this->_M_impl._M_header);
<     #####: 2322:      ++_M_impl._M_node_count;
<     #####: 2323:      return iterator(__z);
---
>         -: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
>         -: 2321:				    this->_M_impl._M_header);
>         -: 2322:      ++_M_impl._M_node_count;
>         -: 2323:      return iterator(__z);
10928,11124d2326
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSL_PSt13_Rb_tree_nodeISD_E:
<       208: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
<         -: 2315:    {
<       208: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<       416: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
<         -: 2319:
<       208: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<       208: 2321:				    this->_M_impl._M_header);
<       208: 2322:      ++_M_impl._M_node_count;
<       208: 2323:      return iterator(__z);
<         -: 2324:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E:
<     #####: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
<         -: 2315:    {
<     #####: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<     #####: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
<         -: 2319:
<     #####: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<     #####: 2321:				    this->_M_impl._M_header);
<     #####: 2322:      ++_M_impl._M_node_count;
<     #####: 2323:      return iterator(__z);
<         -: 2324:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSL_PSt13_Rb_tree_nodeISD_E:
<       178: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
<         -: 2315:    {
<       178: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<       356: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
<         -: 2319:
<       178: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<       178: 2321:				    this->_M_impl._M_header);
<       178: 2322:      ++_M_impl._M_node_count;
<       178: 2323:      return iterator(__z);
<         -: 2324:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSJ_PSt13_Rb_tree_nodeISB_E:
<     #####: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
<         -: 2315:    {
<     #####: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<     #####: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
<         -: 2319:
<     #####: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<     #####: 2321:				    this->_M_impl._M_header);
<     #####: 2322:      ++_M_impl._M_node_count;
<     #####: 2323:      return iterator(__z);
<         -: 2324:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSF_PSt13_Rb_tree_nodeIS7_E:
<         8: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
<         -: 2315:    {
<         8: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<       16*: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
<         -: 2319:
<         8: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<         8: 2321:				    this->_M_impl._M_header);
<         8: 2322:      ++_M_impl._M_node_count;
<         8: 2323:      return iterator(__z);
<         -: 2324:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSF_PSt13_Rb_tree_nodeIS8_E:
<        18: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
<         -: 2315:    {
<        18: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<       36*: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
<         -: 2319:
<        18: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<        18: 2321:				    this->_M_impl._M_header);
<        18: 2322:      ++_M_impl._M_node_count;
<        18: 2323:      return iterator(__z);
<         -: 2324:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSF_PSt13_Rb_tree_nodeIS8_E:
<        18: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
<         -: 2315:    {
<        18: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<        36: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
<         -: 2319:
<        18: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<        18: 2321:				    this->_M_impl._M_header);
<        18: 2322:      ++_M_impl._M_node_count;
<        18: 2323:      return iterator(__z);
<         -: 2324:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSF_PSt13_Rb_tree_nodeIS7_E:
<     #####: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
<         -: 2315:    {
<     #####: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<     #####: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
<         -: 2319:
<     #####: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<     #####: 2321:				    this->_M_impl._M_header);
<     #####: 2322:      ++_M_impl._M_node_count;
<     #####: 2323:      return iterator(__z);
<         -: 2324:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSF_PSt13_Rb_tree_nodeIS8_E:
<        27: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
<         -: 2315:    {
<        27: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<        54: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
<         -: 2319:
<        27: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<        27: 2321:				    this->_M_impl._M_header);
<        27: 2322:      ++_M_impl._M_node_count;
<        27: 2323:      return iterator(__z);
<         -: 2324:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSF_PSt13_Rb_tree_nodeIS8_E:
<        18: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
<         -: 2315:    {
<        16: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<        34: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
<         -: 2319:
<        18: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<        18: 2321:				    this->_M_impl._M_header);
<        18: 2322:      ++_M_impl._M_node_count;
<        18: 2323:      return iterator(__z);
<         -: 2324:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSF_PSt13_Rb_tree_nodeIS8_E:
<     #####: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
<         -: 2315:    {
<     #####: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<     #####: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
<         -: 2319:
<     #####: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<     #####: 2321:				    this->_M_impl._M_header);
<     #####: 2322:      ++_M_impl._M_node_count;
<     #####: 2323:      return iterator(__z);
<         -: 2324:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSF_PSt13_Rb_tree_nodeIS8_E:
<     #####: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
<         -: 2315:    {
<     #####: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<     #####: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
<         -: 2319:
<     #####: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<     #####: 2321:				    this->_M_impl._M_header);
<     #####: 2322:      ++_M_impl._M_node_count;
<     #####: 2323:      return iterator(__z);
<         -: 2324:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSF_PSt13_Rb_tree_nodeIS9_E:
<        18: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
<         -: 2315:    {
<        16: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<        34: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
<         -: 2319:
<        18: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<        18: 2321:				    this->_M_impl._M_header);
<        18: 2322:      ++_M_impl._M_node_count;
<        18: 2323:      return iterator(__z);
<         -: 2324:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSF_PSt13_Rb_tree_nodeIS8_E:
<         9: 2313:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2314:    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
<         -: 2315:    {
<         9: 2316:      bool __insert_left = (__x != 0 || __p == _M_end()
<        18: 2317:			    || _M_impl._M_key_compare(_S_key(__z),
<         -: 2318:						      _S_key(__p)));
<         -: 2319:
<         9: 2320:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<         9: 2321:				    this->_M_impl._M_header);
<         9: 2322:      ++_M_impl._M_node_count;
<         9: 2323:      return iterator(__z);
<         -: 2324:    }
< ------------------
11127c2329
<         -: 2327:	   typename _Compare, typename _Alloc>
---
>         -: 2327:           typename _Compare, typename _Alloc>
11130c2332
<         -: 2330:    _M_insert_lower_node(_Base_ptr __p, _Link_type __z)
---
>         -: 2330:    _M_insert_equal_lower_node(_Link_type __z)
11132,11271c2334,2381
<         -: 2332:      bool __insert_left = (__p == _M_end()
<         -: 2333:			    || !_M_impl._M_key_compare(_S_key(__p),
<         -: 2334:						       _S_key(__z)));
<         -: 2335:
<         -: 2336:      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
<         -: 2337:				    this->_M_impl._M_header);
<         -: 2338:      ++_M_impl._M_node_count;
<         -: 2339:      return iterator(__z);
<         -: 2340:    }
<         -: 2341:
<         -: 2342:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2343:	   typename _Compare, typename _Alloc>
<         -: 2344:    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
<         -: 2345:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2346:    _M_insert_equal_lower_node(_Link_type __z)
<         -: 2347:    {
<         -: 2348:      _Link_type __x = _M_begin();
<         -: 2349:      _Base_ptr __y = _M_end();
<         -: 2350:      while (__x != 0)
<         -: 2351:	{
<         -: 2352:	  __y = __x;
<         -: 2353:	  __x = !_M_impl._M_key_compare(_S_key(__x), _S_key(__z)) ?
<         -: 2354:		_S_left(__x) : _S_right(__x);
<         -: 2355:	}
<         -: 2356:      return _M_insert_lower_node(__y, __z);
<         -: 2357:    }
<         -: 2358:
<         -: 2359:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2360:	   typename _Compare, typename _Alloc>
<         -: 2361:    template<typename... _Args>
<         -: 2362:      pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
<         -: 2363:			     _Compare, _Alloc>::iterator, bool>
<       62*: 2364:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2365:      _M_emplace_unique(_Args&&... __args)
<         -: 2366:      {
<       62*: 2367:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2368:
<         -: 2369:	__try
<         -: 2370:	  {
<         -: 2371:	    typedef pair<iterator, bool> _Res;
<       62*: 2372:	    auto __res = _M_get_insert_unique_pos(_S_key(__z));
<       62*: 2373:	    if (__res.second)
<       62*: 2374:	      return _Res(_M_insert_node(__res.first, __res.second, __z), true);
<         -: 2375:	
<     #####: 2376:	    _M_drop_node(__z);
<     #####: 2377:	    return _Res(iterator(__res.first), false);
<         -: 2378:	  }
<     =====: 2379:	__catch(...)
<         -: 2380:	  {
<     =====: 2381:	    _M_drop_node(__z);
<     =====: 2382:	    __throw_exception_again;
<         -: 2383:	  }
<         -: 2384:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE17_M_emplace_uniqueIJS3_IS2_S7_EEEES3_ISt17_Rb_tree_iteratorIS8_EbEDpOT_:
<         9: 2364:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2365:      _M_emplace_unique(_Args&&... __args)
<         -: 2366:      {
<         9: 2367:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2368:
<         -: 2369:	__try
<         -: 2370:	  {
<         -: 2371:	    typedef pair<iterator, bool> _Res;
<         9: 2372:	    auto __res = _M_get_insert_unique_pos(_S_key(__z));
<         9: 2373:	    if (__res.second)
<         9: 2374:	      return _Res(_M_insert_node(__res.first, __res.second, __z), true);
<         -: 2375:	
<     #####: 2376:	    _M_drop_node(__z);
<     #####: 2377:	    return _Res(iterator(__res.first), false);
<         -: 2378:	  }
<     =====: 2379:	__catch(...)
<         -: 2380:	  {
<     =====: 2381:	    _M_drop_node(__z);
<     =====: 2382:	    __throw_exception_again;
<         -: 2383:	  }
<         -: 2384:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE17_M_emplace_uniqueIJS3_IS2_S7_EEEES3_ISt17_Rb_tree_iteratorIS8_EbEDpOT_:
<     #####: 2364:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2365:      _M_emplace_unique(_Args&&... __args)
<         -: 2366:      {
<     #####: 2367:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2368:
<         -: 2369:	__try
<         -: 2370:	  {
<         -: 2371:	    typedef pair<iterator, bool> _Res;
<     #####: 2372:	    auto __res = _M_get_insert_unique_pos(_S_key(__z));
<     #####: 2373:	    if (__res.second)
<     #####: 2374:	      return _Res(_M_insert_node(__res.first, __res.second, __z), true);
<         -: 2375:	
<     #####: 2376:	    _M_drop_node(__z);
<     #####: 2377:	    return _Res(iterator(__res.first), false);
<         -: 2378:	  }
<     =====: 2379:	__catch(...)
<         -: 2380:	  {
<     =====: 2381:	    _M_drop_node(__z);
<     =====: 2382:	    __throw_exception_again;
<         -: 2383:	  }
<         -: 2384:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE17_M_emplace_uniqueIJS3_IS2_S7_EEEES3_ISt17_Rb_tree_iteratorIS8_EbEDpOT_:
<        27: 2364:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2365:      _M_emplace_unique(_Args&&... __args)
<         -: 2366:      {
<        27: 2367:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2368:
<         -: 2369:	__try
<         -: 2370:	  {
<         -: 2371:	    typedef pair<iterator, bool> _Res;
<        27: 2372:	    auto __res = _M_get_insert_unique_pos(_S_key(__z));
<        27: 2373:	    if (__res.second)
<        27: 2374:	      return _Res(_M_insert_node(__res.first, __res.second, __z), true);
<         -: 2375:	
<     #####: 2376:	    _M_drop_node(__z);
<     #####: 2377:	    return _Res(iterator(__res.first), false);
<         -: 2378:	  }
<     =====: 2379:	__catch(...)
<         -: 2380:	  {
<     =====: 2381:	    _M_drop_node(__z);
<     =====: 2382:	    __throw_exception_again;
<         -: 2383:	  }
<         -: 2384:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE17_M_emplace_uniqueIJS3_IS2_S8_EEEES3_ISt17_Rb_tree_iteratorIS9_EbEDpOT_:
<        18: 2364:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2365:      _M_emplace_unique(_Args&&... __args)
<         -: 2366:      {
<        18: 2367:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2368:
<         -: 2369:	__try
<         -: 2370:	  {
<         -: 2371:	    typedef pair<iterator, bool> _Res;
<        18: 2372:	    auto __res = _M_get_insert_unique_pos(_S_key(__z));
<        18: 2373:	    if (__res.second)
<        18: 2374:	      return _Res(_M_insert_node(__res.first, __res.second, __z), true);
<         -: 2375:	
<     #####: 2376:	    _M_drop_node(__z);
<     #####: 2377:	    return _Res(iterator(__res.first), false);
<         -: 2378:	  }
<     =====: 2379:	__catch(...)
---
>         -: 2332:      _Link_type __x = _M_begin();
>         -: 2333:      _Base_ptr __y = _M_end();
>         -: 2334:      while (__x != 0)
>         -: 2335:	{
>         -: 2336:	  __y = __x;
>         -: 2337:	  __x = !_M_impl._M_key_compare(_S_key(__x), _S_key(__z)) ?
>         -: 2338:	        _S_left(__x) : _S_right(__x);
>         -: 2339:	}
>         -: 2340:      return _M_insert_lower_node(__y, __z);
>         -: 2341:    }
>         -: 2342:
>         -: 2343:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2344:           typename _Compare, typename _Alloc>
>         -: 2345:    template<typename... _Args>
>         -: 2346:      pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
>         -: 2347:			     _Compare, _Alloc>::iterator, bool>
>     #####: 2348:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2349:      _M_emplace_unique(_Args&&... __args)
>         -: 2350:      {
>     #####: 2351:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
>         -: 2352:
>         -: 2353:	__try
>         -: 2354:	  {
>         -: 2355:	    typedef pair<iterator, bool> _Res;
>     #####: 2356:	    auto __res = _M_get_insert_unique_pos(_S_key(__z));
>     #####: 2357:	    if (__res.second)
>     #####: 2358:	      return _Res(_M_insert_node(__res.first, __res.second, __z), true);
>         -: 2359:	
>     #####: 2360:	    _M_drop_node(__z);
>     #####: 2361:	    return _Res(iterator(__res.first), false);
>         -: 2362:	  }
>     =====: 2363:	__catch(...)
>         -: 2364:	  {
>     =====: 2365:	    _M_drop_node(__z);
>     =====: 2366:	    __throw_exception_again;
>         -: 2367:	  }
>         -: 2368:      }
>         -: 2369:
>         -: 2370:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2371:           typename _Compare, typename _Alloc>
>         -: 2372:    template<typename... _Args>
>         -: 2373:      typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
>         -: 2374:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2375:      _M_emplace_equal(_Args&&... __args)
>         -: 2376:      {
>         -: 2377:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
>         -: 2378:
>         -: 2379:	__try
11273,11274c2383,2384
<     =====: 2381:	    _M_drop_node(__z);
<     =====: 2382:	    __throw_exception_again;
---
>         -: 2381:	    auto __res = _M_get_insert_equal_pos(_S_key(__z));
>         -: 2382:	    return _M_insert_node(__res.first, __res.second, __z);
11276,11316c2386,2402
<         -: 2384:      }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE17_M_emplace_uniqueIJRS7_EEES0_ISt17_Rb_tree_iteratorIS7_EbEDpOT_:
<         8: 2364:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2365:      _M_emplace_unique(_Args&&... __args)
<         -: 2366:      {
<         8: 2367:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2368:
<         -: 2369:	__try
<         -: 2370:	  {
<         -: 2371:	    typedef pair<iterator, bool> _Res;
<         8: 2372:	    auto __res = _M_get_insert_unique_pos(_S_key(__z));
<         8: 2373:	    if (__res.second)
<         8: 2374:	      return _Res(_M_insert_node(__res.first, __res.second, __z), true);
<         -: 2375:	
<     #####: 2376:	    _M_drop_node(__z);
<     #####: 2377:	    return _Res(iterator(__res.first), false);
<         -: 2378:	  }
<     =====: 2379:	__catch(...)
<         -: 2380:	  {
<     =====: 2381:	    _M_drop_node(__z);
<     =====: 2382:	    __throw_exception_again;
<         -: 2383:	  }
<         -: 2384:      }
< ------------------
<         -: 2385:
<         -: 2386:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2387:	   typename _Compare, typename _Alloc>
<         -: 2388:    template<typename... _Args>
<         -: 2389:      typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
<         -: 2390:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2391:      _M_emplace_equal(_Args&&... __args)
<         -: 2392:      {
<         -: 2393:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2394:
<         -: 2395:	__try
<         -: 2396:	  {
<         -: 2397:	    auto __res = _M_get_insert_equal_pos(_S_key(__z));
<         -: 2398:	    return _M_insert_node(__res.first, __res.second, __z);
<         -: 2399:	  }
<         -: 2400:	__catch(...)
---
>         -: 2384:	__catch(...)
>         -: 2385:	  {
>         -: 2386:	    _M_drop_node(__z);
>         -: 2387:	    __throw_exception_again;
>         -: 2388:	  }
>         -: 2389:      }
>         -: 2390:
>         -: 2391:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2392:           typename _Compare, typename _Alloc>
>         -: 2393:    template<typename... _Args>
>         -: 2394:      typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
>     #####: 2395:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2396:      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
>         -: 2397:      {
>     #####: 2398:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
>         -: 2399:
>         -: 2400:	__try
11318,11321c2404,2407
<         -: 2402:	    _M_drop_node(__z);
<         -: 2403:	    __throw_exception_again;
<         -: 2404:	  }
<         -: 2405:      }
---
>     #####: 2402:	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
>         -: 2403:
>     #####: 2404:	    if (__res.second)
>     #####: 2405:	      return _M_insert_node(__res.first, __res.second, __z);
11323,11664c2409,2428
<         -: 2407:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2408:	   typename _Compare, typename _Alloc>
<         -: 2409:    template<typename... _Args>
<         -: 2410:      typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
<      458*: 2411:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2412:      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
<         -: 2413:      {
<      458*: 2414:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2415:
<         -: 2416:	__try
<         -: 2417:	  {
<      458*: 2418:	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
<         -: 2419:
<      458*: 2420:	    if (__res.second)
<      458*: 2421:	      return _M_insert_node(__res.first, __res.second, __z);
<         -: 2422:
<     #####: 2423:	    _M_drop_node(__z);
<     #####: 2424:	    return iterator(__res.first);
<         -: 2425:	  }
<     =====: 2426:	__catch(...)
<         -: 2427:	  {
<     =====: 2428:	    _M_drop_node(__z);
<     =====: 2429:	    __throw_exception_again;
<         -: 2430:	  }
<         -: 2431:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_11DataLinkSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESI_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_:
<        18: 2411:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2412:      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
<         -: 2413:      {
<        18: 2414:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2415:
<         -: 2416:	__try
<         -: 2417:	  {
<        18: 2418:	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
<         -: 2419:
<        18: 2420:	    if (__res.second)
<        18: 2421:	      return _M_insert_node(__res.first, __res.second, __z);
<         -: 2422:
<     #####: 2423:	    _M_drop_node(__z);
<     #####: 2424:	    return iterator(__res.first);
<         -: 2425:	  }
<     =====: 2426:	__catch(...)
<         -: 2427:	  {
<     =====: 2428:	    _M_drop_node(__z);
<     =====: 2429:	    __throw_exception_again;
<         -: 2430:	  }
<         -: 2431:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESI_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_:
<        18: 2411:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2412:      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
<         -: 2413:      {
<        18: 2414:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2415:
<         -: 2416:	__try
<         -: 2417:	  {
<        18: 2418:	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
<         -: 2419:
<        18: 2420:	    if (__res.second)
<        18: 2421:	      return _M_insert_node(__res.first, __res.second, __z);
<         -: 2422:
<     #####: 2423:	    _M_drop_node(__z);
<     #####: 2424:	    return iterator(__res.first);
<         -: 2425:	  }
<     =====: 2426:	__catch(...)
<         -: 2427:	  {
<     =====: 2428:	    _M_drop_node(__z);
<     =====: 2429:	    __throw_exception_again;
<         -: 2430:	  }
<         -: 2431:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESI_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_:
<     #####: 2411:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2412:      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
<         -: 2413:      {
<     #####: 2414:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2415:
<         -: 2416:	__try
<         -: 2417:	  {
<     #####: 2418:	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
<         -: 2419:
<     #####: 2420:	    if (__res.second)
<     #####: 2421:	      return _M_insert_node(__res.first, __res.second, __z);
<         -: 2422:
<     #####: 2423:	    _M_drop_node(__z);
<     #####: 2424:	    return iterator(__res.first);
<         -: 2425:	  }
<     =====: 2426:	__catch(...)
<         -: 2427:	  {
<     =====: 2428:	    _M_drop_node(__z);
<     =====: 2429:	    __throw_exception_again;
<         -: 2430:	  }
<         -: 2431:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESI_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_:
<        18: 2411:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2412:      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
<         -: 2413:      {
<        18: 2414:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2415:
<         -: 2416:	__try
<         -: 2417:	  {
<        18: 2418:	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
<         -: 2419:
<        18: 2420:	    if (__res.second)
<        18: 2421:	      return _M_insert_node(__res.first, __res.second, __z);
<         -: 2422:
<     #####: 2423:	    _M_drop_node(__z);
<     #####: 2424:	    return iterator(__res.first);
<         -: 2425:	  }
<     =====: 2426:	__catch(...)
<         -: 2427:	  {
<     =====: 2428:	    _M_drop_node(__z);
<     =====: 2429:	    __throw_exception_again;
<         -: 2430:	  }
<         -: 2431:      }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESI_IJEEEEESt17_Rb_tree_iteratorIS7_ESt23_Rb_tree_const_iteratorIS7_EDpOT_:
<     #####: 2411:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2412:      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
<         -: 2413:      {
<     #####: 2414:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2415:
<         -: 2416:	__try
<         -: 2417:	  {
<     #####: 2418:	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
<         -: 2419:
<     #####: 2420:	    if (__res.second)
<     #####: 2421:	      return _M_insert_node(__res.first, __res.second, __z);
<         -: 2422:
<     #####: 2423:	    _M_drop_node(__z);
<     #####: 2424:	    return iterator(__res.first);
<         -: 2425:	  }
<     =====: 2426:	__catch(...)
<         -: 2427:	  {
<     =====: 2428:	    _M_drop_node(__z);
<     =====: 2429:	    __throw_exception_again;
<         -: 2430:	  }
<         -: 2431:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESI_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_:
<        18: 2411:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2412:      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
<         -: 2413:      {
<        18: 2414:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2415:
<         -: 2416:	__try
<         -: 2417:	  {
<        18: 2418:	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
<         -: 2419:
<        18: 2420:	    if (__res.second)
<        18: 2421:	      return _M_insert_node(__res.first, __res.second, __z);
<         -: 2422:
<     #####: 2423:	    _M_drop_node(__z);
<     #####: 2424:	    return iterator(__res.first);
<         -: 2425:	  }
<     =====: 2426:	__catch(...)
<         -: 2427:	  {
<     =====: 2428:	    _M_drop_node(__z);
<     =====: 2429:	    __throw_exception_again;
<         -: 2430:	  }
<         -: 2431:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_:
<     #####: 2411:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2412:      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
<         -: 2413:      {
<     #####: 2414:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2415:
<         -: 2416:	__try
<         -: 2417:	  {
<     #####: 2418:	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
<         -: 2419:
<     #####: 2420:	    if (__res.second)
<     #####: 2421:	      return _M_insert_node(__res.first, __res.second, __z);
<         -: 2422:
<     #####: 2423:	    _M_drop_node(__z);
<     #####: 2424:	    return iterator(__res.first);
<         -: 2425:	  }
<     =====: 2426:	__catch(...)
<         -: 2427:	  {
<     =====: 2428:	    _M_drop_node(__z);
<     =====: 2429:	    __throw_exception_again;
<         -: 2430:	  }
<         -: 2431:      }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESO_IJEEEEESt17_Rb_tree_iteratorISD_ESt23_Rb_tree_const_iteratorISD_EDpOT_:
<        89: 2411:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2412:      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
<         -: 2413:      {
<        89: 2414:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2415:
<         -: 2416:	__try
<         -: 2417:	  {
<        89: 2418:	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
<         -: 2419:
<        89: 2420:	    if (__res.second)
<        89: 2421:	      return _M_insert_node(__res.first, __res.second, __z);
<         -: 2422:
<     #####: 2423:	    _M_drop_node(__z);
<     #####: 2424:	    return iterator(__res.first);
<         -: 2425:	  }
<     =====: 2426:	__catch(...)
<         -: 2427:	  {
<     =====: 2428:	    _M_drop_node(__z);
<     =====: 2429:	    __throw_exception_again;
<         -: 2430:	  }
<         -: 2431:      }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESO_IJEEEEESt17_Rb_tree_iteratorISD_ESt23_Rb_tree_const_iteratorISD_EDpOT_:
<       178: 2411:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2412:      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
<         -: 2413:      {
<       178: 2414:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2415:
<         -: 2416:	__try
<         -: 2417:	  {
<       178: 2418:	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
<         -: 2419:
<       178: 2420:	    if (__res.second)
<       178: 2421:	      return _M_insert_node(__res.first, __res.second, __z);
<         -: 2422:
<     #####: 2423:	    _M_drop_node(__z);
<     #####: 2424:	    return iterator(__res.first);
<         -: 2425:	  }
<     =====: 2426:	__catch(...)
<         -: 2427:	  {
<     =====: 2428:	    _M_drop_node(__z);
<     =====: 2429:	    __throw_exception_again;
<         -: 2430:	  }
<         -: 2431:      }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_:
<     #####: 2411:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2412:      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
<         -: 2413:      {
<     #####: 2414:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2415:
<         -: 2416:	__try
<         -: 2417:	  {
<     #####: 2418:	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
<         -: 2419:
<     #####: 2420:	    if (__res.second)
<     #####: 2421:	      return _M_insert_node(__res.first, __res.second, __z);
<         -: 2422:
<     #####: 2423:	    _M_drop_node(__z);
<     #####: 2424:	    return iterator(__res.first);
<         -: 2425:	  }
<     =====: 2426:	__catch(...)
<         -: 2427:	  {
<     =====: 2428:	    _M_drop_node(__z);
<     =====: 2429:	    __throw_exception_again;
<         -: 2430:	  }
<         -: 2431:      }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESO_IJEEEEESt17_Rb_tree_iteratorISD_ESt23_Rb_tree_const_iteratorISD_EDpOT_:
<       119: 2411:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2412:      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
<         -: 2413:      {
<       119: 2414:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2415:
<         -: 2416:	__try
<         -: 2417:	  {
<       119: 2418:	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
<         -: 2419:
<       119: 2420:	    if (__res.second)
<       119: 2421:	      return _M_insert_node(__res.first, __res.second, __z);
<         -: 2422:
<     #####: 2423:	    _M_drop_node(__z);
<     #####: 2424:	    return iterator(__res.first);
<         -: 2425:	  }
<     =====: 2426:	__catch(...)
<         -: 2427:	  {
<     =====: 2428:	    _M_drop_node(__z);
<     =====: 2429:	    __throw_exception_again;
<         -: 2430:	  }
<         -: 2431:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESR_IJEEEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_EDpOT_:
<     #####: 2411:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2412:      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
<         -: 2413:      {
<     #####: 2414:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2415:
<         -: 2416:	__try
<         -: 2417:	  {
<     #####: 2418:	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
<         -: 2419:
<     #####: 2420:	    if (__res.second)
<     #####: 2421:	      return _M_insert_node(__res.first, __res.second, __z);
<         -: 2422:
<     #####: 2423:	    _M_drop_node(__z);
<     #####: 2424:	    return iterator(__res.first);
<         -: 2425:	  }
<     =====: 2426:	__catch(...)
<         -: 2427:	  {
<     =====: 2428:	    _M_drop_node(__z);
<     =====: 2429:	    __throw_exception_again;
<         -: 2430:	  }
<         -: 2431:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_:
<     #####: 2411:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2412:      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
<         -: 2413:      {
<     #####: 2414:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2415:
<         -: 2416:	__try
<         -: 2417:	  {
<     #####: 2418:	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
<         -: 2419:
<     #####: 2420:	    if (__res.second)
<     #####: 2421:	      return _M_insert_node(__res.first, __res.second, __z);
<         -: 2422:
<     #####: 2423:	    _M_drop_node(__z);
<     #####: 2424:	    return iterator(__res.first);
<         -: 2425:	  }
<     =====: 2426:	__catch(...)
<         -: 2427:	  {
<     =====: 2428:	    _M_drop_node(__z);
<     =====: 2429:	    __throw_exception_again;
<         -: 2430:	  }
<         -: 2431:      }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESN_IJEEEEESt17_Rb_tree_iteratorISC_ESt23_Rb_tree_const_iteratorISC_EDpOT_:
<     #####: 2411:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2412:      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
<         -: 2413:      {
<     #####: 2414:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2415:
<         -: 2416:	__try
<         -: 2417:	  {
<     #####: 2418:	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
<         -: 2419:
<     #####: 2420:	    if (__res.second)
<     #####: 2421:	      return _M_insert_node(__res.first, __res.second, __z);
<         -: 2422:
<     #####: 2423:	    _M_drop_node(__z);
<     #####: 2424:	    return iterator(__res.first);
<         -: 2425:	  }
<     =====: 2426:	__catch(...)
---
>     #####: 2407:	    _M_drop_node(__z);
>     #####: 2408:	    return iterator(__res.first);
>         -: 2409:	  }
>     =====: 2410:	__catch(...)
>         -: 2411:	  {
>     =====: 2412:	    _M_drop_node(__z);
>     =====: 2413:	    __throw_exception_again;
>         -: 2414:	  }
>         -: 2415:      }
>         -: 2416:
>         -: 2417:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2418:           typename _Compare, typename _Alloc>
>         -: 2419:    template<typename... _Args>
>         -: 2420:      typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
>         -: 2421:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2422:      _M_emplace_hint_equal(const_iterator __pos, _Args&&... __args)
>         -: 2423:      {
>         -: 2424:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
>         -: 2425:
>         -: 2426:	__try
11666,11670c2430,2433
<     =====: 2428:	    _M_drop_node(__z);
<     =====: 2429:	    __throw_exception_again;
<         -: 2430:	  }
<         -: 2431:      }
< ------------------
---
>         -: 2428:	    auto __res = _M_get_insert_hint_equal_pos(__pos, _S_key(__z));
>         -: 2429:
>         -: 2430:	    if (__res.second)
>         -: 2431:	      return _M_insert_node(__res.first, __res.second, __z);
11672,12449c2435,2595
<         -: 2433:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2434:	   typename _Compare, typename _Alloc>
<         -: 2435:    template<typename... _Args>
<         -: 2436:      typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
<         -: 2437:      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2438:      _M_emplace_hint_equal(const_iterator __pos, _Args&&... __args)
<         -: 2439:      {
<         -: 2440:	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
<         -: 2441:
<         -: 2442:	__try
<         -: 2443:	  {
<         -: 2444:	    auto __res = _M_get_insert_hint_equal_pos(__pos, _S_key(__z));
<         -: 2445:
<         -: 2446:	    if (__res.second)
<         -: 2447:	      return _M_insert_node(__res.first, __res.second, __z);
<         -: 2448:
<         -: 2449:	    return _M_insert_equal_lower_node(__z);
<         -: 2450:	  }
<         -: 2451:	__catch(...)
<         -: 2452:	  {
<         -: 2453:	    _M_drop_node(__z);
<         -: 2454:	    __throw_exception_again;
<         -: 2455:	  }
<         -: 2456:      }
<         -: 2457:#endif
<         -: 2458:
<         -: 2459:  template<typename _Key, typename _Val, typename _KoV,
<         -: 2460:	   typename _Cmp, typename _Alloc>
<         -: 2461:    template<class _II>
<         -: 2462:      void
<         -: 2463:      _Rb_tree<_Key, _Val, _KoV, _Cmp, _Alloc>::
<         -: 2464:      _M_insert_unique(_II __first, _II __last)
<         -: 2465:      {
<         -: 2466:	_Alloc_node __an(*this);
<         -: 2467:	for (; __first != __last; ++__first)
<         -: 2468:	  _M_insert_unique_(end(), *__first, __an);
<         -: 2469:      }
<         -: 2470:
<         -: 2471:  template<typename _Key, typename _Val, typename _KoV,
<         -: 2472:	   typename _Cmp, typename _Alloc>
<         -: 2473:    template<class _II>
<         -: 2474:      void
<         -: 2475:      _Rb_tree<_Key, _Val, _KoV, _Cmp, _Alloc>::
<         -: 2476:      _M_insert_equal(_II __first, _II __last)
<         -: 2477:      {
<         -: 2478:	_Alloc_node __an(*this);
<         -: 2479:	for (; __first != __last; ++__first)
<         -: 2480:	  _M_insert_equal_(end(), *__first, __an);
<         -: 2481:      }
<         -: 2482:
<         -: 2483:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2484:	   typename _Compare, typename _Alloc>
<         -: 2485:    void
<       82*: 2486:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2487:    _M_erase_aux(const_iterator __position)
<         -: 2488:    {
<         -: 2489:      _Link_type __y =
<         -: 2490:	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
<       82*: 2491:				(const_cast<_Base_ptr>(__position._M_node),
<       82*: 2492:				 this->_M_impl._M_header));
<       82*: 2493:      _M_drop_node(__y);
<       82*: 2494:      --_M_impl._M_node_count;
<       82*: 2495:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_E:
<     #####: 2486:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2487:    _M_erase_aux(const_iterator __position)
<         -: 2488:    {
<         -: 2489:      _Link_type __y =
<         -: 2490:	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
<     #####: 2491:				(const_cast<_Base_ptr>(__position._M_node),
<     #####: 2492:				 this->_M_impl._M_header));
<     #####: 2493:      _M_drop_node(__y);
<     #####: 2494:      --_M_impl._M_node_count;
<     #####: 2495:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS9_E:
<        12: 2486:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2487:    _M_erase_aux(const_iterator __position)
<         -: 2488:    {
<         -: 2489:      _Link_type __y =
<         -: 2490:	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
<        12: 2491:				(const_cast<_Base_ptr>(__position._M_node),
<        12: 2492:				 this->_M_impl._M_header));
<        12: 2493:      _M_drop_node(__y);
<        12: 2494:      --_M_impl._M_node_count;
<        12: 2495:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS8_E:
<     #####: 2486:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2487:    _M_erase_aux(const_iterator __position)
<         -: 2488:    {
<         -: 2489:      _Link_type __y =
<         -: 2490:	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
<     #####: 2491:				(const_cast<_Base_ptr>(__position._M_node),
<     #####: 2492:				 this->_M_impl._M_header));
<     #####: 2493:      _M_drop_node(__y);
<     #####: 2494:      --_M_impl._M_node_count;
<     #####: 2495:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS8_E:
<     #####: 2486:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2487:    _M_erase_aux(const_iterator __position)
<         -: 2488:    {
<         -: 2489:      _Link_type __y =
<         -: 2490:	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
<     #####: 2491:				(const_cast<_Base_ptr>(__position._M_node),
<     #####: 2492:				 this->_M_impl._M_header));
<     #####: 2493:      _M_drop_node(__y);
<     #####: 2494:      --_M_impl._M_node_count;
<     #####: 2495:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS7_E:
<         4: 2486:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2487:    _M_erase_aux(const_iterator __position)
<         -: 2488:    {
<         -: 2489:      _Link_type __y =
<         -: 2490:	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
<         4: 2491:				(const_cast<_Base_ptr>(__position._M_node),
<         4: 2492:				 this->_M_impl._M_header));
<         4: 2493:      _M_drop_node(__y);
<         4: 2494:      --_M_impl._M_node_count;
<         4: 2495:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS8_E:
<         9: 2486:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2487:    _M_erase_aux(const_iterator __position)
<         -: 2488:    {
<         -: 2489:      _Link_type __y =
<         -: 2490:	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
<         9: 2491:				(const_cast<_Base_ptr>(__position._M_node),
<         9: 2492:				 this->_M_impl._M_header));
<         9: 2493:      _M_drop_node(__y);
<         9: 2494:      --_M_impl._M_node_count;
<         9: 2495:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS8_E:
<        12: 2486:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2487:    _M_erase_aux(const_iterator __position)
<         -: 2488:    {
<         -: 2489:      _Link_type __y =
<         -: 2490:	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
<        12: 2491:				(const_cast<_Base_ptr>(__position._M_node),
<        12: 2492:				 this->_M_impl._M_header));
<        12: 2493:      _M_drop_node(__y);
<        12: 2494:      --_M_impl._M_node_count;
<        12: 2495:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS8_E:
<        18: 2486:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2487:    _M_erase_aux(const_iterator __position)
<         -: 2488:    {
<         -: 2489:      _Link_type __y =
<         -: 2490:	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
<        18: 2491:				(const_cast<_Base_ptr>(__position._M_node),
<        18: 2492:				 this->_M_impl._M_header));
<        18: 2493:      _M_drop_node(__y);
<        18: 2494:      --_M_impl._M_node_count;
<        18: 2495:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS9_E:
<        18: 2486:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2487:    _M_erase_aux(const_iterator __position)
<         -: 2488:    {
<         -: 2489:      _Link_type __y =
<         -: 2490:	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
<        18: 2491:				(const_cast<_Base_ptr>(__position._M_node),
<        18: 2492:				 this->_M_impl._M_header));
<        18: 2493:      _M_drop_node(__y);
<        18: 2494:      --_M_impl._M_node_count;
<        18: 2495:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS8_E:
<     #####: 2486:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2487:    _M_erase_aux(const_iterator __position)
<         -: 2488:    {
<         -: 2489:      _Link_type __y =
<         -: 2490:	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
<     #####: 2491:				(const_cast<_Base_ptr>(__position._M_node),
<     #####: 2492:				 this->_M_impl._M_header));
<     #####: 2493:      _M_drop_node(__y);
<     #####: 2494:      --_M_impl._M_node_count;
<     #####: 2495:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS8_E:
<         9: 2486:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2487:    _M_erase_aux(const_iterator __position)
<         -: 2488:    {
<         -: 2489:      _Link_type __y =
<         -: 2490:	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
<         9: 2491:				(const_cast<_Base_ptr>(__position._M_node),
<         9: 2492:				 this->_M_impl._M_header));
<         9: 2493:      _M_drop_node(__y);
<         9: 2494:      --_M_impl._M_node_count;
<         9: 2495:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS3_E:
<     #####: 2486:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2487:    _M_erase_aux(const_iterator __position)
<         -: 2488:    {
<         -: 2489:      _Link_type __y =
<         -: 2490:	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
<     #####: 2491:				(const_cast<_Base_ptr>(__position._M_node),
<     #####: 2492:				 this->_M_impl._M_header));
<     #####: 2493:      _M_drop_node(__y);
<     #####: 2494:      --_M_impl._M_node_count;
<     #####: 2495:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE12_M_erase_auxESt23_Rb_tree_const_iteratorISB_E:
<     #####: 2486:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2487:    _M_erase_aux(const_iterator __position)
<         -: 2488:    {
<         -: 2489:      _Link_type __y =
<         -: 2490:	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
<     #####: 2491:				(const_cast<_Base_ptr>(__position._M_node),
<     #####: 2492:				 this->_M_impl._M_header));
<     #####: 2493:      _M_drop_node(__y);
<     #####: 2494:      --_M_impl._M_node_count;
<     #####: 2495:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_E:
<     #####: 2486:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2487:    _M_erase_aux(const_iterator __position)
<         -: 2488:    {
<         -: 2489:      _Link_type __y =
<         -: 2490:	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
<     #####: 2491:				(const_cast<_Base_ptr>(__position._M_node),
<     #####: 2492:				 this->_M_impl._M_header));
<     #####: 2493:      _M_drop_node(__y);
<     #####: 2494:      --_M_impl._M_node_count;
<     #####: 2495:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE12_M_erase_auxESt23_Rb_tree_const_iteratorISC_E:
<     #####: 2486:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2487:    _M_erase_aux(const_iterator __position)
<         -: 2488:    {
<         -: 2489:      _Link_type __y =
<         -: 2490:	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
<     #####: 2491:				(const_cast<_Base_ptr>(__position._M_node),
<     #####: 2492:				 this->_M_impl._M_header));
<     #####: 2493:      _M_drop_node(__y);
<     #####: 2494:      --_M_impl._M_node_count;
<     #####: 2495:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE12_M_erase_auxESt23_Rb_tree_const_iteratorISI_E:
<     #####: 2486:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2487:    _M_erase_aux(const_iterator __position)
<         -: 2488:    {
<         -: 2489:      _Link_type __y =
<         -: 2490:	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
<     #####: 2491:				(const_cast<_Base_ptr>(__position._M_node),
<     #####: 2492:				 this->_M_impl._M_header));
<     #####: 2493:      _M_drop_node(__y);
<     #####: 2494:      --_M_impl._M_node_count;
<     #####: 2495:    }
< ------------------
<         -: 2496:
<         -: 2497:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2498:	   typename _Compare, typename _Alloc>
<         -: 2499:    void
<       74*: 2500:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2501:    _M_erase_aux(const_iterator __first, const_iterator __last)
<         -: 2502:    {
<       74*: 2503:      if (__first == begin() && __last == end())
<       46*: 2504:	clear();
<         -: 2505:      else
<       56*: 2506:	while (__first != __last)
<       28*: 2507:	  _M_erase_aux(__first++);
<       74*: 2508:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS8_ESF_:
<     #####: 2500:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2501:    _M_erase_aux(const_iterator __first, const_iterator __last)
<         -: 2502:    {
<     #####: 2503:      if (__first == begin() && __last == end())
<     #####: 2504:	clear();
<         -: 2505:      else
<     #####: 2506:	while (__first != __last)
<     #####: 2507:	  _M_erase_aux(__first++);
<     #####: 2508:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ES9_:
<     #####: 2500:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2501:    _M_erase_aux(const_iterator __first, const_iterator __last)
<         -: 2502:    {
<     #####: 2503:      if (__first == begin() && __last == end())
<     #####: 2504:	clear();
<         -: 2505:      else
<     #####: 2506:	while (__first != __last)
<     #####: 2507:	  _M_erase_aux(__first++);
<     #####: 2508:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS9_ESF_:
<        18: 2500:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2501:    _M_erase_aux(const_iterator __first, const_iterator __last)
<         -: 2502:    {
<        18: 2503:      if (__first == begin() && __last == end())
<         6: 2504:	clear();
<         -: 2505:      else
<        24: 2506:	while (__first != __last)
<        12: 2507:	  _M_erase_aux(__first++);
<        18: 2508:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS8_ESF_:
<     #####: 2500:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2501:    _M_erase_aux(const_iterator __first, const_iterator __last)
<         -: 2502:    {
<     #####: 2503:      if (__first == begin() && __last == end())
<     #####: 2504:	clear();
<         -: 2505:      else
<     #####: 2506:	while (__first != __last)
<     #####: 2507:	  _M_erase_aux(__first++);
<     #####: 2508:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS7_ESF_:
<        10: 2500:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2501:    _M_erase_aux(const_iterator __first, const_iterator __last)
<         -: 2502:    {
<        10: 2503:      if (__first == begin() && __last == end())
<         6: 2504:	clear();
<         -: 2505:      else
<         8: 2506:	while (__first != __last)
<         4: 2507:	  _M_erase_aux(__first++);
<        10: 2508:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS8_ESF_:
<     #####: 2500:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2501:    _M_erase_aux(const_iterator __first, const_iterator __last)
<         -: 2502:    {
<     #####: 2503:      if (__first == begin() && __last == end())
<     #####: 2504:	clear();
<         -: 2505:      else
<     #####: 2506:	while (__first != __last)
<     #####: 2507:	  _M_erase_aux(__first++);
<     #####: 2508:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS8_ESF_:
<        18: 2500:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2501:    _M_erase_aux(const_iterator __first, const_iterator __last)
<         -: 2502:    {
<        18: 2503:      if (__first == begin() && __last == end())
<         6: 2504:	clear();
<         -: 2505:      else
<        24: 2506:	while (__first != __last)
<        12: 2507:	  _M_erase_aux(__first++);
<        18: 2508:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS9_ESG_:
<        28: 2500:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2501:    _M_erase_aux(const_iterator __first, const_iterator __last)
<         -: 2502:    {
<       28*: 2503:      if (__first == begin() && __last == end())
<        28: 2504:	clear();
<         -: 2505:      else
<     #####: 2506:	while (__first != __last)
<     #####: 2507:	  _M_erase_aux(__first++);
<        28: 2508:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE12_M_erase_auxESt23_Rb_tree_const_iteratorISB_ESJ_:
<     #####: 2500:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2501:    _M_erase_aux(const_iterator __first, const_iterator __last)
<         -: 2502:    {
<     #####: 2503:      if (__first == begin() && __last == end())
<     #####: 2504:	clear();
<         -: 2505:      else
<     #####: 2506:	while (__first != __last)
<     #####: 2507:	  _M_erase_aux(__first++);
<     #####: 2508:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS3_ESB_:
<     #####: 2500:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2501:    _M_erase_aux(const_iterator __first, const_iterator __last)
<         -: 2502:    {
<     #####: 2503:      if (__first == begin() && __last == end())
<     #####: 2504:	clear();
<         -: 2505:      else
<     #####: 2506:	while (__first != __last)
<     #####: 2507:	  _M_erase_aux(__first++);
<     #####: 2508:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_:
<     #####: 2500:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2501:    _M_erase_aux(const_iterator __first, const_iterator __last)
<         -: 2502:    {
<     #####: 2503:      if (__first == begin() && __last == end())
<     #####: 2504:	clear();
<         -: 2505:      else
<     #####: 2506:	while (__first != __last)
<     #####: 2507:	  _M_erase_aux(__first++);
<     #####: 2508:    }
< ------------------
<         -: 2509:
<         -: 2510:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2511:	   typename _Compare, typename _Alloc>
<         -: 2512:    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
<       74*: 2513:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2514:    erase(const _Key& __x)
<         -: 2515:    {
<       74*: 2516:      pair<iterator, iterator> __p = equal_range(__x);
<       74*: 2517:      const size_type __old_size = size();
<       74*: 2518:      _M_erase_aux(__p.first, __p.second);
<       74*: 2519:      return __old_size - size();
<         -: 2520:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5eraseERS4_:
<     #####: 2513:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2514:    erase(const _Key& __x)
<         -: 2515:    {
<     #####: 2516:      pair<iterator, iterator> __p = equal_range(__x);
<     #####: 2517:      const size_type __old_size = size();
<     #####: 2518:      _M_erase_aux(__p.first, __p.second);
<     #####: 2519:      return __old_size - size();
<         -: 2520:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tES2_St9_IdentityIS2_ENS1_17GUID_tKeyLessThanESaIS2_EE5eraseERKS2_:
<     #####: 2513:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2514:    erase(const _Key& __x)
<         -: 2515:    {
<     #####: 2516:      pair<iterator, iterator> __p = equal_range(__x);
<     #####: 2517:      const size_type __old_size = size();
<     #####: 2518:      _M_erase_aux(__p.first, __p.second);
<     #####: 2519:      return __old_size - size();
<         -: 2520:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE5eraseERS4_:
<        18: 2513:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2514:    erase(const _Key& __x)
<         -: 2515:    {
<        18: 2516:      pair<iterator, iterator> __p = equal_range(__x);
<        18: 2517:      const size_type __old_size = size();
<        18: 2518:      _M_erase_aux(__p.first, __p.second);
<        18: 2519:      return __old_size - size();
<         -: 2520:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5eraseERS4_:
<     #####: 2513:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2514:    erase(const _Key& __x)
<         -: 2515:    {
<     #####: 2516:      pair<iterator, iterator> __p = equal_range(__x);
<     #####: 2517:      const size_type __old_size = size();
<     #####: 2518:      _M_erase_aux(__p.first, __p.second);
<     #####: 2519:      return __old_size - size();
<         -: 2520:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE5eraseERS1_:
<        10: 2513:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2514:    erase(const _Key& __x)
<         -: 2515:    {
<        10: 2516:      pair<iterator, iterator> __p = equal_range(__x);
<        10: 2517:      const size_type __old_size = size();
<        10: 2518:      _M_erase_aux(__p.first, __p.second);
<        10: 2519:      return __old_size - size();
<         -: 2520:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5eraseERS4_:
<     #####: 2513:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2514:    erase(const _Key& __x)
<         -: 2515:    {
<     #####: 2516:      pair<iterator, iterator> __p = equal_range(__x);
<     #####: 2517:      const size_type __old_size = size();
<     #####: 2518:      _M_erase_aux(__p.first, __p.second);
<     #####: 2519:      return __old_size - size();
<         -: 2520:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE5eraseERS4_:
<        18: 2513:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2514:    erase(const _Key& __x)
<         -: 2515:    {
<        18: 2516:      pair<iterator, iterator> __p = equal_range(__x);
<        18: 2517:      const size_type __old_size = size();
<        18: 2518:      _M_erase_aux(__p.first, __p.second);
<        18: 2519:      return __old_size - size();
<         -: 2520:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE5eraseERS4_:
<        28: 2513:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2514:    erase(const _Key& __x)
<         -: 2515:    {
<        28: 2516:      pair<iterator, iterator> __p = equal_range(__x);
<        28: 2517:      const size_type __old_size = size();
<        28: 2518:      _M_erase_aux(__p.first, __p.second);
<        28: 2519:      return __old_size - size();
<         -: 2520:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE5eraseERS5_:
<     #####: 2513:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2514:    erase(const _Key& __x)
<         -: 2515:    {
<     #####: 2516:      pair<iterator, iterator> __p = equal_range(__x);
<     #####: 2517:      const size_type __old_size = size();
<     #####: 2518:      _M_erase_aux(__p.first, __p.second);
<     #####: 2519:      return __old_size - size();
<         -: 2520:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE5eraseERKS3_:
<     #####: 2513:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2514:    erase(const _Key& __x)
<         -: 2515:    {
<     #####: 2516:      pair<iterator, iterator> __p = equal_range(__x);
<     #####: 2517:      const size_type __old_size = size();
<     #####: 2518:      _M_erase_aux(__p.first, __p.second);
<     #####: 2519:      return __old_size - size();
<         -: 2520:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE5eraseERS4_:
<     #####: 2513:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2514:    erase(const _Key& __x)
<         -: 2515:    {
<     #####: 2516:      pair<iterator, iterator> __p = equal_range(__x);
<     #####: 2517:      const size_type __old_size = size();
<     #####: 2518:      _M_erase_aux(__p.first, __p.second);
<     #####: 2519:      return __old_size - size();
<         -: 2520:    }
< ------------------
<         -: 2521:
<         -: 2522:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2523:	   typename _Compare, typename _Alloc>
<         -: 2524:    void
<         -: 2525:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2526:    erase(const _Key* __first, const _Key* __last)
<         -: 2527:    {
<         -: 2528:      while (__first != __last)
<         -: 2529:	erase(*__first++);
<         -: 2530:    }
<         -: 2531:
<         -: 2532:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2533:	   typename _Compare, typename _Alloc>
<         -: 2534:    typename _Rb_tree<_Key, _Val, _KeyOfValue,
<         -: 2535:		      _Compare, _Alloc>::iterator
<      335*: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<      335*: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<      670*: 2540:      return (__j == end()
<      128*: 2541:	      || _M_impl._M_key_compare(__k,
<      798*: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_15TransportClient12PendingAssocEEEESt10_Select1stIS9_ENS1_17GUID_tKeyLessThanESaIS9_EE4findERS4_:
<        45: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<        45: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<        90: 2540:      return (__j == end()
<        27: 2541:	      || _M_impl._M_key_compare(__k,
<       117: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_St3mapIS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS2_ESaIS3_IS4_SC_EEEESt10_Select1stISI_ESE_SaISI_EE4findERS4_:
<     #####: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<     #####: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<     #####: 2540:      return (__j == end()
<     #####: 2541:	      || _M_impl._M_key_compare(__k,
<     #####: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_S3_IPNS1_10BasicQueueINS1_21TransportQueueElementEEEP17ACE_Message_BlockEESt10_Select1stISC_ESt4lessIS2_ESaISC_EE4findERS4_:
<     #####: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<     #####: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<     #####: 2540:      return (__j == end()
<     #####: 2541:	      || _M_impl._M_key_compare(__k,
<     #####: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS14SequenceNumberESt4pairIKS2_NS1_6GUID_tEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE4findERS4_:
<     #####: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<     #####: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<     #####: 2540:      return (__j == end()
<     #####: 2541:	      || _M_impl._M_key_compare(__k,
<     #####: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4findERS7_:
<     #####: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<     #####: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<     #####: 2540:      return (__j == end()
<     #####: 2541:	      || _M_impl._M_key_compare(__k,
<     #####: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEESt10_Select1stISD_ESt4lessIS5_ESaISD_EE4findERS7_:
<        89: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<        89: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<       178: 2540:      return (__j == end()
<     #####: 2541:	      || _M_impl._M_key_compare(__k,
<      178*: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS19TransportReassembly7FragKeyESt4pairIKS3_NSt7__cxx114listINS2_9FragRangeESaIS8_EEEESt10_Select1stISB_ESt4lessIS3_ESaISB_EE4findERS5_:
<     #####: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<     #####: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<     #####: 2540:      return (__j == end()
<     #####: 2541:	      || _M_impl._M_key_compare(__k,
<     #####: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_21TransportSendListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE4findERS4_:
<        18: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<        18: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<        36: 2540:      return (__j == end()
<         9: 2541:	      || _M_impl._M_key_compare(__k,
<        45: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE4findERS4_:
<     #####: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<     #####: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<     #####: 2540:      return (__j == end()
<     #####: 2541:	      || _M_impl._M_key_compare(__k,
<     #####: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEESt10_Select1stIS7_ESt4lessImESaIS7_EE4findERS1_:
<     #####: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<     #####: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<     #####: 2540:      return (__j == end()
<     #####: 2541:	      || _M_impl._M_key_compare(__k,
<     #####: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_St3setIS2_NS1_17GUID_tKeyLessThanESaIS2_EEESt10_Select1stIS9_ES6_SaIS9_EE4findERS4_:
<         3: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<         3: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<         6: 2540:      return (__j == end()
<         3: 2541:	      || _M_impl._M_key_compare(__k,
<        9*: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_8DataLinkEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE4findERS4_:
<        26: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<        26: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<        52: 2540:      return (__j == end()
<        26: 2541:	      || _M_impl._M_key_compare(__k,
<       78*: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE4findERS1_:
<     #####: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<     #####: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<     #####: 2540:      return (__j == end()
<     #####: 2541:	      || _M_impl._M_key_compare(__k,
<     #####: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE4findERS4_:
<        42: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<        42: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<        84: 2540:      return (__j == end()
<        42: 2541:	      || _M_impl._M_key_compare(__k,
<      126*: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE4findERS4_:
<         9: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<         9: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<        18: 2540:      return (__j == end()
<         9: 2541:	      || _M_impl._M_key_compare(__k,
<       27*: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE4findERS4_:
<     #####: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<     #####: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<     #####: 2540:      return (__j == end()
<     #####: 2541:	      || _M_impl._M_key_compare(__k,
<     #####: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeImSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEESt10_Select1stIS7_ESt4lessImESaIS7_EE4findERS1_:
<       103: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<       103: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<       206: 2540:      return (__j == end()
<        12: 2541:	      || _M_impl._M_key_compare(__k,
<       218: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_12WeakRcHandleINS1_24TransportReceiveListenerEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE4findERS4_:
<     #####: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<     #####: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<     #####: 2540:      return (__j == end()
<     #####: 2541:	      || _M_impl._M_key_compare(__k,
<     #####: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
< _ZNSt8_Rb_treeIN7OpenDDS4DCPS6GUID_tESt4pairIKS2_NS1_8RcHandleINS1_18ReceiveListenerSetEEEESt10_Select1stIS8_ENS1_17GUID_tKeyLessThanESaIS8_EE4findERS4_:
<     #####: 2536:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2537:    find(const _Key& __k)
<         -: 2538:    {
<     #####: 2539:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<     #####: 2540:      return (__j == end()
<     #####: 2541:	      || _M_impl._M_key_compare(__k,
<     #####: 2542:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2543:    }
< ------------------
<         -: 2544:
<         -: 2545:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2546:	   typename _Compare, typename _Alloc>
<         -: 2547:    typename _Rb_tree<_Key, _Val, _KeyOfValue,
<         -: 2548:		      _Compare, _Alloc>::const_iterator
<      547*: 2549:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2550:    find(const _Key& __k) const
<         -: 2551:    {
<      547*: 2552:      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
<     1094*: 2553:      return (__j == end()
<      274*: 2554:	      || _M_impl._M_key_compare(__k,
<     1368*: 2555:					_S_key(__j._M_node))) ? end() : __j;
<         -: 2556:    }
<         -: 2557:
<         -: 2558:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2559:	   typename _Compare, typename _Alloc>
<         -: 2560:    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
<         -: 2561:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
<         -: 2562:    count(const _Key& __k) const
<         -: 2563:    {
<         -: 2564:      pair<const_iterator, const_iterator> __p = equal_range(__k);
<         -: 2565:      const size_type __n = std::distance(__p.first, __p.second);
<         -: 2566:      return __n;
<         -: 2567:    }
<         -: 2568:
<         -: 2569:  _GLIBCXX_PURE unsigned int
<         -: 2570:  _Rb_tree_black_count(const _Rb_tree_node_base* __node,
<         -: 2571:		       const _Rb_tree_node_base* __root) throw ();
<         -: 2572:
<         -: 2573:  template<typename _Key, typename _Val, typename _KeyOfValue,
<         -: 2574:	   typename _Compare, typename _Alloc>
<         -: 2575:    bool
<         -: 2576:    _Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::__rb_verify() const
<         -: 2577:    {
<         -: 2578:      if (_M_impl._M_node_count == 0 || begin() == end())
<         -: 2579:	return _M_impl._M_node_count == 0 && begin() == end()
<         -: 2580:	       && this->_M_impl._M_header._M_left == _M_end()
<         -: 2581:	       && this->_M_impl._M_header._M_right == _M_end();
<         -: 2582:
<         -: 2583:      unsigned int __len = _Rb_tree_black_count(_M_leftmost(), _M_root());
<         -: 2584:      for (const_iterator __it = begin(); __it != end(); ++__it)
<         -: 2585:	{
<         -: 2586:	  _Const_Link_type __x = static_cast<_Const_Link_type>(__it._M_node);
<         -: 2587:	  _Const_Link_type __L = _S_left(__x);
<         -: 2588:	  _Const_Link_type __R = _S_right(__x);
<         -: 2589:
<         -: 2590:	  if (__x->_M_color == _S_red)
<         -: 2591:	    if ((__L && __L->_M_color == _S_red)
<         -: 2592:		|| (__R && __R->_M_color == _S_red))
<         -: 2593:	      return false;
---
>         -: 2433:	    return _M_insert_equal_lower_node(__z);
>         -: 2434:	  }
>         -: 2435:	__catch(...)
>         -: 2436:	  {
>         -: 2437:	    _M_drop_node(__z);
>         -: 2438:	    __throw_exception_again;
>         -: 2439:	  }
>         -: 2440:      }
>         -: 2441:#endif
>         -: 2442:
>         -: 2443:  template<typename _Key, typename _Val, typename _KoV,
>         -: 2444:           typename _Cmp, typename _Alloc>
>         -: 2445:    template<class _II>
>         -: 2446:      void
>         -: 2447:      _Rb_tree<_Key, _Val, _KoV, _Cmp, _Alloc>::
>         -: 2448:      _M_insert_unique(_II __first, _II __last)
>         -: 2449:      {
>         -: 2450:	_Alloc_node __an(*this);
>         -: 2451:	for (; __first != __last; ++__first)
>         -: 2452:	  _M_insert_unique_(end(), *__first, __an);
>         -: 2453:      }
>         -: 2454:
>         -: 2455:  template<typename _Key, typename _Val, typename _KoV,
>         -: 2456:           typename _Cmp, typename _Alloc>
>         -: 2457:    template<class _II>
>         -: 2458:      void
>         -: 2459:      _Rb_tree<_Key, _Val, _KoV, _Cmp, _Alloc>::
>         -: 2460:      _M_insert_equal(_II __first, _II __last)
>         -: 2461:      {
>         -: 2462:	_Alloc_node __an(*this);
>         -: 2463:	for (; __first != __last; ++__first)
>         -: 2464:	  _M_insert_equal_(end(), *__first, __an);
>         -: 2465:      }
>         -: 2466:
>         -: 2467:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2468:           typename _Compare, typename _Alloc>
>         -: 2469:    void
>         -: 2470:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2471:    _M_erase_aux(const_iterator __position)
>         -: 2472:    {
>         -: 2473:      _Link_type __y =
>         -: 2474:	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
>         -: 2475:				(const_cast<_Base_ptr>(__position._M_node),
>         -: 2476:				 this->_M_impl._M_header));
>         -: 2477:      _M_drop_node(__y);
>         -: 2478:      --_M_impl._M_node_count;
>         -: 2479:    }
>         -: 2480:
>         -: 2481:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2482:           typename _Compare, typename _Alloc>
>         -: 2483:    void
>         -: 2484:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2485:    _M_erase_aux(const_iterator __first, const_iterator __last)
>         -: 2486:    {
>         -: 2487:      if (__first == begin() && __last == end())
>         -: 2488:	clear();
>         -: 2489:      else
>         -: 2490:	while (__first != __last)
>         -: 2491:	  _M_erase_aux(__first++);
>         -: 2492:    }
>         -: 2493:
>         -: 2494:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2495:           typename _Compare, typename _Alloc>
>         -: 2496:    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
>         -: 2497:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2498:    erase(const _Key& __x)
>         -: 2499:    {
>         -: 2500:      pair<iterator, iterator> __p = equal_range(__x);
>         -: 2501:      const size_type __old_size = size();
>         -: 2502:      _M_erase_aux(__p.first, __p.second);
>         -: 2503:      return __old_size - size();
>         -: 2504:    }
>         -: 2505:
>         -: 2506:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2507:           typename _Compare, typename _Alloc>
>         -: 2508:    void
>         -: 2509:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2510:    erase(const _Key* __first, const _Key* __last)
>         -: 2511:    {
>         -: 2512:      while (__first != __last)
>         -: 2513:	erase(*__first++);
>         -: 2514:    }
>         -: 2515:
>         -: 2516:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2517:           typename _Compare, typename _Alloc>
>         -: 2518:    typename _Rb_tree<_Key, _Val, _KeyOfValue,
>         -: 2519:		      _Compare, _Alloc>::iterator
>     #####: 2520:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2521:    find(const _Key& __k)
>         -: 2522:    {
>     #####: 2523:      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
>     #####: 2524:      return (__j == end()
>     #####: 2525:	      || _M_impl._M_key_compare(__k,
>     #####: 2526:					_S_key(__j._M_node))) ? end() : __j;
>         -: 2527:    }
>         -: 2528:
>         -: 2529:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2530:           typename _Compare, typename _Alloc>
>         -: 2531:    typename _Rb_tree<_Key, _Val, _KeyOfValue,
>         -: 2532:		      _Compare, _Alloc>::const_iterator
>     #####: 2533:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2534:    find(const _Key& __k) const
>         -: 2535:    {
>     #####: 2536:      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
>     #####: 2537:      return (__j == end()
>     #####: 2538:	      || _M_impl._M_key_compare(__k, 
>     #####: 2539:					_S_key(__j._M_node))) ? end() : __j;
>         -: 2540:    }
>         -: 2541:
>         -: 2542:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2543:           typename _Compare, typename _Alloc>
>         -: 2544:    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
>         -: 2545:    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
>         -: 2546:    count(const _Key& __k) const
>         -: 2547:    {
>         -: 2548:      pair<const_iterator, const_iterator> __p = equal_range(__k);
>         -: 2549:      const size_type __n = std::distance(__p.first, __p.second);
>         -: 2550:      return __n;
>         -: 2551:    }
>         -: 2552:
>         -: 2553:  _GLIBCXX_PURE unsigned int
>         -: 2554:  _Rb_tree_black_count(const _Rb_tree_node_base* __node,
>         -: 2555:                       const _Rb_tree_node_base* __root) throw ();
>         -: 2556:
>         -: 2557:  template<typename _Key, typename _Val, typename _KeyOfValue,
>         -: 2558:           typename _Compare, typename _Alloc>
>         -: 2559:    bool
>         -: 2560:    _Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::__rb_verify() const
>         -: 2561:    {
>         -: 2562:      if (_M_impl._M_node_count == 0 || begin() == end())
>         -: 2563:	return _M_impl._M_node_count == 0 && begin() == end()
>         -: 2564:	       && this->_M_impl._M_header._M_left == _M_end()
>         -: 2565:	       && this->_M_impl._M_header._M_right == _M_end();
>         -: 2566:
>         -: 2567:      unsigned int __len = _Rb_tree_black_count(_M_leftmost(), _M_root());
>         -: 2568:      for (const_iterator __it = begin(); __it != end(); ++__it)
>         -: 2569:	{
>         -: 2570:	  _Const_Link_type __x = static_cast<_Const_Link_type>(__it._M_node);
>         -: 2571:	  _Const_Link_type __L = _S_left(__x);
>         -: 2572:	  _Const_Link_type __R = _S_right(__x);
>         -: 2573:
>         -: 2574:	  if (__x->_M_color == _S_red)
>         -: 2575:	    if ((__L && __L->_M_color == _S_red)
>         -: 2576:		|| (__R && __R->_M_color == _S_red))
>         -: 2577:	      return false;
>         -: 2578:
>         -: 2579:	  if (__L && _M_impl._M_key_compare(_S_key(__x), _S_key(__L)))
>         -: 2580:	    return false;
>         -: 2581:	  if (__R && _M_impl._M_key_compare(_S_key(__R), _S_key(__x)))
>         -: 2582:	    return false;
>         -: 2583:
>         -: 2584:	  if (!__L && !__R && _Rb_tree_black_count(__x, _M_root()) != __len)
>         -: 2585:	    return false;
>         -: 2586:	}
>         -: 2587:
>         -: 2588:      if (_M_leftmost() != _Rb_tree_node_base::_S_minimum(_M_root()))
>         -: 2589:	return false;
>         -: 2590:      if (_M_rightmost() != _Rb_tree_node_base::_S_maximum(_M_root()))
>         -: 2591:	return false;
>         -: 2592:      return true;
>         -: 2593:    }
12451,12465c2597,2611
<         -: 2595:	  if (__L && _M_impl._M_key_compare(_S_key(__x), _S_key(__L)))
<         -: 2596:	    return false;
<         -: 2597:	  if (__R && _M_impl._M_key_compare(_S_key(__R), _S_key(__x)))
<         -: 2598:	    return false;
<         -: 2599:
<         -: 2600:	  if (!__L && !__R && _Rb_tree_black_count(__x, _M_root()) != __len)
<         -: 2601:	    return false;
<         -: 2602:	}
<         -: 2603:
<         -: 2604:      if (_M_leftmost() != _Rb_tree_node_base::_S_minimum(_M_root()))
<         -: 2605:	return false;
<         -: 2606:      if (_M_rightmost() != _Rb_tree_node_base::_S_maximum(_M_root()))
<         -: 2607:	return false;
<         -: 2608:      return true;
<         -: 2609:    }
---
>         -: 2595:#if __cplusplus > 201402L
>         -: 2596:  // Allow access to internals of compatible _Rb_tree specializations.
>         -: 2597:  template<typename _Key, typename _Val, typename _Sel, typename _Cmp1,
>         -: 2598:	   typename _Alloc, typename _Cmp2>
>         -: 2599:    struct _Rb_tree_merge_helper<_Rb_tree<_Key, _Val, _Sel, _Cmp1, _Alloc>,
>         -: 2600:				 _Cmp2>
>         -: 2601:    {
>         -: 2602:    private:
>         -: 2603:      friend class _Rb_tree<_Key, _Val, _Sel, _Cmp1, _Alloc>;
>         -: 2604:
>         -: 2605:      static auto&
>         -: 2606:      _S_get_impl(_Rb_tree<_Key, _Val, _Sel, _Cmp2, _Alloc>& __tree)
>         -: 2607:      { return __tree._M_impl; }
>         -: 2608:    };
>         -: 2609:#endif // C++17
12467,12486c2613,2616
<         -: 2611:#if __cplusplus > 201402L
<         -: 2612:  // Allow access to internals of compatible _Rb_tree specializations.
<         -: 2613:  template<typename _Key, typename _Val, typename _Sel, typename _Cmp1,
<         -: 2614:	   typename _Alloc, typename _Cmp2>
<         -: 2615:    struct _Rb_tree_merge_helper<_Rb_tree<_Key, _Val, _Sel, _Cmp1, _Alloc>,
<         -: 2616:				 _Cmp2>
<         -: 2617:    {
<         -: 2618:    private:
<         -: 2619:      friend class _Rb_tree<_Key, _Val, _Sel, _Cmp1, _Alloc>;
<         -: 2620:
<         -: 2621:      static auto&
<         -: 2622:      _S_get_impl(_Rb_tree<_Key, _Val, _Sel, _Cmp2, _Alloc>& __tree)
<         -: 2623:      { return __tree._M_impl; }
<         -: 2624:    };
<         -: 2625:#endif // C++17
<         -: 2626:
<         -: 2627:_GLIBCXX_END_NAMESPACE_VERSION
<         -: 2628:} // namespace
<         -: 2629:
<         -: 2630:#endif
---
>         -: 2611:_GLIBCXX_END_NAMESPACE_VERSION
>         -: 2612:} // namespace
>         -: 2613:
>         -: 2614:#endif
