1,2c1,2
<         -:    0:Source:/usr/include/c++/8/bits/allocator.h
<         -:    0:Programs:51
---
>         -:    0:Source:/usr/include/c++/7/bits/allocator.h
>         -:    0:Programs:3
5c5
<         -:    3:// Copyright (C) 2001-2018 Free Software Foundation, Inc.
---
>         -:    3:// Copyright (C) 2001-2017 Free Software Foundation, Inc.
110c110
<         -:  108:    class allocator : public __allocator_base<_Tp>
---
>         -:  108:    class allocator: public __allocator_base<_Tp>
133,138d132
<     1116*:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEEEEC2Ev:
<       119:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt10_List_nodeIN7OpenDDS4DCPS19TransportReassembly9FragRangeEEEC2Ev:
140,236d133
< ------------------
< _ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev:
<     #####:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt4pairIN7OpenDDS4DCPS8RcHandleINS1_15TransportConfigEEESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISB_EEEEC2Ev:
<     #####:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt10_List_nodeISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE29ACE_Configuration_Section_KeyEEEC2Ev:
<     #####:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt10_List_nodeIN7OpenDDS4DCPS8RcHandleINS1_13TransportInstEEEEEC2Ev:
<     #####:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEEEEC2Ev:
<       119:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEEC2Ev:
<     #####:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEEEEC2Ev:
<       119:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS12WeakRcHandleINS2_15TransportClientEEENS2_8RcHandleINS2_8DataLinkEEEEEEC2Ev:
<         5:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEEEEC2Ev:
<       119:  131:      allocator() throw() { }
< ------------------
< _ZNSaIPN7OpenDDS4DCPS21TransportQueueElementEEC2Ev:
<        42:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS14SequenceNumberENS2_6GUID_tEEEEC2Ev:
<     #####:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS14SequenceNumberESt3mapIS3_S0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS3_ESaIS0_IS4_SC_EEEEEEC2Ev:
<     #####:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEEEC2Ev:
<     #####:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt4pairIPN7OpenDDS4DCPS21TransportQueueElementENS1_21TransportSendStrategy8SendModeEEEC2Ev:
<        99:  131:      allocator() throw() { }
< ------------------
< _ZNSaIPN7OpenDDS4DCPS21TransportQueueElementEEC2Ev:
<     #####:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEEC2Ev:
<        24:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeIN7OpenDDS4DCPS6GUID_tEEEC2Ev:
<     #####:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEEEC2Ev:
<        12:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEEEC2Ev:
<         6:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEEC2Ev:
<         6:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEEC2Ev:
<     #####:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEEC2Ev:
<       109:  131:      allocator() throw() { }
< ------------------
< _ZNSaIN7OpenDDS4DCPS12HostnameInfoEEC2Ev:
<         3:  131:      allocator() throw() { }
< ------------------
< _ZNSaIN7OpenDDS4DCPS12WeakRcHandleINS0_24TransportReceiveListenerEEEEC2Ev:
<        42:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt4pairIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEENS1_6GUID_tEEEC2Ev:
<         6:  131:      allocator() throw() { }
< ------------------
< _ZNSaIPN7OpenDDS4DCPS11SendRequestEEC2Ev:
<     #####:  131:      allocator() throw() { }
< ------------------
< _ZNSaIPN7OpenDDS4DCPS13TransportImplEEC2Ev:
<        32:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_11DataLinkSetEEEEEEC2Ev:
<        18:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_8DataLinkEEEEEEC2Ev:
<        14:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_15TransportClient12PendingAssocEEEEEEC2Ev:
<        14:  131:      allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEEC2Ev:
<     #####:  131:      allocator() throw() { }
< ------------------
< _ZNSaIN7OpenDDS4DCPS8RcHandleINS0_13TransportInstEEEEC2Ev:
<       208:  131:      allocator() throw() { }
< ------------------
240,252d136
< ------------------
< _ZNSaISt13_Rb_tree_nodeIN7OpenDDS4DCPS6GUID_tEEEC2ERKS4_:
<     #####:  133:      allocator(const allocator& __a) throw()
<     #####:  134:      : __allocator_base<_Tp>(__a) { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEEC2ERKSA_:
<     #####:  133:      allocator(const allocator& __a) throw()
<     #####:  134:      : __allocator_base<_Tp>(__a) { }
< ------------------
< _ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS5_:
<     #####:  133:      allocator(const allocator& __a) throw()
<     #####:  134:      : __allocator_base<_Tp>(__a) { }
< ------------------
255,271c139
<       72*:  137:	allocator(const allocator<_Tp1>&) throw() { }
< ------------------
< _ZNSaIPPN7OpenDDS4DCPS21TransportQueueElementEEC2IS2_EERKSaIT_E:
<     #####:  137:	allocator(const allocator<_Tp1>&) throw() { }
< ------------------
< _ZNSaIPPN7OpenDDS4DCPS11SendRequestEEC2IS2_EERKSaIT_E:
<     #####:  137:	allocator(const allocator<_Tp1>&) throw() { }
< ------------------
< _ZNSaIPSt10unique_ptrIN7OpenDDS4DCPS18ReactorInterceptor7CommandESt14default_deleteIS3_EEEC2IS6_EERKSaIT_E:
<     #####:  137:	allocator(const allocator<_Tp1>&) throw() { }
< ------------------
< _ZNSaIPPN7OpenDDS4DCPS21TransportQueueElementEEC2IS2_EERKSaIT_E:
<        72:  137:	allocator(const allocator<_Tp1>&) throw() { }
< ------------------
< _ZNSaIPPN7OpenDDS4DCPS21TransportQueueElementEEC2IS2_EERKSaIT_E:
<     #####:  137:	allocator(const allocator<_Tp1>&) throw() { }
< ------------------
---
>         -:  137:	allocator(const allocator<_Tp1>&) throw() { }
273,395d140
<     1188*:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEEEED2Ev:
<       119:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS12WeakRcHandleINS2_15TransportClientEEENS2_8RcHandleINS2_8DataLinkEEEEEED2Ev:
<         5:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt10_List_nodeIN7OpenDDS4DCPS19TransportReassembly9FragRangeEEED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt4pairIN7OpenDDS4DCPS8RcHandleINS1_15TransportConfigEEESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISB_EEEED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt10_List_nodeISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE29ACE_Configuration_Section_KeyEEED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt10_List_nodeIN7OpenDDS4DCPS8RcHandleINS1_13TransportInstEEEEED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKiN7OpenDDS4DCPS8RcHandleINS3_15TransportConfigEEEEEED2Ev:
<       119:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportInstEEEEEED2Ev:
<       119:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_15TransportConfigEEEEEED2Ev:
<       119:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaIN7OpenDDS4DCPS8RcHandleINS0_13TransportInstEEEED2Ev:
<       208:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaIPPN7OpenDDS4DCPS21TransportQueueElementEED2Ev:
<        72:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaIPN7OpenDDS4DCPS21TransportQueueElementEED2Ev:
<        42:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS14SequenceNumberENS2_6GUID_tEEEED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS14SequenceNumberESt3mapIS3_S0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS3_ESaIS0_IS4_SC_EEEEEED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEEED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt4pairIN7OpenDDS4DCPS14SequenceNumberES2_EED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaIPPN7OpenDDS4DCPS21TransportQueueElementEED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt4pairIPN7OpenDDS4DCPS21TransportQueueElementENS1_21TransportSendStrategy8SendModeEEED2Ev:
<        99:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaIPN7OpenDDS4DCPS21TransportQueueElementEED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEED2Ev:
<        24:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt4pairIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEENS1_6GUID_tEEED2Ev:
<         6:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeIN7OpenDDS4DCPS6GUID_tEEED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEEED2Ev:
<        12:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEEED2Ev:
<         6:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEED2Ev:
<       109:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaIN7OpenDDS4DCPS12HostnameInfoEED2Ev:
<         3:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaIN7OpenDDS4DCPS12WeakRcHandleINS0_24TransportReceiveListenerEEEED2Ev:
<        42:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaIPPN7OpenDDS4DCPS21TransportQueueElementEED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_18ReceiveListenerSetEEEEEED2Ev:
<         6:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaIPPN7OpenDDS4DCPS11SendRequestEED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaIPN7OpenDDS4DCPS11SendRequestEED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaIPSt10unique_ptrIN7OpenDDS4DCPS18ReactorInterceptor7CommandESt14default_deleteIS3_EEED2Ev:
<     #####:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaIPN7OpenDDS4DCPS13TransportImplEED2Ev:
<        32:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_11DataLinkSetEEEEEED2Ev:
<        18:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_8DataLinkEEEEEED2Ev:
<        14:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_15TransportClient12PendingAssocEEEEEED2Ev:
<        14:  139:      ~allocator() throw() { }
< ------------------
< _ZNSaISt13_Rb_tree_nodeISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEED2Ev:
397d141
< ------------------
422c166
<     #####:  164:    operator!=(const allocator<_Tp>&, const allocator<_Tp>&)
---
>         -:  164:    operator!=(const allocator<_Tp>&, const allocator<_Tp>&)
424c168
<     #####:  166:    { return false; }
---
>         -:  166:    { return false; }
426,462c170,206
<         -:  168:  // Invalid allocator<cv T> partial specializations.
<         -:  169:  // allocator_traits::rebind_alloc can be used to form a valid allocator type.
<         -:  170:  template<typename _Tp>
<         -:  171:    class allocator<const _Tp>
<         -:  172:    {
<         -:  173:    public:
<         -:  174:      typedef _Tp value_type;
<         -:  175:      template<typename _Up> allocator(const allocator<_Up>&) { }
<         -:  176:    };
<         -:  177:
<         -:  178:  template<typename _Tp>
<         -:  179:    class allocator<volatile _Tp>
<         -:  180:    {
<         -:  181:    public:
<         -:  182:      typedef _Tp value_type;
<         -:  183:      template<typename _Up> allocator(const allocator<_Up>&) { }
<         -:  184:    };
<         -:  185:
<         -:  186:  template<typename _Tp>
<         -:  187:    class allocator<const volatile _Tp>
<         -:  188:    {
<         -:  189:    public:
<         -:  190:      typedef _Tp value_type;
<         -:  191:      template<typename _Up> allocator(const allocator<_Up>&) { }
<         -:  192:    };
<         -:  193:
<         -:  194:  /// @} group allocator
<         -:  195:
<         -:  196:  // Inhibit implicit instantiations for required instantiations,
<         -:  197:  // which are defined via explicit instantiations elsewhere.
<         -:  198:#if _GLIBCXX_EXTERN_TEMPLATE
<         -:  199:  extern template class allocator<char>;
<         -:  200:  extern template class allocator<wchar_t>;
<         -:  201:#endif
<         -:  202:
<         -:  203:  // Undefine.
<         -:  204:#undef __allocator_base
---
>         -:  168:  /// @} group allocator
>         -:  169:
>         -:  170:  // Inhibit implicit instantiations for required instantiations,
>         -:  171:  // which are defined via explicit instantiations elsewhere.
>         -:  172:#if _GLIBCXX_EXTERN_TEMPLATE
>         -:  173:  extern template class allocator<char>;
>         -:  174:  extern template class allocator<wchar_t>;
>         -:  175:#endif
>         -:  176:
>         -:  177:  // Undefine.
>         -:  178:#undef __allocator_base
>         -:  179:
>         -:  180:  // To implement Option 3 of DR 431.
>         -:  181:  template<typename _Alloc, bool = __is_empty(_Alloc)>
>         -:  182:    struct __alloc_swap
>         -:  183:    { static void _S_do_it(_Alloc&, _Alloc&) _GLIBCXX_NOEXCEPT { } };
>         -:  184:
>         -:  185:  template<typename _Alloc>
>         -:  186:    struct __alloc_swap<_Alloc, false>
>         -:  187:    {
>         -:  188:      static void
>         -:  189:      _S_do_it(_Alloc& __one, _Alloc& __two) _GLIBCXX_NOEXCEPT
>         -:  190:      {
>         -:  191:	// Precondition: swappable allocators.
>         -:  192:	if (__one != __two)
>         -:  193:	  swap(__one, __two);
>         -:  194:      }
>         -:  195:    };
>         -:  196:
>         -:  197:  // Optimize for stateless allocators.
>         -:  198:  template<typename _Alloc, bool = __is_empty(_Alloc)>
>         -:  199:    struct __alloc_neq
>         -:  200:    {
>         -:  201:      static bool
>         -:  202:      _S_do_it(const _Alloc&, const _Alloc&)
>         -:  203:      { return false; }
>         -:  204:    };
464,503c208,247
<         -:  206:  // To implement Option 3 of DR 431.
<         -:  207:  template<typename _Alloc, bool = __is_empty(_Alloc)>
<         -:  208:    struct __alloc_swap
<         -:  209:    { static void _S_do_it(_Alloc&, _Alloc&) _GLIBCXX_NOEXCEPT { } };
<         -:  210:
<         -:  211:  template<typename _Alloc>
<         -:  212:    struct __alloc_swap<_Alloc, false>
<         -:  213:    {
<         -:  214:      static void
<         -:  215:      _S_do_it(_Alloc& __one, _Alloc& __two) _GLIBCXX_NOEXCEPT
<         -:  216:      {
<         -:  217:	// Precondition: swappable allocators.
<         -:  218:	if (__one != __two)
<         -:  219:	  swap(__one, __two);
<         -:  220:      }
<         -:  221:    };
<         -:  222:
<         -:  223:  // Optimize for stateless allocators.
<         -:  224:  template<typename _Alloc, bool = __is_empty(_Alloc)>
<         -:  225:    struct __alloc_neq
<         -:  226:    {
<         -:  227:      static bool
<     #####:  228:      _S_do_it(const _Alloc&, const _Alloc&)
<     #####:  229:      { return false; }
<         -:  230:    };
<         -:  231:
<         -:  232:  template<typename _Alloc>
<         -:  233:    struct __alloc_neq<_Alloc, false>
<         -:  234:    {
<         -:  235:      static bool
<         -:  236:      _S_do_it(const _Alloc& __one, const _Alloc& __two)
<         -:  237:      { return __one != __two; }
<         -:  238:    };
<         -:  239:
<         -:  240:#if __cplusplus >= 201103L
<         -:  241:  template<typename _Tp, bool
<         -:  242:    = __or_<is_copy_constructible<typename _Tp::value_type>,
<         -:  243:            is_nothrow_move_constructible<typename _Tp::value_type>>::value>
<         -:  244:    struct __shrink_to_fit_aux
<         -:  245:    { static bool _S_do_it(_Tp&) noexcept { return false; } };
---
>         -:  206:  template<typename _Alloc>
>         -:  207:    struct __alloc_neq<_Alloc, false>
>         -:  208:    {
>         -:  209:      static bool
>         -:  210:      _S_do_it(const _Alloc& __one, const _Alloc& __two)
>         -:  211:      { return __one != __two; }
>         -:  212:    };
>         -:  213:
>         -:  214:#if __cplusplus >= 201103L
>         -:  215:  template<typename _Tp, bool
>         -:  216:    = __or_<is_copy_constructible<typename _Tp::value_type>,
>         -:  217:            is_nothrow_move_constructible<typename _Tp::value_type>>::value>
>         -:  218:    struct __shrink_to_fit_aux
>         -:  219:    { static bool _S_do_it(_Tp&) noexcept { return false; } };
>         -:  220:
>         -:  221:  template<typename _Tp>
>         -:  222:    struct __shrink_to_fit_aux<_Tp, true>
>         -:  223:    {
>         -:  224:      static bool
>         -:  225:      _S_do_it(_Tp& __c) noexcept
>         -:  226:      {
>         -:  227:#if __cpp_exceptions
>         -:  228:	try
>         -:  229:	  {
>         -:  230:	    _Tp(__make_move_if_noexcept_iterator(__c.begin()),
>         -:  231:		__make_move_if_noexcept_iterator(__c.end()),
>         -:  232:		__c.get_allocator()).swap(__c);
>         -:  233:	    return true;
>         -:  234:	  }
>         -:  235:	catch(...)
>         -:  236:	  { return false; }
>         -:  237:#else
>         -:  238:	return false;
>         -:  239:#endif
>         -:  240:      }
>         -:  241:    };
>         -:  242:#endif
>         -:  243:
>         -:  244:_GLIBCXX_END_NAMESPACE_VERSION
>         -:  245:} // namespace std
505,531c249
<         -:  247:  template<typename _Tp>
<         -:  248:    struct __shrink_to_fit_aux<_Tp, true>
<         -:  249:    {
<         -:  250:      static bool
<         -:  251:      _S_do_it(_Tp& __c) noexcept
<         -:  252:      {
<         -:  253:#if __cpp_exceptions
<         -:  254:	try
<         -:  255:	  {
<         -:  256:	    _Tp(__make_move_if_noexcept_iterator(__c.begin()),
<         -:  257:		__make_move_if_noexcept_iterator(__c.end()),
<         -:  258:		__c.get_allocator()).swap(__c);
<         -:  259:	    return true;
<         -:  260:	  }
<         -:  261:	catch(...)
<         -:  262:	  { return false; }
<         -:  263:#else
<         -:  264:	return false;
<         -:  265:#endif
<         -:  266:      }
<         -:  267:    };
<         -:  268:#endif
<         -:  269:
<         -:  270:_GLIBCXX_END_NAMESPACE_VERSION
<         -:  271:} // namespace std
<         -:  272:
<         -:  273:#endif
---
>         -:  247:#endif
