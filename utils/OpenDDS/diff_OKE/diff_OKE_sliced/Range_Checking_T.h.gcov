1,2c1,2
<         -:    0:Source:/home/ryan/git/TARGETS/OpenDDS-debloat/ACE_wrappers/TAO/tao/Range_Checking_T.h
<         -:    0:Programs:51
---
>         -:    0:Source:/home/ryan/git/OpenDDS-debloat/ACE_wrappers/TAO/tao/Range_Checking_T.h
>         -:    0:Programs:15
11c11
<         -:    9: * $Id$
---
>         -:    9: * $Id: Range_Checking_T.h 1861 2011-08-31 16:18:08Z mesnierp $
143,215d142
< ------------------
< _ZN3TAO7details14range_checkingIN7OpenDDS4DCPS6GUID_tELb1EE5checkEjjjPKc:
<     #####:  125:  inline static void check(
<         -:  126:      CORBA::ULong index,
<         -:  127:      CORBA::ULong length,
<         -:  128:      CORBA::ULong /* maximum */,
<         -:  129:      char const * /* function_name */)
<         -:  130:  {
<         -:  131:    // Applications and tests can specialize this function to define
<         -:  132:    // their own behavior
<         -:  133:#if defined (TAO_CHECKED_SEQUENCE_INDEXING) && (TAO_CHECKED_SEQUENCE_INDEXING == 1)
<     #####:  134:    if (length <= index)
<     #####:  135:      throw ::CORBA::BAD_PARAM ();
<         -:  136:#else
<         -:  137:    ACE_UNUSED_ARG (index);
<         -:  138:    ACE_UNUSED_ARG (length);
<         -:  139:#endif // TAO_CHECKED_SEQUENCE_INDEXING
<     #####:  140:  }
< ------------------
< _ZN3TAO7details14range_checkingIN7OpenDDS4DCPS6GUID_tELb1EE5checkEjjjPKc:
<     #####:  125:  inline static void check(
<         -:  126:      CORBA::ULong index,
<         -:  127:      CORBA::ULong length,
<         -:  128:      CORBA::ULong /* maximum */,
<         -:  129:      char const * /* function_name */)
<         -:  130:  {
<         -:  131:    // Applications and tests can specialize this function to define
<         -:  132:    // their own behavior
<         -:  133:#if defined (TAO_CHECKED_SEQUENCE_INDEXING) && (TAO_CHECKED_SEQUENCE_INDEXING == 1)
<     #####:  134:    if (length <= index)
<     #####:  135:      throw ::CORBA::BAD_PARAM ();
<         -:  136:#else
<         -:  137:    ACE_UNUSED_ARG (index);
<         -:  138:    ACE_UNUSED_ARG (length);
<         -:  139:#endif // TAO_CHECKED_SEQUENCE_INDEXING
<     #####:  140:  }
< ------------------
< _ZN3TAO7details14range_checkingIN7OpenDDS4DCPS16TransportLocatorELb1EE5checkEjjjPKc:
<     #####:  125:  inline static void check(
<         -:  126:      CORBA::ULong index,
<         -:  127:      CORBA::ULong length,
<         -:  128:      CORBA::ULong /* maximum */,
<         -:  129:      char const * /* function_name */)
<         -:  130:  {
<         -:  131:    // Applications and tests can specialize this function to define
<         -:  132:    // their own behavior
<         -:  133:#if defined (TAO_CHECKED_SEQUENCE_INDEXING) && (TAO_CHECKED_SEQUENCE_INDEXING == 1)
<     #####:  134:    if (length <= index)
<     #####:  135:      throw ::CORBA::BAD_PARAM ();
<         -:  136:#else
<         -:  137:    ACE_UNUSED_ARG (index);
<         -:  138:    ACE_UNUSED_ARG (length);
<         -:  139:#endif // TAO_CHECKED_SEQUENCE_INDEXING
<     #####:  140:  }
< ------------------
< _ZN3TAO7details14range_checkingIN7OpenDDS4DCPS16TransportLocatorELb1EE5checkEjjjPKc:
<     #####:  125:  inline static void check(
<         -:  126:      CORBA::ULong index,
<         -:  127:      CORBA::ULong length,
<         -:  128:      CORBA::ULong /* maximum */,
<         -:  129:      char const * /* function_name */)
<         -:  130:  {
<         -:  131:    // Applications and tests can specialize this function to define
<         -:  132:    // their own behavior
<         -:  133:#if defined (TAO_CHECKED_SEQUENCE_INDEXING) && (TAO_CHECKED_SEQUENCE_INDEXING == 1)
<     #####:  134:    if (length <= index)
<     #####:  135:      throw ::CORBA::BAD_PARAM ();
<         -:  136:#else
<         -:  137:    ACE_UNUSED_ARG (index);
<         -:  138:    ACE_UNUSED_ARG (length);
<         -:  139:#endif // TAO_CHECKED_SEQUENCE_INDEXING
<     #####:  140:  }
< ------------------
