1,2c1,2
<         -:    0:Source:/usr/include/c++/8/bits/move.h
<         -:    0:Programs:51
---
>         -:    0:Source:/usr/include/c++/7/bits/move.h
>         -:    0:Programs:15
5c5
<         -:    3:// Copyright (C) 2007-2018 Free Software Foundation, Inc.
---
>         -:    3:// Copyright (C) 2007-2017 Free Software Foundation, Inc.
49,115c49,50
<      243*:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
<      243*:   48:    { return __builtin_addressof(__r); }
< ------------------
< _ZSt11__addressofISt4pairIN7OpenDDS4DCPS12WeakRcHandleINS2_15TransportClientEEENS2_6GUID_tEEEPT_RS8_:
<     #####:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
<     #####:   48:    { return __builtin_addressof(__r); }
< ------------------
< _ZSt11__addressofI13ACE_INET_AddrEPT_RS1_:
<     #####:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
<     #####:   48:    { return __builtin_addressof(__r); }
< ------------------
< _ZSt11__addressofIN7OpenDDS4DCPS12HostnameInfoEEPT_RS3_:
<        12:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
<        12:   48:    { return __builtin_addressof(__r); }
< ------------------
< _ZSt11__addressofIN7OpenDDS4DCPS12WeakRcHandleINS1_24TransportReceiveListenerEEEEPT_RS5_:
<        42:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
<        42:   48:    { return __builtin_addressof(__r); }
< ------------------
< _ZSt11__addressofISt6vectorIPN7OpenDDS4DCPS13TransportImplESaIS4_EEEPT_RS7_:
<         9:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
<         9:   48:    { return __builtin_addressof(__r); }
< ------------------
< _ZSt11__addressofIN7OpenDDS4DCPS8RcHandleINS1_13TransportInstEEEEPT_RS5_:
<     #####:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
<     #####:   48:    { return __builtin_addressof(__r); }
< ------------------
< _ZSt11__addressofISaISt10_List_nodeIN7OpenDDS4DCPS19TransportReassembly9FragRangeEEEEPT_RS7_:
<     #####:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
<     #####:   48:    { return __builtin_addressof(__r); }
< ------------------
< _ZSt11__addressofIN7OpenDDS4DCPS8RcHandleINS1_13TransportInstEEEEPT_RS5_:
<       178:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
<       178:   48:    { return __builtin_addressof(__r); }
< ------------------
< _ZSt11__addressofISaISt10_List_nodeIN7OpenDDS4DCPS8RcHandleINS2_13TransportInstEEEEEEPT_RS8_:
<     #####:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
<     #####:   48:    { return __builtin_addressof(__r); }
< ------------------
< _ZSt11__addressofINSt7__cxx114listIN7OpenDDS4DCPS8RcHandleINS3_13TransportInstEEESaIS6_EEEEPT_RS9_:
<     #####:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
<     #####:   48:    { return __builtin_addressof(__r); }
< ------------------
< _ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_:
<     #####:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
<     #####:   48:    { return __builtin_addressof(__r); }
< ------------------
< _ZSt11__addressofISt4pairIN7OpenDDS4DCPS8RcHandleINS2_15TransportConfigEEESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISC_EEEEPT_RSG_:
<     #####:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
<     #####:   48:    { return __builtin_addressof(__r); }
< ------------------
< _ZSt11__addressofISt5dequeIPN7OpenDDS4DCPS21TransportQueueElementESaIS4_EEEPT_RS7_:
<     #####:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
<     #####:   48:    { return __builtin_addressof(__r); }
< ------------------
< _ZSt11__addressofIKSt4pairIKN7OpenDDS4DCPS14SequenceNumberES0_IPNS2_10BasicQueueINS2_21TransportQueueElementEEEP17ACE_Message_BlockEEEPT_RSE_:
<     #####:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
<     #####:   48:    { return __builtin_addressof(__r); }
< ------------------
< _ZSt11__addressofISt4pairIPN7OpenDDS4DCPS21TransportQueueElementENS2_21TransportSendStrategy8SendModeEEEPT_RS8_:
<         2:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
<         2:   48:    { return __builtin_addressof(__r); }
< ------------------
< _ZSt11__addressofISt5dequeIPN7OpenDDS4DCPS21TransportQueueElementESaIS4_EEEPT_RS7_:
<     #####:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
<     #####:   48:    { return __builtin_addressof(__r); }
< ------------------
---
>         -:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
>         -:   48:    { return __builtin_addressof(__r); }
117,1053c52,102
<         -:   50:#if __cplusplus >= 201103L
<         -:   51:
<         -:   52:_GLIBCXX_END_NAMESPACE_VERSION
<         -:   53:} // namespace
<         -:   54:
<         -:   55:#include <type_traits> // Brings in std::declval too.
<         -:   56:
<         -:   57:namespace std _GLIBCXX_VISIBILITY(default)
<         -:   58:{
<         -:   59:_GLIBCXX_BEGIN_NAMESPACE_VERSION
<         -:   60:
<         -:   61:  /**
<         -:   62:   *  @addtogroup utilities
<         -:   63:   *  @{
<         -:   64:   */
<         -:   65:
<         -:   66:  /**
<         -:   67:   *  @brief  Forward an lvalue.
<         -:   68:   *  @return The parameter cast to the specified type.
<         -:   69:   *
<         -:   70:   *  This function is used to implement "perfect forwarding".
<         -:   71:   */
<         -:   72:  template<typename _Tp>
<         -:   73:    constexpr _Tp&&
<     3530*:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     3530*:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeIN7OpenDDS4DCPS19TransportReassembly7FragKeyEEEOT_RNSt16remove_referenceIS8_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRP17ACE_Message_BlockEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIN7OpenDDS4DCPS21Message_Block_DeleterEEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPN7OpenDDS4DCPS26TransportCustomizedElementEEOT_RNSt16remove_referenceIS5_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS19TransportReassembly7FragKeyENSt7__cxx114listINS4_9FragRangeESaIS9_EEEEEEOT_RNSt16remove_referenceISE_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS19TransportReassembly7FragKeyENSt7__cxx114listINS4_9FragRangeESaIS9_EEEEEEOT_RNSt16remove_referenceISG_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt17_Rb_tree_iteratorIN7OpenDDS4DCPS19TransportReassembly7FragKeyEEEOT_RNSt16remove_referenceIS6_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKN7OpenDDS4DCPS8RcHandleINS1_15TransportClientEEEEOT_RNSt16remove_referenceIS7_E4typeE:
<         2:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<         2:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIP17ACE_Message_BlockEOT_RNSt16remove_referenceIS2_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt5tupleIJRKN7OpenDDS4DCPS19TransportReassembly7FragKeyEEEEOT_RNSt16remove_referenceIS8_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRSt17_Rb_tree_iteratorIN7OpenDDS4DCPS19TransportReassembly7FragKeyEEEOT_RNSt16remove_referenceIS7_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKN7OpenDDS4DCPS19TransportReassembly7FragKeyEEOT_RNSt16remove_referenceIS6_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIN7OpenDDS4DCPS19TransportReassembly9FragRangeEEOT_RNSt16remove_referenceIS4_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIN7OpenDDS4DCPS21Message_Block_DeleterEEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIN7OpenDDS4DCPS8RcHandleINS1_15TransportClient12PendingAssocEEEEOT_RNSt16remove_referenceIS6_E4typeE:
<        54:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        54:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt5tupleIJRKmEEEOT_RNSt16remove_referenceIS4_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKPN7OpenDDS4DCPS13TransportImplEEOT_RNSt16remove_referenceIS6_E4typeE:
<        87:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        87:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKN7OpenDDS4DCPS6GUID_tEEOT_RNSt16remove_referenceIS5_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt5tupleIJRKN7OpenDDS4DCPS6GUID_tEEEEOT_RNSt16remove_referenceIS7_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIN7OpenDDS4DCPS21Message_Block_DeleterEEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt4pairIN7OpenDDS4DCPS6GUID_tENS2_8RcHandleINS2_15TransportClient12PendingAssocEEEEEOT_RNSt16remove_referenceIS9_E4typeE:
<       108:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<       108:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINSA_13TransportTypeEEEEEEOT_RNSt16remove_referenceISG_E4typeE:
<        89:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        89:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEOT_RNSt16remove_referenceIS9_E4typeE:
<        48:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        48:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRN7OpenDDS4DCPS6GUID_tEEOT_RNSt16remove_referenceIS4_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIN7OpenDDS4DCPS8RcHandleINS1_13TransportInstEEEEOT_RNSt16remove_referenceIS5_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKN7OpenDDS4DCPS8RcHandleINS1_13TransportInstEEEEOT_RNSt16remove_referenceIS7_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS12WeakRcHandleINS3_15TransportClientEEENS3_8RcHandleINS3_8DataLinkEEEEEEOT_RNSt16remove_referenceISF_E4typeE:
<         2:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<         2:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt4pairIKN7OpenDDS4DCPS12WeakRcHandleINS2_15TransportClientEEENS2_8RcHandleINS2_8DataLinkEEEEEOT_RNSt16remove_referenceISB_E4typeE:
<        14:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        14:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRN7OpenDDS4DCPS8RcHandleINS1_8DataLinkEEEEOT_RNSt16remove_referenceIS6_E4typeE:
<         2:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<         2:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIP17ACE_Message_BlockEOT_RNSt16remove_referenceIS2_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS14SequenceNumberESt3mapIS4_S1_IPNS3_10BasicQueueINS3_21TransportQueueElementEEEP17ACE_Message_BlockESt4lessIS4_ESaIS1_IS5_SD_EEEEEEOT_RNSt16remove_referenceISN_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS14SequenceNumberENS3_6GUID_tEEEEOT_RNSt16remove_referenceISB_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS14SequenceNumberES1_IPNS3_10BasicQueueINS3_21TransportQueueElementEEEP17ACE_Message_BlockEEEEOT_RNSt16remove_referenceISH_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKPN7OpenDDS4DCPS21TransportQueueElementEEOT_RNSt16remove_referenceIS6_E4typeE:
<        95:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        95:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt5tupleIJRKN7OpenDDS4DCPS14SequenceNumberEEEEOT_RNSt16remove_referenceIS7_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRN7OpenDDS4DCPS14SequenceNumberEEOT_RNSt16remove_referenceIS4_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS14SequenceNumberENS3_6GUID_tEEEEOT_RNSt16remove_referenceIS9_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIPN7OpenDDS4DCPS10BasicQueueINS1_21TransportQueueElementEEEEOT_RNSt16remove_referenceIS6_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIN7OpenDDS4DCPS21TransportSendStrategy8SendModeEEOT_RNSt16remove_referenceIS4_E4typeE:
<         2:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<         2:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIPN7OpenDDS4DCPS21TransportQueueElementEEOT_RNSt16remove_referenceIS4_E4typeE:
<         2:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<         2:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKPN7OpenDDS4DCPS21TransportQueueElementEEOT_RNSt16remove_referenceIS6_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt4pairIPN7OpenDDS4DCPS21TransportQueueElementENS2_21TransportSendStrategy8SendModeEEEOT_RNSt16remove_referenceIS8_E4typeE:
<       137:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<       137:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKSt4pairIPN7OpenDDS4DCPS21TransportQueueElementENS2_21TransportSendStrategy8SendModeEEEOT_RNSt16remove_referenceISA_E4typeE:
<        12:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        12:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRN7OpenDDS4DCPS21TransportSendStrategy8SendModeEEOT_RNSt16remove_referenceIS5_E4typeE:
<        90:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        90:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPN7OpenDDS4DCPS21TransportQueueElementEEOT_RNSt16remove_referenceIS5_E4typeE:
<        90:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        90:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKSt4pairIN7OpenDDS4DCPS8RcHandleINS2_15TransportConfigEEESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISC_EEEEOT_RNSt16remove_referenceISI_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINSA_13TransportTypeEEEEEEOT_RNSt16remove_referenceISI_E4typeE:
<        89:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        89:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINSA_13TransportInstEEEEEEOT_RNSt16remove_referenceISI_E4typeE:
<        89:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        89:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEOT_RNSt16remove_referenceISD_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINSA_15TransportConfigEEEEEEOT_RNSt16remove_referenceISI_E4typeE:
<       119:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<       119:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEEEOT_RNSt16remove_referenceISE_E4typeE:
<       623:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<       623:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRP17ACE_Message_BlockEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKN7OpenDDS4DCPS8RcHandleINS1_13TransportInstEEEEOT_RNSt16remove_referenceIS7_E4typeE:
<       267:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<       267:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKN7OpenDDS4DCPS14SequenceNumberEEOT_RNSt16remove_referenceIS5_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIN7OpenDDS4DCPS21Message_Block_DeleterEEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRP17ACE_Message_BlockEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS3_12WeakRcHandleINS3_24TransportReceiveListenerEEEEEEOT_RNSt16remove_referenceISB_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS3_12WeakRcHandleINS3_24TransportReceiveListenerEEEEEEOT_RNSt16remove_referenceISD_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt4pairIN7OpenDDS4DCPS12WeakRcHandleINS2_15TransportClientEEENS2_6GUID_tEEEOT_RNSt16remove_referenceIS8_E4typeE:
<         8:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<         8:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRSt17_Rb_tree_iteratorIN7OpenDDS4DCPS6GUID_tEEEOT_RNSt16remove_referenceIS6_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt5tupleIJRKN7OpenDDS4DCPS6GUID_tEEEEOT_RNSt16remove_referenceIS7_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeIN7OpenDDS4DCPS6GUID_tEEEOT_RNSt16remove_referenceIS7_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt4pairIN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_21TransportSendListenerEEEEEOT_RNSt16remove_referenceIS8_E4typeE:
<        54:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        54:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKN7OpenDDS4DCPS12WeakRcHandleINS1_21TransportSendListenerEEEEOT_RNSt16remove_referenceIS7_E4typeE:
<         9:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<         9:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKN7OpenDDS4DCPS6GUID_tEEOT_RNSt16remove_referenceIS5_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEEEOT_RNSt16remove_referenceIS7_E4typeE:
<         3:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<         3:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt4pairIN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEOT_RNSt16remove_referenceIS8_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKN7OpenDDS4DCPS12WeakRcHandleINS1_24TransportReceiveListenerEEEEOT_RNSt16remove_referenceIS7_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRN7OpenDDS4DCPS6GUID_tEEOT_RNSt16remove_referenceIS4_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS4_NS3_17GUID_tKeyLessThanESaIS4_EEEEEOT_RNSt16remove_referenceISE_E4typeE:
<         6:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<         6:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKSt4pairIN7OpenDDS4DCPS12WeakRcHandleINS2_15TransportClientEEENS2_6GUID_tEEEOT_RNSt16remove_referenceISA_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIN7OpenDDS4DCPS12WeakRcHandleINS1_21TransportSendListenerEEEEOT_RNSt16remove_referenceIS5_E4typeE:
<         9:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<         9:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIN7OpenDDS4DCPS12WeakRcHandleINS1_24TransportReceiveListenerEEEEOT_RNSt16remove_referenceIS5_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKSt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS3_NS2_17GUID_tKeyLessThanESaIS3_EEEEOT_RNSt16remove_referenceISC_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKSt4pairIKN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEOT_RNSt16remove_referenceISB_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tESt3setIS4_NS3_17GUID_tKeyLessThanESaIS4_EEEEEOT_RNSt16remove_referenceISC_E4typeE:
<        36:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        36:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS3_8RcHandleINS3_11DataLinkSetEEEEEEOT_RNSt16remove_referenceISD_E4typeE:
<        18:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        18:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS3_8RcHandleINS3_18ReceiveListenerSetEEEEEEOT_RNSt16remove_referenceISB_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS4_8DataLinkEEEEEEOT_RNSt16remove_referenceISA_E4typeE:
<       111:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<       111:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS3_8RcHandleINS3_18ReceiveListenerSetEEEEEEOT_RNSt16remove_referenceISD_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS3_12WeakRcHandleINS3_21TransportSendListenerEEEEEEOT_RNSt16remove_referenceISB_E4typeE:
<         9:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<         9:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS3_12WeakRcHandleINS3_21TransportSendListenerEEEEEEOT_RNSt16remove_referenceISD_E4typeE:
<         9:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<         9:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIN7OpenDDS4DCPS6GUID_tEEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIN7OpenDDS4DCPS12WeakRcHandleINS1_15TransportClientEEEEOT_RNSt16remove_referenceIS5_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt17_Rb_tree_iteratorIN7OpenDDS4DCPS6GUID_tEEEOT_RNSt16remove_referenceIS5_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt10unique_ptrIN7OpenDDS4DCPS18ReactorInterceptor7CommandESt14default_deleteIS4_EEEOT_RNSt16remove_referenceIS8_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt4pairIN7OpenDDS4DCPS6GUID_tENS2_12WeakRcHandleINS2_24TransportReceiveListenerEEEEEOT_RNSt16remove_referenceIS8_E4typeE:
<       162:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<       162:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKN7OpenDDS4DCPS12WeakRcHandleINS1_24TransportReceiveListenerEEEEOT_RNSt16remove_referenceIS7_E4typeE:
<       153:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<       153:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRN7OpenDDS4DCPS6GUID_tEEOT_RNSt16remove_referenceIS4_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKPN7OpenDDS4DCPS11SendRequestEEOT_RNSt16remove_referenceIS6_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPN7OpenDDS4DCPS18ReactorInterceptor7CommandEEOT_RNSt16remove_referenceIS6_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt14default_deleteIN7OpenDDS4DCPS18ReactorInterceptor7CommandEEEOT_RNSt16remove_referenceIS6_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKmEOT_RNSt16remove_referenceIS2_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIN7OpenDDS4DCPS6GUID_tEEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt5tupleIJRKN7OpenDDS4DCPS6GUID_tEEEEOT_RNSt16remove_referenceIS7_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKm18TAO_FixedSeq_Var_TIN7OpenDDS4DCPS7GUIDSeqEEEEEOT_RNSt16remove_referenceISC_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS3_8RcHandleINS3_8DataLinkEEEEEEOT_RNSt16remove_referenceISD_E4typeE:
<        14:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        14:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS3_8RcHandleINS3_15TransportClient12PendingAssocEEEEEEOT_RNSt16remove_referenceISC_E4typeE:
<        74:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        74:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS3_8RcHandleINS3_15TransportClient12PendingAssocEEEEEEOT_RNSt16remove_referenceISE_E4typeE:
<        18:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        18:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKmN7OpenDDS4DCPS8RcHandleINS4_8DataLinkEEEEEEOT_RNSt16remove_referenceISA_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKmN7OpenDDS4DCPS8RcHandleINS4_8DataLinkEEEEEEOT_RNSt16remove_referenceISC_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEOT_RNSt16remove_referenceIS8_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIN7OpenDDS4DCPS12WeakRcHandleINS1_24TransportReceiveListenerEEEEOT_RNSt16remove_referenceIS5_E4typeE:
<        27:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        27:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKmN7OpenDDS4DCPS8RcHandleINS4_8DataLinkEEEEEEOT_RNSt16remove_referenceISC_E4typeE:
<        91:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        91:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEOT_RNSt16remove_referenceIS8_E4typeE:
<       581:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<       581:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIN7OpenDDS4DCPS12HostnameInfoEEOT_RNSt16remove_referenceIS3_E4typeE:
<         3:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<         3:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRK13ACE_INET_AddrEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKN7OpenDDS4DCPS12HostnameInfoEEOT_RNSt16remove_referenceIS5_E4typeE:
<        18:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        18:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKN7OpenDDS4DCPS12WeakRcHandleINS1_24TransportReceiveListenerEEEEOT_RNSt16remove_referenceIS7_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKN7OpenDDS4DCPS6GUID_tEEOT_RNSt16remove_referenceIS5_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRKPN7OpenDDS4DCPS21TransportQueueElementEEOT_RNSt16remove_referenceIS6_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIN7OpenDDS4DCPS6GUID_tEEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS3_8RcHandleINS3_18ReceiveListenerSetEEEEEEOT_RNSt16remove_referenceISB_E4typeE:
<        36:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        36:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS3_8RcHandleINS3_18ReceiveListenerSetEEEEEEOT_RNSt16remove_referenceISD_E4typeE:
<         6:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<         6:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKN7OpenDDS4DCPS6GUID_tENS3_12WeakRcHandleINS3_24TransportReceiveListenerEEEEEEOT_RNSt16remove_referenceISB_E4typeE:
<        27:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        27:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN7OpenDDS4DCPS6GUID_tENS3_12WeakRcHandleINS3_24TransportReceiveListenerEEEEEEOT_RNSt16remove_referenceISD_E4typeE:
<        27:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<        27:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
< _ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE:
<     #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
<     #####:   75:    { return static_cast<_Tp&&>(__t); }
< ------------------
<         -:   76:
<         -:   77:  /**
<         -:   78:   *  @brief  Forward an rvalue.
<         -:   79:   *  @return The parameter cast to the specified type.
<         -:   80:   *
<         -:   81:   *  This function is used to implement "perfect forwarding".
<         -:   82:   */
<         -:   83:  template<typename _Tp>
<         -:   84:    constexpr _Tp&&
<         -:   85:    forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
<         -:   86:    {
<         -:   87:      static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
<         -:   88:		    " substituting _Tp is an lvalue reference type");
<         -:   89:      return static_cast<_Tp&&>(__t);
<         -:   90:    }
<         -:   91:
<         -:   92:  /**
<         -:   93:   *  @brief  Convert a value to an rvalue.
<         -:   94:   *  @param  __t  A thing of arbitrary type.
<         -:   95:   *  @return The parameter cast to an rvalue-reference to allow moving it.
<         -:   96:  */
<         -:   97:  template<typename _Tp>
<         -:   98:    constexpr typename std::remove_reference<_Tp>::type&&
<      457*:   99:    move(_Tp&& __t) noexcept
<      457*:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSt11_Tuple_implILm1EJN7OpenDDS4DCPS21Message_Block_DeleterEEEEONSt16remove_referenceIT_E4typeEOS7_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRNSt7__cxx114listIN7OpenDDS4DCPS8RcHandleINS3_13TransportInstEEESaIS6_EEEEONSt16remove_referenceIT_E4typeEOSB_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7OpenDDS4DCPS8RcHandleINS9_13TransportTypeEEEEEONSt16remove_referenceIT_E4typeEOSG_:
<        89:   99:    move(_Tp&& __t) noexcept
<        89:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRP17ACE_Message_BlockEONSt16remove_referenceIT_E4typeEOS4_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRjEONSt16remove_referenceIT_E4typeEOS2_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRN7OpenDDS4DCPS16DataSampleHeaderEEONSt16remove_referenceIT_E4typeEOS5_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRN7OpenDDS4DCPS19TransportReassembly9FragRangeEEONSt16remove_referenceIT_E4typeEOS6_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSt15__uniq_ptr_implI17ACE_Message_BlockN7OpenDDS4DCPS21Message_Block_DeleterEEEONSt16remove_referenceIT_E4typeEOS8_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPN7OpenDDS4DCPS6GUID_tEEONSt16remove_referenceIT_E4typeEOS6_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSt5tupleIJP17ACE_Message_BlockN7OpenDDS4DCPS21Message_Block_DeleterEEEEONSt16remove_referenceIT_E4typeEOS9_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSt10unique_ptrI17ACE_Message_BlockN7OpenDDS4DCPS21Message_Block_DeleterEEEONSt16remove_referenceIT_E4typeEOS8_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSt4pairIKN7OpenDDS4DCPS12WeakRcHandleINS2_15TransportClientEEENS2_8RcHandleINS2_8DataLinkEEEEEONSt16remove_referenceIT_E4typeEOSD_:
<         2:   99:    move(_Tp&& __t) noexcept
<         2:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRP17ACE_Message_BlockEONSt16remove_referenceIT_E4typeEOS4_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRP17ACE_Message_BlockEONSt16remove_referenceIT_E4typeEOS4_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRP17ACE_Message_BlockEONSt16remove_referenceIT_E4typeEOS4_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSt4pairIPN7OpenDDS4DCPS21TransportQueueElementENS2_21TransportSendStrategy8SendModeEEEONSt16remove_referenceIT_E4typeEOSA_:
<        47:   99:    move(_Tp&& __t) noexcept
<        47:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPN7OpenDDS4DCPS10WeakObjectEEONSt16remove_referenceIT_E4typeEOS6_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPN7OpenDDS4DCPS11ThreadSynchEEONSt16remove_referenceIT_E4typeEOS6_:
<        18:   99:    move(_Tp&& __t) noexcept
<        18:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPN7OpenDDS4DCPS30Cached_Allocator_With_OverflowI14ACE_Data_Block16ACE_Thread_MutexEEEONSt16remove_referenceIT_E4typeEOS9_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPN7OpenDDS4DCPS30Cached_Allocator_With_OverflowI17ACE_Message_Block16ACE_Thread_MutexEEEONSt16remove_referenceIT_E4typeEOS9_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSt15_Deque_iteratorIPN7OpenDDS4DCPS21TransportQueueElementERS4_PS4_EEONSt16remove_referenceIT_E4typeEOSA_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPPPN7OpenDDS4DCPS21TransportQueueElementEEONSt16remove_referenceIT_E4typeEOS8_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRjEONSt16remove_referenceIT_E4typeEOS2_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRjEONSt16remove_referenceIT_E4typeEOS2_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPhEONSt16remove_referenceIT_E4typeEOS3_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPPcEONSt16remove_referenceIT_E4typeEOS4_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSt15_Deque_iteratorIPN7OpenDDS4DCPS21TransportQueueElementERS4_PS4_EEONSt16remove_referenceIT_E4typeEOSA_:
<       144:   99:    move(_Tp&& __t) noexcept
<       144:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPPPN7OpenDDS4DCPS21TransportQueueElementEEONSt16remove_referenceIT_E4typeEOS8_:
<        72:   99:    move(_Tp&& __t) noexcept
<        72:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPN7OpenDDS4DCPS10WeakObjectEEONSt16remove_referenceIT_E4typeEOS6_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPN7OpenDDS4DCPS6GUID_tEEONSt16remove_referenceIT_E4typeEOS6_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRP17ACE_Message_BlockEONSt16remove_referenceIT_E4typeEOS4_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEONSt16remove_referenceIT_E4typeEOSA_:
<        83:   99:    move(_Tp&& __t) noexcept
<        83:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSt10unique_ptrI17ACE_Message_BlockN7OpenDDS4DCPS21Message_Block_DeleterEEEONSt16remove_referenceIT_E4typeEOS8_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRjEONSt16remove_referenceIT_E4typeEOS2_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRjEONSt16remove_referenceIT_E4typeEOS2_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSt4pairIN7OpenDDS4DCPS12WeakRcHandleINS2_15TransportClientEEENS2_6GUID_tEEEONSt16remove_referenceIT_E4typeEOSA_:
<         2:   99:    move(_Tp&& __t) noexcept
<         2:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPN7OpenDDS4DCPS10WeakObjectEEONSt16remove_referenceIT_E4typeEOS6_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPN7OpenDDS4DCPS27ThreadPerConnectionSendTaskEEONSt16remove_referenceIT_E4typeEOS6_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPN7OpenDDS4DCPS30Cached_Allocator_With_OverflowI17ACE_Message_Block16ACE_Thread_MutexEEEONSt16remove_referenceIT_E4typeEOS9_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPN7OpenDDS4DCPS30Cached_Allocator_With_OverflowI14ACE_Data_Block16ACE_Thread_MutexEEEONSt16remove_referenceIT_E4typeEOS9_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPN7OpenDDS4DCPS6GUID_tEEONSt16remove_referenceIT_E4typeEOS6_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRjEONSt16remove_referenceIT_E4typeEOS2_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPhEONSt16remove_referenceIT_E4typeEOS3_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRN7OpenDDS4DCPS8RcHandleINS1_13TransportInstEEEEONSt16remove_referenceIT_E4typeEOS7_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPN7OpenDDS4DCPS16TransportLocatorEEONSt16remove_referenceIT_E4typeEOS6_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPcEONSt16remove_referenceIT_E4typeEOS3_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSt10unique_ptrI17ACE_Message_BlockN7OpenDDS4DCPS21Message_Block_DeleterEEEONSt16remove_referenceIT_E4typeEOS8_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRP17ACE_Message_BlockEONSt16remove_referenceIT_E4typeEOS4_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRP17ACE_Message_BlockEONSt16remove_referenceIT_E4typeEOS4_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPhEONSt16remove_referenceIT_E4typeEOS3_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSt4pairIKmN7OpenDDS4DCPS8RcHandleINS3_8DataLinkEEEEEONSt16remove_referenceIT_E4typeEOSA_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRSt10unique_ptrIN7OpenDDS4DCPS18ReactorInterceptor7CommandESt14default_deleteIS4_EEEONSt16remove_referenceIT_E4typeEOSA_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPN7OpenDDS4DCPS16TransportLocatorEEONSt16remove_referenceIT_E4typeEOS6_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPcEONSt16remove_referenceIT_E4typeEOS3_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
< _ZSt4moveIRPN7OpenDDS4DCPS10WeakObjectEEONSt16remove_referenceIT_E4typeEOS6_:
<     #####:   99:    move(_Tp&& __t) noexcept
<     #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
< ------------------
---
>         -:   50:_GLIBCXX_END_NAMESPACE_VERSION
>         -:   51:} // namespace
>         -:   52:
>         -:   53:#if __cplusplus >= 201103L
>         -:   54:#include <type_traits> // Brings in std::declval too.
>         -:   55:
>         -:   56:namespace std _GLIBCXX_VISIBILITY(default)
>         -:   57:{
>         -:   58:_GLIBCXX_BEGIN_NAMESPACE_VERSION
>         -:   59:
>         -:   60:  /**
>         -:   61:   *  @addtogroup utilities
>         -:   62:   *  @{
>         -:   63:   */
>         -:   64:
>         -:   65:  /**
>         -:   66:   *  @brief  Forward an lvalue.
>         -:   67:   *  @return The parameter cast to the specified type.
>         -:   68:   *
>         -:   69:   *  This function is used to implement "perfect forwarding".
>         -:   70:   */
>         -:   71:  template<typename _Tp>
>         -:   72:    constexpr _Tp&&
>         -:   73:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
>         -:   74:    { return static_cast<_Tp&&>(__t); }
>         -:   75:
>         -:   76:  /**
>         -:   77:   *  @brief  Forward an rvalue.
>         -:   78:   *  @return The parameter cast to the specified type.
>         -:   79:   *
>         -:   80:   *  This function is used to implement "perfect forwarding".
>         -:   81:   */
>         -:   82:  template<typename _Tp>
>         -:   83:    constexpr _Tp&&
>         -:   84:    forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
>         -:   85:    {
>         -:   86:      static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
>         -:   87:		    " substituting _Tp is an lvalue reference type");
>         -:   88:      return static_cast<_Tp&&>(__t);
>         -:   89:    }
>         -:   90:
>         -:   91:  /**
>         -:   92:   *  @brief  Convert a value to an rvalue.
>         -:   93:   *  @param  __t  A thing of arbitrary type.
>         -:   94:   *  @return The parameter cast to an rvalue-reference to allow moving it.
>         -:   95:  */
>         -:   96:  template<typename _Tp>
>         -:   97:    constexpr typename std::remove_reference<_Tp>::type&&
>     #####:   98:    move(_Tp&& __t) noexcept
>     #####:   99:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
>         -:  100:
1055,1121c104,170
<         -:  102:
<         -:  103:  template<typename _Tp>
<         -:  104:    struct __move_if_noexcept_cond
<         -:  105:    : public __and_<__not_<is_nothrow_move_constructible<_Tp>>,
<         -:  106:                    is_copy_constructible<_Tp>>::type { };
<         -:  107:
<         -:  108:  /**
<         -:  109:   *  @brief  Conditionally convert a value to an rvalue.
<         -:  110:   *  @param  __x  A thing of arbitrary type.
<         -:  111:   *  @return The parameter, possibly cast to an rvalue-reference.
<         -:  112:   *
<         -:  113:   *  Same as std::move unless the type's move constructor could throw and the
<         -:  114:   *  type is copyable, in which case an lvalue-reference is returned instead.
<         -:  115:   */
<         -:  116:  template<typename _Tp>
<         -:  117:    constexpr typename
<         -:  118:    conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp&, _Tp&&>::type
<         -:  119:    move_if_noexcept(_Tp& __x) noexcept
<         -:  120:    { return std::move(__x); }
<         -:  121:
<         -:  122:  // declval, from type_traits.
<         -:  123:
<         -:  124:#if __cplusplus > 201402L
<         -:  125:  // _GLIBCXX_RESOLVE_LIB_DEFECTS
<         -:  126:  // 2296. std::addressof should be constexpr
<         -:  127:# define __cpp_lib_addressof_constexpr 201603
<         -:  128:#endif
<         -:  129:  /**
<         -:  130:   *  @brief Returns the actual address of the object or function
<         -:  131:   *         referenced by r, even in the presence of an overloaded
<         -:  132:   *         operator&.
<         -:  133:   *  @param  __r  Reference to an object or function.
<         -:  134:   *  @return   The actual address.
<         -:  135:  */
<         -:  136:  template<typename _Tp>
<         -:  137:    inline _GLIBCXX17_CONSTEXPR _Tp*
<     #####:  138:    addressof(_Tp& __r) noexcept
<     #####:  139:    { return std::__addressof(__r); }
<         -:  140:
<         -:  141:  // _GLIBCXX_RESOLVE_LIB_DEFECTS
<         -:  142:  // 2598. addressof works on temporaries
<         -:  143:  template<typename _Tp>
<         -:  144:    const _Tp* addressof(const _Tp&&) = delete;
<         -:  145:
<         -:  146:  // C++11 version of std::exchange for internal use.
<         -:  147:  template <typename _Tp, typename _Up = _Tp>
<         -:  148:    inline _Tp
<         -:  149:    __exchange(_Tp& __obj, _Up&& __new_val)
<         -:  150:    {
<         -:  151:      _Tp __old_val = std::move(__obj);
<         -:  152:      __obj = std::forward<_Up>(__new_val);
<         -:  153:      return __old_val;
<         -:  154:    }
<         -:  155:
<         -:  156:  /// @} group utilities
<         -:  157:
<         -:  158:#define _GLIBCXX_MOVE(__val) std::move(__val)
<         -:  159:#define _GLIBCXX_FORWARD(_Tp, __val) std::forward<_Tp>(__val)
<         -:  160:#else
<         -:  161:#define _GLIBCXX_MOVE(__val) (__val)
<         -:  162:#define _GLIBCXX_FORWARD(_Tp, __val) (__val)
<         -:  163:#endif
<         -:  164:
<         -:  165:  /**
<         -:  166:   *  @addtogroup utilities
<         -:  167:   *  @{
<         -:  168:   */
---
>         -:  102:  template<typename _Tp>
>         -:  103:    struct __move_if_noexcept_cond
>         -:  104:    : public __and_<__not_<is_nothrow_move_constructible<_Tp>>,
>         -:  105:                    is_copy_constructible<_Tp>>::type { };
>         -:  106:
>         -:  107:  /**
>         -:  108:   *  @brief  Conditionally convert a value to an rvalue.
>         -:  109:   *  @param  __x  A thing of arbitrary type.
>         -:  110:   *  @return The parameter, possibly cast to an rvalue-reference.
>         -:  111:   *
>         -:  112:   *  Same as std::move unless the type's move constructor could throw and the
>         -:  113:   *  type is copyable, in which case an lvalue-reference is returned instead.
>         -:  114:   */
>         -:  115:  template<typename _Tp>
>         -:  116:    constexpr typename
>         -:  117:    conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp&, _Tp&&>::type
>         -:  118:    move_if_noexcept(_Tp& __x) noexcept
>         -:  119:    { return std::move(__x); }
>         -:  120:
>         -:  121:  // declval, from type_traits.
>         -:  122:
>         -:  123:#if __cplusplus > 201402L
>         -:  124:  // _GLIBCXX_RESOLVE_LIB_DEFECTS
>         -:  125:  // 2296. std::addressof should be constexpr
>         -:  126:# define __cpp_lib_addressof_constexpr 201603
>         -:  127:#endif
>         -:  128:  /**
>         -:  129:   *  @brief Returns the actual address of the object or function
>         -:  130:   *         referenced by r, even in the presence of an overloaded
>         -:  131:   *         operator&.
>         -:  132:   *  @param  __r  Reference to an object or function.
>         -:  133:   *  @return   The actual address.
>         -:  134:  */
>         -:  135:  template<typename _Tp>
>         -:  136:    inline _GLIBCXX17_CONSTEXPR _Tp*
>         -:  137:    addressof(_Tp& __r) noexcept
>         -:  138:    { return std::__addressof(__r); }
>         -:  139:
>         -:  140:  // _GLIBCXX_RESOLVE_LIB_DEFECTS
>         -:  141:  // 2598. addressof works on temporaries
>         -:  142:  template<typename _Tp>
>         -:  143:    const _Tp* addressof(const _Tp&&) = delete;
>         -:  144:
>         -:  145:  // C++11 version of std::exchange for internal use.
>         -:  146:  template <typename _Tp, typename _Up = _Tp>
>         -:  147:    inline _Tp
>         -:  148:    __exchange(_Tp& __obj, _Up&& __new_val)
>         -:  149:    {
>         -:  150:      _Tp __old_val = std::move(__obj);
>         -:  151:      __obj = std::forward<_Up>(__new_val);
>         -:  152:      return __old_val;
>         -:  153:    }
>         -:  154:
>         -:  155:  /// @} group utilities
>         -:  156:_GLIBCXX_END_NAMESPACE_VERSION
>         -:  157:} // namespace
>         -:  158:
>         -:  159:#define _GLIBCXX_MOVE(__val) std::move(__val)
>         -:  160:#define _GLIBCXX_FORWARD(_Tp, __val) std::forward<_Tp>(__val)
>         -:  161:#else
>         -:  162:#define _GLIBCXX_MOVE(__val) (__val)
>         -:  163:#define _GLIBCXX_FORWARD(_Tp, __val) (__val)
>         -:  164:#endif
>         -:  165:
>         -:  166:namespace std _GLIBCXX_VISIBILITY(default)
>         -:  167:{
>         -:  168:_GLIBCXX_BEGIN_NAMESPACE_VERSION
1124,1966c173,198
<         -:  171:   *  @brief Swaps two values.
<         -:  172:   *  @param  __a  A thing of arbitrary type.
<         -:  173:   *  @param  __b  Another thing of arbitrary type.
<         -:  174:   *  @return   Nothing.
<         -:  175:  */
<         -:  176:  template<typename _Tp>
<         -:  177:    inline
<         -:  178:#if __cplusplus >= 201103L
<         -:  179:    typename enable_if<__and_<__not_<__is_tuple_like<_Tp>>,
<         -:  180:			      is_move_constructible<_Tp>,
<         -:  181:			      is_move_assignable<_Tp>>::value>::type
<       78*:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<       78*:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<       78*:  194:      __a = _GLIBCXX_MOVE(__b);
<       78*:  195:      __b = _GLIBCXX_MOVE(__tmp);
<       78*:  196:    }
< ------------------
< _ZSt4swapIPPcENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIP17ACE_Message_BlockENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIP17ACE_Message_BlockENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPN7OpenDDS4DCPS6GUID_tEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SI_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapISt15__uniq_ptr_implI17ACE_Message_BlockN7OpenDDS4DCPS21Message_Block_DeleterEEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISA_ESt18is_move_assignableISA_EEE5valueEvE4typeERSA_SK_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIN7OpenDDS4DCPS16DataSampleHeaderEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIbENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIjENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIP17ACE_Message_BlockENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapImENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPPPN7OpenDDS4DCPS21TransportQueueElementEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISA_ESt18is_move_assignableISA_EEE5valueEvE4typeERSA_SK_:
<        24:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<        24:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<        24:  194:      __a = _GLIBCXX_MOVE(__b);
<        24:  195:      __b = _GLIBCXX_MOVE(__tmp);
<        24:  196:    }
< ------------------
< _ZSt4swapISt15_Deque_iteratorIPN7OpenDDS4DCPS21TransportQueueElementERS4_PS4_EENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISC_ESt18is_move_assignableISC_EEE5valueEvE4typeERSC_SM_:
<        48:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<        48:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<        48:  194:      __a = _GLIBCXX_MOVE(__b);
<        48:  195:      __b = _GLIBCXX_MOVE(__tmp);
<        48:  196:    }
< ------------------
< _ZSt4swapIjENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIbENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPhENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SF_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIjENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIP17ACE_Message_BlockENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapImENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPPPN7OpenDDS4DCPS21TransportQueueElementEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISA_ESt18is_move_assignableISA_EEE5valueEvE4typeERSA_SK_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapISt15_Deque_iteratorIPN7OpenDDS4DCPS21TransportQueueElementERS4_PS4_EENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISC_ESt18is_move_assignableISC_EEE5valueEvE4typeERSC_SM_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPN7OpenDDS4DCPS30Cached_Allocator_With_OverflowI17ACE_Message_Block16ACE_Thread_MutexEEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISB_ESt18is_move_assignableISB_EEE5valueEvE4typeERSB_SL_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPN7OpenDDS4DCPS30Cached_Allocator_With_OverflowI14ACE_Data_Block16ACE_Thread_MutexEEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISB_ESt18is_move_assignableISB_EEE5valueEvE4typeERSB_SL_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPN7OpenDDS4DCPS11ThreadSynchEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SI_:
<         6:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<         6:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<         6:  194:      __a = _GLIBCXX_MOVE(__b);
<         6:  195:      __b = _GLIBCXX_MOVE(__tmp);
<         6:  196:    }
< ------------------
< _ZSt4swapIPN7OpenDDS4DCPS10WeakObjectEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SI_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIjENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPN7OpenDDS4DCPS6GUID_tEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SI_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPN7OpenDDS4DCPS30Cached_Allocator_With_OverflowI14ACE_Data_Block16ACE_Thread_MutexEEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISB_ESt18is_move_assignableISB_EEE5valueEvE4typeERSB_SL_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPN7OpenDDS4DCPS30Cached_Allocator_With_OverflowI17ACE_Message_Block16ACE_Thread_MutexEEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISB_ESt18is_move_assignableISB_EEE5valueEvE4typeERSB_SL_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPN7OpenDDS4DCPS27ThreadPerConnectionSendTaskEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SI_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPN7OpenDDS4DCPS10WeakObjectEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SI_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIbENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIjENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIP17ACE_Message_BlockENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPN7OpenDDS4DCPS6GUID_tEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SI_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPN7OpenDDS4DCPS10WeakObjectEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SI_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIbENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIP17ACE_Message_BlockENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPN7OpenDDS4DCPS10WeakObjectEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SI_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPcENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SF_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPN7OpenDDS4DCPS16TransportLocatorEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SI_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIbENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPhENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SF_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIjENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIP17ACE_Message_BlockENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPcENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SF_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPN7OpenDDS4DCPS16TransportLocatorEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SI_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIbENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
< _ZSt4swapIPhENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SF_:
<     #####:  182:    swap(_Tp& __a, _Tp& __b)
<         -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
<         -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
<         -:  185:#else
<         -:  186:    void
<         -:  187:    swap(_Tp& __a, _Tp& __b)
<         -:  188:#endif
<         -:  189:    {
<         -:  190:      // concept requirements
<         -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
<         -:  192:
<     #####:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
<     #####:  194:      __a = _GLIBCXX_MOVE(__b);
<     #####:  195:      __b = _GLIBCXX_MOVE(__tmp);
<     #####:  196:    }
< ------------------
---
>         -:  171:   *  @addtogroup utilities
>         -:  172:   *  @{
>         -:  173:   */
>         -:  174:
>         -:  175:  /**
>         -:  176:   *  @brief Swaps two values.
>         -:  177:   *  @param  __a  A thing of arbitrary type.
>         -:  178:   *  @param  __b  Another thing of arbitrary type.
>         -:  179:   *  @return   Nothing.
>         -:  180:  */
>         -:  181:  template<typename _Tp>
>         -:  182:    inline
>         -:  183:#if __cplusplus >= 201103L
>         -:  184:    typename enable_if<__and_<__not_<__is_tuple_like<_Tp>>,
>         -:  185:			      is_move_constructible<_Tp>,
>         -:  186:			      is_move_assignable<_Tp>>::value>::type
>     #####:  187:    swap(_Tp& __a, _Tp& __b)
>         -:  188:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
>         -:  189:	            is_nothrow_move_assignable<_Tp>>::value)
>         -:  190:#else
>         -:  191:    void
>         -:  192:    swap(_Tp& __a, _Tp& __b)
>         -:  193:#endif
>         -:  194:    {
>         -:  195:      // concept requirements
>         -:  196:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
1968,1990c200,227
<         -:  198:  // _GLIBCXX_RESOLVE_LIB_DEFECTS
<         -:  199:  // DR 809. std::swap should be overloaded for array types.
<         -:  200:  /// Swap the contents of two arrays.
<         -:  201:  template<typename _Tp, size_t _Nm>
<         -:  202:    inline
<         -:  203:#if __cplusplus >= 201103L
<         -:  204:    typename enable_if<__is_swappable<_Tp>::value>::type
<         -:  205:    swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
<         -:  206:    noexcept(__is_nothrow_swappable<_Tp>::value)
<         -:  207:#else
<         -:  208:    void
<         -:  209:    swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
<         -:  210:#endif
<         -:  211:    {
<         -:  212:      for (size_t __n = 0; __n < _Nm; ++__n)
<         -:  213:	swap(__a[__n], __b[__n]);
<         -:  214:    }
<         -:  215:
<         -:  216:  /// @} group utilities
<         -:  217:_GLIBCXX_END_NAMESPACE_VERSION
<         -:  218:} // namespace
<         -:  219:
<         -:  220:#endif /* _MOVE_H */
---
>     #####:  198:      _Tp __tmp = _GLIBCXX_MOVE(__a);
>     #####:  199:      __a = _GLIBCXX_MOVE(__b);
>     #####:  200:      __b = _GLIBCXX_MOVE(__tmp);
>     #####:  201:    }
>         -:  202:
>         -:  203:  // _GLIBCXX_RESOLVE_LIB_DEFECTS
>         -:  204:  // DR 809. std::swap should be overloaded for array types.
>         -:  205:  /// Swap the contents of two arrays.
>         -:  206:  template<typename _Tp, size_t _Nm>
>         -:  207:    inline
>         -:  208:#if __cplusplus >= 201103L
>         -:  209:    typename enable_if<__is_swappable<_Tp>::value>::type
>         -:  210:    swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
>         -:  211:    noexcept(__is_nothrow_swappable<_Tp>::value)
>         -:  212:#else
>         -:  213:    void
>         -:  214:    swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
>         -:  215:#endif
>         -:  216:    {
>         -:  217:      for (size_t __n = 0; __n < _Nm; ++__n)
>         -:  218:	swap(__a[__n], __b[__n]);
>         -:  219:    }
>         -:  220:
>         -:  221:  /// @} group utilities
>         -:  222:_GLIBCXX_END_NAMESPACE_VERSION
>         -:  223:} // namespace
>         -:  224:
>         -:  225:#endif /* _MOVE_H */
