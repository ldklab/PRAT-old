1,2c1,2
<         -:    0:Source:/usr/include/c++/8/bits/stl_uninitialized.h
<         -:    0:Programs:51
---
>         -:    0:Source:/usr/include/c++/7/bits/stl_uninitialized.h
>         -:    0:Programs:3
5c5
<         -:    3:// Copyright (C) 2001-2018 Free Software Foundation, Inc.
---
>         -:    3:// Copyright (C) 2001-2017 Free Software Foundation, Inc.
78,113d77
<      292*:   76:        __uninit_copy(_InputIterator __first, _InputIterator __last,
<         -:   77:		      _ForwardIterator __result)
<         -:   78:        {
<      292*:   79:	  _ForwardIterator __cur = __result;
<         -:   80:	  __try
<         -:   81:	    {
<      297*:   82:	      for (; __first != __last; ++__first, (void)++__cur)
<        5*:   83:		std::_Construct(std::__addressof(*__cur), *__first);
<      292*:   84:	      return __cur;
<         -:   85:	    }
<     =====:   86:	  __catch(...)
<         -:   87:	    {
<     =====:   88:	      std::_Destroy(__result, __cur);
<     =====:   89:	      __throw_exception_again;
<         -:   90:	    }
<         -:   91:	}
< ------------------
< _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt4pairIN7OpenDDS4DCPS12WeakRcHandleINS4_15TransportClientEEENS4_6GUID_tEEPS9_EET0_T_SE_SD_:
<         4:   76:        __uninit_copy(_InputIterator __first, _InputIterator __last,
<         -:   77:		      _ForwardIterator __result)
<         -:   78:        {
<         4:   79:	  _ForwardIterator __cur = __result;
<         -:   80:	  __try
<         -:   81:	    {
<        4*:   82:	      for (; __first != __last; ++__first, (void)++__cur)
<     #####:   83:		std::_Construct(std::__addressof(*__cur), *__first);
<         4:   84:	      return __cur;
<         -:   85:	    }
<     =====:   86:	  __catch(...)
<         -:   87:	    {
<     =====:   88:	      std::_Destroy(__result, __cur);
<     =====:   89:	      __throw_exception_again;
<         -:   90:	    }
<         -:   91:	}
< ------------------
< _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK13ACE_INET_AddrPS2_EET0_T_S7_S6_:
130,274d93
< ------------------
< _ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN7OpenDDS4DCPS12HostnameInfoEES6_EET0_T_S9_S8_:
<        12:   76:        __uninit_copy(_InputIterator __first, _InputIterator __last,
<         -:   77:		      _ForwardIterator __result)
<         -:   78:        {
<        12:   79:	  _ForwardIterator __cur = __result;
<         -:   80:	  __try
<         -:   81:	    {
<        15:   82:	      for (; __first != __last; ++__first, (void)++__cur)
<         3:   83:		std::_Construct(std::__addressof(*__cur), *__first);
<        12:   84:	      return __cur;
<         -:   85:	    }
<     =====:   86:	  __catch(...)
<         -:   87:	    {
<     =====:   88:	      std::_Destroy(__result, __cur);
<     =====:   89:	      __throw_exception_again;
<         -:   90:	    }
<         -:   91:	}
< ------------------
< _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN7OpenDDS4DCPS12WeakRcHandleINS3_24TransportReceiveListenerEEEPS6_EET0_T_SB_SA_:
<        84:   76:        __uninit_copy(_InputIterator __first, _InputIterator __last,
<         -:   77:		      _ForwardIterator __result)
<         -:   78:        {
<        84:   79:	  _ForwardIterator __cur = __result;
<         -:   80:	  __try
<         -:   81:	    {
<       84*:   82:	      for (; __first != __last; ++__first, (void)++__cur)
<     #####:   83:		std::_Construct(std::__addressof(*__cur), *__first);
<        84:   84:	      return __cur;
<         -:   85:	    }
<     =====:   86:	  __catch(...)
<         -:   87:	    {
<     =====:   88:	      std::_Destroy(__result, __cur);
<     =====:   89:	      __throw_exception_again;
<         -:   90:	    }
<         -:   91:	}
< ------------------
< _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN7OpenDDS4DCPS8RcHandleINS3_13TransportInstEEEPS6_EET0_T_SB_SA_:
<     #####:   76:        __uninit_copy(_InputIterator __first, _InputIterator __last,
<         -:   77:		      _ForwardIterator __result)
<         -:   78:        {
<     #####:   79:	  _ForwardIterator __cur = __result;
<         -:   80:	  __try
<         -:   81:	    {
<     #####:   82:	      for (; __first != __last; ++__first, (void)++__cur)
<     #####:   83:		std::_Construct(std::__addressof(*__cur), *__first);
<     #####:   84:	      return __cur;
<         -:   85:	    }
<     =====:   86:	  __catch(...)
<         -:   87:	    {
<     =====:   88:	      std::_Destroy(__result, __cur);
<     =====:   89:	      __throw_exception_again;
<         -:   90:	    }
<         -:   91:	}
< ------------------
< _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEPS9_EET0_T_SI_SH_:
<     #####:   76:        __uninit_copy(_InputIterator __first, _InputIterator __last,
<         -:   77:		      _ForwardIterator __result)
<         -:   78:        {
<     #####:   79:	  _ForwardIterator __cur = __result;
<         -:   80:	  __try
<         -:   81:	    {
<     #####:   82:	      for (; __first != __last; ++__first, (void)++__cur)
<     #####:   83:		std::_Construct(std::__addressof(*__cur), *__first);
<     #####:   84:	      return __cur;
<         -:   85:	    }
<     =====:   86:	  __catch(...)
<         -:   87:	    {
<     =====:   88:	      std::_Destroy(__result, __cur);
<     =====:   89:	      __throw_exception_again;
<         -:   90:	    }
<         -:   91:	}
< ------------------
< _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN7OpenDDS4DCPS8RcHandleINS3_13TransportInstEEEPS6_EET0_T_SB_SA_:
<       178:   76:        __uninit_copy(_InputIterator __first, _InputIterator __last,
<         -:   77:		      _ForwardIterator __result)
<         -:   78:        {
<       178:   79:	  _ForwardIterator __cur = __result;
<         -:   80:	  __try
<         -:   81:	    {
<      178*:   82:	      for (; __first != __last; ++__first, (void)++__cur)
<     #####:   83:		std::_Construct(std::__addressof(*__cur), *__first);
<       178:   84:	      return __cur;
<         -:   85:	    }
<     =====:   86:	  __catch(...)
<         -:   87:	    {
<     =====:   88:	      std::_Destroy(__result, __cur);
<     =====:   89:	      __throw_exception_again;
<         -:   90:	    }
<         -:   91:	}
< ------------------
< _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt4pairIN7OpenDDS4DCPS8RcHandleINS4_15TransportConfigEEESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EEEPSH_EET0_T_SM_SL_:
<     #####:   76:        __uninit_copy(_InputIterator __first, _InputIterator __last,
<         -:   77:		      _ForwardIterator __result)
<         -:   78:        {
<     #####:   79:	  _ForwardIterator __cur = __result;
<         -:   80:	  __try
<         -:   81:	    {
<     #####:   82:	      for (; __first != __last; ++__first, (void)++__cur)
<     #####:   83:		std::_Construct(std::__addressof(*__cur), *__first);
<     #####:   84:	      return __cur;
<         -:   85:	    }
<     =====:   86:	  __catch(...)
<         -:   87:	    {
<     =====:   88:	      std::_Destroy(__result, __cur);
<     =====:   89:	      __throw_exception_again;
<         -:   90:	    }
<         -:   91:	}
< ------------------
< _ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_:
<     #####:   76:        __uninit_copy(_InputIterator __first, _InputIterator __last,
<         -:   77:		      _ForwardIterator __result)
<         -:   78:        {
<     #####:   79:	  _ForwardIterator __cur = __result;
<         -:   80:	  __try
<         -:   81:	    {
<     #####:   82:	      for (; __first != __last; ++__first, (void)++__cur)
<     #####:   83:		std::_Construct(std::__addressof(*__cur), *__first);
<     #####:   84:	      return __cur;
<         -:   85:	    }
<     =====:   86:	  __catch(...)
<         -:   87:	    {
<     =====:   88:	      std::_Destroy(__result, __cur);
<     =====:   89:	      __throw_exception_again;
<         -:   90:	    }
<         -:   91:	}
< ------------------
< _ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt4pairIPN7OpenDDS4DCPS21TransportQueueElementENS5_21TransportSendStrategy8SendModeEEESB_EET0_T_SE_SD_:
<        14:   76:        __uninit_copy(_InputIterator __first, _InputIterator __last,
<         -:   77:		      _ForwardIterator __result)
<         -:   78:        {
<        14:   79:	  _ForwardIterator __cur = __result;
<         -:   80:	  __try
<         -:   81:	    {
<        16:   82:	      for (; __first != __last; ++__first, (void)++__cur)
<         2:   83:		std::_Construct(std::__addressof(*__cur), *__first);
<        14:   84:	      return __cur;
<         -:   85:	    }
<     =====:   86:	  __catch(...)
<         -:   87:	    {
<     =====:   88:	      std::_Destroy(__result, __cur);
<     =====:   89:	      __throw_exception_again;
<         -:   90:	    }
<         -:   91:	}
< ------------------
282c101
<        55:   99:        __uninit_copy(_InputIterator __first, _InputIterator __last,
---
>         -:   99:        __uninit_copy(_InputIterator __first, _InputIterator __last,
284c103
<        55:  101:        { return std::copy(__first, __last, __result); }
---
>         -:  101:        { return std::copy(__first, __last, __result); }
298,435d116
<      347*:  115:    uninitialized_copy(_InputIterator __first, _InputIterator __last,
<         -:  116:		       _ForwardIterator __result)
<         -:  117:    {
<         -:  118:      typedef typename iterator_traits<_InputIterator>::value_type
<         -:  119:	_ValueType1;
<         -:  120:      typedef typename iterator_traits<_ForwardIterator>::value_type
<         -:  121:	_ValueType2;
<         -:  122:#if __cplusplus < 201103L
<         -:  123:      const bool __assignable = true;
<         -:  124:#else
<         -:  125:      // trivial types can have deleted assignment
<         -:  126:      typedef typename iterator_traits<_InputIterator>::reference _RefType1;
<         -:  127:      typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
<      347*:  128:      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
<         -:  129:#endif
<         -:  130:
<         -:  131:      return std::__uninitialized_copy<__is_trivial(_ValueType1)
<         -:  132:				       && __is_trivial(_ValueType2)
<         -:  133:				       && __assignable>::
<      347*:  134:	__uninit_copy(__first, __last, __result);
<         -:  135:    }
< ------------------
< _ZSt18uninitialized_copyIPKSt4pairIN7OpenDDS4DCPS12WeakRcHandleINS2_15TransportClientEEENS2_6GUID_tEEPS7_ET0_T_SC_SB_:
<         4:  115:    uninitialized_copy(_InputIterator __first, _InputIterator __last,
<         -:  116:		       _ForwardIterator __result)
<         -:  117:    {
<         -:  118:      typedef typename iterator_traits<_InputIterator>::value_type
<         -:  119:	_ValueType1;
<         -:  120:      typedef typename iterator_traits<_ForwardIterator>::value_type
<         -:  121:	_ValueType2;
<         -:  122:#if __cplusplus < 201103L
<         -:  123:      const bool __assignable = true;
<         -:  124:#else
<         -:  125:      // trivial types can have deleted assignment
<         -:  126:      typedef typename iterator_traits<_InputIterator>::reference _RefType1;
<         -:  127:      typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
<         4:  128:      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
<         -:  129:#endif
<         -:  130:
<         -:  131:      return std::__uninitialized_copy<__is_trivial(_ValueType1)
<         -:  132:				       && __is_trivial(_ValueType2)
<         -:  133:				       && __assignable>::
<         4:  134:	__uninit_copy(__first, __last, __result);
<         -:  135:    }
< ------------------
< _ZSt18uninitialized_copyIPK13ACE_INET_AddrPS0_ET0_T_S5_S4_:
<     #####:  115:    uninitialized_copy(_InputIterator __first, _InputIterator __last,
<         -:  116:		       _ForwardIterator __result)
<         -:  117:    {
<         -:  118:      typedef typename iterator_traits<_InputIterator>::value_type
<         -:  119:	_ValueType1;
<         -:  120:      typedef typename iterator_traits<_ForwardIterator>::value_type
<         -:  121:	_ValueType2;
<         -:  122:#if __cplusplus < 201103L
<         -:  123:      const bool __assignable = true;
<         -:  124:#else
<         -:  125:      // trivial types can have deleted assignment
<         -:  126:      typedef typename iterator_traits<_InputIterator>::reference _RefType1;
<         -:  127:      typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
<     #####:  128:      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
<         -:  129:#endif
<         -:  130:
<         -:  131:      return std::__uninitialized_copy<__is_trivial(_ValueType1)
<         -:  132:				       && __is_trivial(_ValueType2)
<         -:  133:				       && __assignable>::
<     #####:  134:	__uninit_copy(__first, __last, __result);
<         -:  135:    }
< ------------------
< _ZSt18uninitialized_copyISt13move_iteratorIPN7OpenDDS4DCPS12HostnameInfoEES4_ET0_T_S7_S6_:
<        12:  115:    uninitialized_copy(_InputIterator __first, _InputIterator __last,
<         -:  116:		       _ForwardIterator __result)
<         -:  117:    {
<         -:  118:      typedef typename iterator_traits<_InputIterator>::value_type
<         -:  119:	_ValueType1;
<         -:  120:      typedef typename iterator_traits<_ForwardIterator>::value_type
<         -:  121:	_ValueType2;
<         -:  122:#if __cplusplus < 201103L
<         -:  123:      const bool __assignable = true;
<         -:  124:#else
<         -:  125:      // trivial types can have deleted assignment
<         -:  126:      typedef typename iterator_traits<_InputIterator>::reference _RefType1;
<         -:  127:      typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
<        12:  128:      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
<         -:  129:#endif
<         -:  130:
<         -:  131:      return std::__uninitialized_copy<__is_trivial(_ValueType1)
<         -:  132:				       && __is_trivial(_ValueType2)
<         -:  133:				       && __assignable>::
<        12:  134:	__uninit_copy(__first, __last, __result);
<         -:  135:    }
< ------------------
< _ZSt18uninitialized_copyIPKN7OpenDDS4DCPS12WeakRcHandleINS1_24TransportReceiveListenerEEEPS4_ET0_T_S9_S8_:
<        84:  115:    uninitialized_copy(_InputIterator __first, _InputIterator __last,
<         -:  116:		       _ForwardIterator __result)
<         -:  117:    {
<         -:  118:      typedef typename iterator_traits<_InputIterator>::value_type
<         -:  119:	_ValueType1;
<         -:  120:      typedef typename iterator_traits<_ForwardIterator>::value_type
<         -:  121:	_ValueType2;
<         -:  122:#if __cplusplus < 201103L
<         -:  123:      const bool __assignable = true;
<         -:  124:#else
<         -:  125:      // trivial types can have deleted assignment
<         -:  126:      typedef typename iterator_traits<_InputIterator>::reference _RefType1;
<         -:  127:      typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
<        84:  128:      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
<         -:  129:#endif
<         -:  130:
<         -:  131:      return std::__uninitialized_copy<__is_trivial(_ValueType1)
<         -:  132:				       && __is_trivial(_ValueType2)
<         -:  133:				       && __assignable>::
<        84:  134:	__uninit_copy(__first, __last, __result);
<         -:  135:    }
< ------------------
< _ZSt18uninitialized_copyISt13move_iteratorIPPN7OpenDDS4DCPS13TransportImplEES5_ET0_T_S8_S7_:
<        55:  115:    uninitialized_copy(_InputIterator __first, _InputIterator __last,
<         -:  116:		       _ForwardIterator __result)
<         -:  117:    {
<         -:  118:      typedef typename iterator_traits<_InputIterator>::value_type
<         -:  119:	_ValueType1;
<         -:  120:      typedef typename iterator_traits<_ForwardIterator>::value_type
<         -:  121:	_ValueType2;
<         -:  122:#if __cplusplus < 201103L
<         -:  123:      const bool __assignable = true;
<         -:  124:#else
<         -:  125:      // trivial types can have deleted assignment
<         -:  126:      typedef typename iterator_traits<_InputIterator>::reference _RefType1;
<         -:  127:      typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
<        55:  128:      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
<         -:  129:#endif
<         -:  130:
<         -:  131:      return std::__uninitialized_copy<__is_trivial(_ValueType1)
<         -:  132:				       && __is_trivial(_ValueType2)
<         -:  133:				       && __assignable>::
<        55:  134:	__uninit_copy(__first, __last, __result);
<         -:  135:    }
< ------------------
< _ZSt18uninitialized_copyIPKN7OpenDDS4DCPS8RcHandleINS1_13TransportInstEEEPS4_ET0_T_S9_S8_:
457,572d137
< ------------------
< _ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_:
<     #####:  115:    uninitialized_copy(_InputIterator __first, _InputIterator __last,
<         -:  116:		       _ForwardIterator __result)
<         -:  117:    {
<         -:  118:      typedef typename iterator_traits<_InputIterator>::value_type
<         -:  119:	_ValueType1;
<         -:  120:      typedef typename iterator_traits<_ForwardIterator>::value_type
<         -:  121:	_ValueType2;
<         -:  122:#if __cplusplus < 201103L
<         -:  123:      const bool __assignable = true;
<         -:  124:#else
<         -:  125:      // trivial types can have deleted assignment
<         -:  126:      typedef typename iterator_traits<_InputIterator>::reference _RefType1;
<         -:  127:      typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
<     #####:  128:      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
<         -:  129:#endif
<         -:  130:
<         -:  131:      return std::__uninitialized_copy<__is_trivial(_ValueType1)
<         -:  132:				       && __is_trivial(_ValueType2)
<         -:  133:				       && __assignable>::
<     #####:  134:	__uninit_copy(__first, __last, __result);
<         -:  135:    }
< ------------------
< _ZSt18uninitialized_copyIPKN7OpenDDS4DCPS8RcHandleINS1_13TransportInstEEEPS4_ET0_T_S9_S8_:
<       178:  115:    uninitialized_copy(_InputIterator __first, _InputIterator __last,
<         -:  116:		       _ForwardIterator __result)
<         -:  117:    {
<         -:  118:      typedef typename iterator_traits<_InputIterator>::value_type
<         -:  119:	_ValueType1;
<         -:  120:      typedef typename iterator_traits<_ForwardIterator>::value_type
<         -:  121:	_ValueType2;
<         -:  122:#if __cplusplus < 201103L
<         -:  123:      const bool __assignable = true;
<         -:  124:#else
<         -:  125:      // trivial types can have deleted assignment
<         -:  126:      typedef typename iterator_traits<_InputIterator>::reference _RefType1;
<         -:  127:      typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
<       178:  128:      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
<         -:  129:#endif
<         -:  130:
<         -:  131:      return std::__uninitialized_copy<__is_trivial(_ValueType1)
<         -:  132:				       && __is_trivial(_ValueType2)
<         -:  133:				       && __assignable>::
<       178:  134:	__uninit_copy(__first, __last, __result);
<         -:  135:    }
< ------------------
< _ZSt18uninitialized_copyIPKSt4pairIN7OpenDDS4DCPS8RcHandleINS2_15TransportConfigEEESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISC_EEEPSF_ET0_T_SK_SJ_:
<     #####:  115:    uninitialized_copy(_InputIterator __first, _InputIterator __last,
<         -:  116:		       _ForwardIterator __result)
<         -:  117:    {
<         -:  118:      typedef typename iterator_traits<_InputIterator>::value_type
<         -:  119:	_ValueType1;
<         -:  120:      typedef typename iterator_traits<_ForwardIterator>::value_type
<         -:  121:	_ValueType2;
<         -:  122:#if __cplusplus < 201103L
<         -:  123:      const bool __assignable = true;
<         -:  124:#else
<         -:  125:      // trivial types can have deleted assignment
<         -:  126:      typedef typename iterator_traits<_InputIterator>::reference _RefType1;
<         -:  127:      typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
<     #####:  128:      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
<         -:  129:#endif
<         -:  130:
<         -:  131:      return std::__uninitialized_copy<__is_trivial(_ValueType1)
<         -:  132:				       && __is_trivial(_ValueType2)
<         -:  133:				       && __assignable>::
<     #####:  134:	__uninit_copy(__first, __last, __result);
<         -:  135:    }
< ------------------
< _ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_:
<     #####:  115:    uninitialized_copy(_InputIterator __first, _InputIterator __last,
<         -:  116:		       _ForwardIterator __result)
<         -:  117:    {
<         -:  118:      typedef typename iterator_traits<_InputIterator>::value_type
<         -:  119:	_ValueType1;
<         -:  120:      typedef typename iterator_traits<_ForwardIterator>::value_type
<         -:  121:	_ValueType2;
<         -:  122:#if __cplusplus < 201103L
<         -:  123:      const bool __assignable = true;
<         -:  124:#else
<         -:  125:      // trivial types can have deleted assignment
<         -:  126:      typedef typename iterator_traits<_InputIterator>::reference _RefType1;
<         -:  127:      typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
<     #####:  128:      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
<         -:  129:#endif
<         -:  130:
<         -:  131:      return std::__uninitialized_copy<__is_trivial(_ValueType1)
<         -:  132:				       && __is_trivial(_ValueType2)
<         -:  133:				       && __assignable>::
<     #####:  134:	__uninit_copy(__first, __last, __result);
<         -:  135:    }
< ------------------
< _ZSt18uninitialized_copyISt13move_iteratorIPSt4pairIPN7OpenDDS4DCPS21TransportQueueElementENS3_21TransportSendStrategy8SendModeEEES9_ET0_T_SC_SB_:
<        14:  115:    uninitialized_copy(_InputIterator __first, _InputIterator __last,
<         -:  116:		       _ForwardIterator __result)
<         -:  117:    {
<         -:  118:      typedef typename iterator_traits<_InputIterator>::value_type
<         -:  119:	_ValueType1;
<         -:  120:      typedef typename iterator_traits<_ForwardIterator>::value_type
<         -:  121:	_ValueType2;
<         -:  122:#if __cplusplus < 201103L
<         -:  123:      const bool __assignable = true;
<         -:  124:#else
<         -:  125:      // trivial types can have deleted assignment
<         -:  126:      typedef typename iterator_traits<_InputIterator>::reference _RefType1;
<         -:  127:      typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
<        14:  128:      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
<         -:  129:#endif
<         -:  130:
<         -:  131:      return std::__uninitialized_copy<__is_trivial(_ValueType1)
<         -:  132:				       && __is_trivial(_ValueType2)
<         -:  133:				       && __assignable>::
<        14:  134:	__uninit_copy(__first, __last, __result);
<         -:  135:    }
< ------------------
646c211
<         -:  209:	      for (; __n > 0; --__n, (void) ++__cur)
---
>         -:  209:	      for (; __n > 0; --__n, ++__cur)
724,753d288
<      347*:  287:    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
<         -:  288:			   _ForwardIterator __result, allocator<_Tp>&)
<      347*:  289:    { return std::uninitialized_copy(__first, __last, __result); }
< ------------------
< _ZSt22__uninitialized_copy_aIPKSt4pairIN7OpenDDS4DCPS12WeakRcHandleINS2_15TransportClientEEENS2_6GUID_tEEPS7_S7_ET0_T_SC_SB_RSaIT1_E:
<         4:  287:    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
<         -:  288:			   _ForwardIterator __result, allocator<_Tp>&)
<         4:  289:    { return std::uninitialized_copy(__first, __last, __result); }
< ------------------
< _ZSt22__uninitialized_copy_aIPK13ACE_INET_AddrPS0_S0_ET0_T_S5_S4_RSaIT1_E:
<     #####:  287:    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
<         -:  288:			   _ForwardIterator __result, allocator<_Tp>&)
<     #####:  289:    { return std::uninitialized_copy(__first, __last, __result); }
< ------------------
< _ZSt22__uninitialized_copy_aISt13move_iteratorIPN7OpenDDS4DCPS12HostnameInfoEES4_S3_ET0_T_S7_S6_RSaIT1_E:
<        12:  287:    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
<         -:  288:			   _ForwardIterator __result, allocator<_Tp>&)
<        12:  289:    { return std::uninitialized_copy(__first, __last, __result); }
< ------------------
< _ZSt22__uninitialized_copy_aIPKN7OpenDDS4DCPS12WeakRcHandleINS1_24TransportReceiveListenerEEEPS4_S4_ET0_T_S9_S8_RSaIT1_E:
<        84:  287:    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
<         -:  288:			   _ForwardIterator __result, allocator<_Tp>&)
<        84:  289:    { return std::uninitialized_copy(__first, __last, __result); }
< ------------------
< _ZSt22__uninitialized_copy_aISt13move_iteratorIPPN7OpenDDS4DCPS13TransportImplEES5_S4_ET0_T_S8_S7_RSaIT1_E:
<        55:  287:    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
<         -:  288:			   _ForwardIterator __result, allocator<_Tp>&)
<        55:  289:    { return std::uninitialized_copy(__first, __last, __result); }
< ------------------
< _ZSt22__uninitialized_copy_aIPKN7OpenDDS4DCPS8RcHandleINS1_13TransportInstEEEPS4_S4_ET0_T_S9_S8_RSaIT1_E:
757,782d291
< ------------------
< _ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_S7_ET0_T_SG_SF_RSaIT1_E:
<     #####:  287:    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
<         -:  288:			   _ForwardIterator __result, allocator<_Tp>&)
<     #####:  289:    { return std::uninitialized_copy(__first, __last, __result); }
< ------------------
< _ZSt22__uninitialized_copy_aIPKN7OpenDDS4DCPS8RcHandleINS1_13TransportInstEEEPS4_S4_ET0_T_S9_S8_RSaIT1_E:
<       178:  287:    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
<         -:  288:			   _ForwardIterator __result, allocator<_Tp>&)
<       178:  289:    { return std::uninitialized_copy(__first, __last, __result); }
< ------------------
< _ZSt22__uninitialized_copy_aIPKSt4pairIN7OpenDDS4DCPS8RcHandleINS2_15TransportConfigEEESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISC_EEEPSF_SF_ET0_T_SK_SJ_RSaIT1_E:
<     #####:  287:    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
<         -:  288:			   _ForwardIterator __result, allocator<_Tp>&)
<     #####:  289:    { return std::uninitialized_copy(__first, __last, __result); }
< ------------------
< _ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E:
<     #####:  287:    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
<         -:  288:			   _ForwardIterator __result, allocator<_Tp>&)
<     #####:  289:    { return std::uninitialized_copy(__first, __last, __result); }
< ------------------
< _ZSt22__uninitialized_copy_aISt13move_iteratorIPSt4pairIPN7OpenDDS4DCPS21TransportQueueElementENS3_21TransportSendStrategy8SendModeEEES9_S8_ET0_T_SC_SB_RSaIT1_E:
<        14:  287:    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
<         -:  288:			   _ForwardIterator __result, allocator<_Tp>&)
<        14:  289:    { return std::uninitialized_copy(__first, __last, __result); }
< ------------------
798c307
<      332*:  305:    __uninitialized_move_if_noexcept_a(_InputIterator __first,
---
>     #####:  305:    __uninitialized_move_if_noexcept_a(_InputIterator __first,
804,805c313,314
<      332*:  311:	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
<      332*:  312:	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
---
>     #####:  311:	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
>     #####:  312:	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
843c352
<         -:  350:	  for (; __n > 0; --__n, (void) ++__cur)
---
>         -:  350:	  for (; __n > 0; --__n, ++__cur)
1019c528
<         -:  526:	      for (; __n > 0; --__n, (void) ++__cur)
---
>         -:  526:	      for (; __n > 0; --__n, ++__cur)
1123c632
<         -:  630:	  for (; __n > 0; --__n, (void) ++__cur)
---
>         -:  630:	  for (; __n > 0; --__n, ++__cur)
1183c692
<         -:  690:	      for (; __n > 0; --__n, (void) ++__cur)
---
>         -:  690:	      for (; __n > 0; --__n, ++__cur)
1243c752
<         -:  750:	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
---
>         -:  750:	  for (; __n > 0; --__n, ++__first, ++__cur)
1271c780
<         -:  778:	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
---
>         -:  778:	  for (; __n > 0; --__n, ++__first, ++__cur)
