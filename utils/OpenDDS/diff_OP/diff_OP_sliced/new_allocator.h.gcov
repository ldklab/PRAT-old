81c81
<     1188*:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>      512*:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
84c84
<       119:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>        89:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
87c87
<       208:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>       156:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
90c90
<         5:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
111c111
<       119:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>        89:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
117c117
<       119:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>        89:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
123c123
<       119:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>        89:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
129c129
<        72:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
132c132
<        42:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
147c147
<        99:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
156c156
<         6:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
162c162
<        12:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
165c165
<         6:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
168c168
<         6:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
177c177
<       109:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
183c183
<         3:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
189c189
<        42:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
192c192
<        24:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
207c207
<        32:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
210c210
<        18:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
213c213
<        14:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
216c216
<        14:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
246c246
<     1188*:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>      512*:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
249c249
<       119:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>        89:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
252c252
<       208:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>       156:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
258c258
<         5:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
279c279
<       119:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>        89:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
285c285
<       119:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>        89:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
291c291
<       119:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>        89:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
297c297
<        72:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
300c300
<        42:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
318c318
<        99:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
324c324
<        42:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
327c327
<         6:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
333c333
<        12:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
336c336
<         6:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
348c348
<       109:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
354c354
<         3:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
363c363
<        24:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
366c366
<         6:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
381c381
<        32:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
384c384
<        18:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
387c387
<        14:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
390c390
<        14:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
---
>     #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
407c407
<      948*:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>      424*:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
409c409
<      948*:  101:	if (__n > this->max_size())
---
>      424*:  101:	if (__n > this->max_size())
419c419
<      948*:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>      424*:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
423c423
<        89:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>        67:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
425c425
<        89:  101:	if (__n > this->max_size())
---
>        67:  101:	if (__n > this->max_size())
435c435
<        89:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>        67:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
439c439
<        32:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>     #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
441c441
<        32:  101:	if (__n > this->max_size())
---
>     #####:  101:	if (__n > this->max_size())
451c451
<        32:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>     #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
471c471
<         2:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>     #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
473c473
<         2:  101:	if (__n > this->max_size())
---
>     #####:  101:	if (__n > this->max_size())
483c483
<         2:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>     #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
535c535
<        89:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>        67:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
537c537
<        89:  101:	if (__n > this->max_size())
---
>        67:  101:	if (__n > this->max_size())
547c547
<        89:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>        67:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
551c551
<       178:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>       134:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
553c553
<       178:  101:	if (__n > this->max_size())
---
>       134:  101:	if (__n > this->max_size())
563c563
<       178:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>       134:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
599c599
<       208:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>       156:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
601c601
<       208:  101:	if (__n > this->max_size())
---
>       156:  101:	if (__n > this->max_size())
611c611
<       208:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>       156:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
679c679
<        36:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>     #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
681c681
<        36:  101:	if (__n > this->max_size())
---
>     #####:  101:	if (__n > this->max_size())
691c691
<        36:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>     #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
727c727
<        37:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>     #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
729c729
<        37:  101:	if (__n > this->max_size())
---
>     #####:  101:	if (__n > this->max_size())
739c739
<        37:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>     #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
775c775
<        10:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>     #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
777c777
<        10:  101:	if (__n > this->max_size())
---
>     #####:  101:	if (__n > this->max_size())
787c787
<        10:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>     #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
791c791
<         6:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>     #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
793c793
<         6:  101:	if (__n > this->max_size())
---
>     #####:  101:	if (__n > this->max_size())
803c803
<         6:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>     #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
839c839
<        18:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>     #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
841c841
<        18:  101:	if (__n > this->max_size())
---
>     #####:  101:	if (__n > this->max_size())
851c851
<        18:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>     #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
855c855
<         9:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>     #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
857c857
<         9:  101:	if (__n > this->max_size())
---
>     #####:  101:	if (__n > this->max_size())
867c867
<         9:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>     #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
871c871
<        18:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>     #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
873c873
<        18:  101:	if (__n > this->max_size())
---
>     #####:  101:	if (__n > this->max_size())
883c883
<        18:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>     #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
887c887
<         2:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>     #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
889c889
<         2:  101:	if (__n > this->max_size())
---
>     #####:  101:	if (__n > this->max_size())
899c899
<         2:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>     #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
935c935
<        91:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>     #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
937c937
<        91:  101:	if (__n > this->max_size())
---
>     #####:  101:	if (__n > this->max_size())
947c947
<        91:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>     #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
983c983
<        42:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>     #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
985c985
<        42:  101:	if (__n > this->max_size())
---
>     #####:  101:	if (__n > this->max_size())
995c995
<        42:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>     #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
999c999
<        18:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>     #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
1001c1001
<        18:  101:	if (__n > this->max_size())
---
>     #####:  101:	if (__n > this->max_size())
1011c1011
<        18:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>     #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
1015c1015
<        27:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>     #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
1017c1017
<        27:  101:	if (__n > this->max_size())
---
>     #####:  101:	if (__n > this->max_size())
1027c1027
<        27:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>     #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
1111c1111
<        18:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>     #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
1113c1113
<        18:  101:	if (__n > this->max_size())
---
>     #####:  101:	if (__n > this->max_size())
1123c1123
<        18:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>     #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
1127c1127
<        18:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
---
>     #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
1129c1129
<        18:  101:	if (__n > this->max_size())
---
>     #####:  101:	if (__n > this->max_size())
1139c1139
<        18:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
---
>     #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
1145c1145
<     1035*:  116:      deallocate(pointer __p, size_type)
---
>      491*:  116:      deallocate(pointer __p, size_type)
1154,1155c1154,1155
<     1035*:  125:	::operator delete(__p);
<     1035*:  126:      }
---
>      491*:  125:	::operator delete(__p);
>      491*:  126:      }
1171c1171
<        32:  116:      deallocate(pointer __p, size_type)
---
>     #####:  116:      deallocate(pointer __p, size_type)
1180,1181c1180,1181
<        32:  125:	::operator delete(__p);
<        32:  126:      }
---
>     #####:  125:	::operator delete(__p);
>     #####:  126:      }
1275c1275
<       178:  116:      deallocate(pointer __p, size_type)
---
>       134:  116:      deallocate(pointer __p, size_type)
1284,1285c1284,1285
<       178:  125:	::operator delete(__p);
<       178:  126:      }
---
>       134:  125:	::operator delete(__p);
>       134:  126:      }
1288c1288
<       208:  116:      deallocate(pointer __p, size_type)
---
>       156:  116:      deallocate(pointer __p, size_type)
1297,1298c1297,1298
<       208:  125:	::operator delete(__p);
<       208:  126:      }
---
>       156:  125:	::operator delete(__p);
>       156:  126:      }
1301c1301
<        89:  116:      deallocate(pointer __p, size_type)
---
>        67:  116:      deallocate(pointer __p, size_type)
1310,1311c1310,1311
<        89:  125:	::operator delete(__p);
<        89:  126:      }
---
>        67:  125:	::operator delete(__p);
>        67:  126:      }
1314c1314
<       178:  116:      deallocate(pointer __p, size_type)
---
>       134:  116:      deallocate(pointer __p, size_type)
1323,1324c1323,1324
<       178:  125:	::operator delete(__p);
<       178:  126:      }
---
>       134:  125:	::operator delete(__p);
>       134:  126:      }
1379c1379
<        37:  116:      deallocate(pointer __p, size_type)
---
>     #####:  116:      deallocate(pointer __p, size_type)
1388,1389c1388,1389
<        37:  125:	::operator delete(__p);
<        37:  126:      }
---
>     #####:  125:	::operator delete(__p);
>     #####:  126:      }
1444c1444
<        36:  116:      deallocate(pointer __p, size_type)
---
>     #####:  116:      deallocate(pointer __p, size_type)
1453,1454c1453,1454
<        36:  125:	::operator delete(__p);
<        36:  126:      }
---
>     #####:  125:	::operator delete(__p);
>     #####:  126:      }
1483c1483
<        10:  116:      deallocate(pointer __p, size_type)
---
>     #####:  116:      deallocate(pointer __p, size_type)
1492,1493c1492,1493
<        10:  125:	::operator delete(__p);
<        10:  126:      }
---
>     #####:  125:	::operator delete(__p);
>     #####:  126:      }
1496c1496
<        42:  116:      deallocate(pointer __p, size_type)
---
>     #####:  116:      deallocate(pointer __p, size_type)
1505,1506c1505,1506
<        42:  125:	::operator delete(__p);
<        42:  126:      }
---
>     #####:  125:	::operator delete(__p);
>     #####:  126:      }
1548c1548
<        18:  116:      deallocate(pointer __p, size_type)
---
>     #####:  116:      deallocate(pointer __p, size_type)
1557,1558c1557,1558
<        18:  125:	::operator delete(__p);
<        18:  126:      }
---
>     #####:  125:	::operator delete(__p);
>     #####:  126:      }
1600c1600
<         2:  116:      deallocate(pointer __p, size_type)
---
>     #####:  116:      deallocate(pointer __p, size_type)
1609,1610c1609,1610
<         2:  125:	::operator delete(__p);
<         2:  126:      }
---
>     #####:  125:	::operator delete(__p);
>     #####:  126:      }
1613c1613
<        91:  116:      deallocate(pointer __p, size_type)
---
>     #####:  116:      deallocate(pointer __p, size_type)
1622,1623c1622,1623
<        91:  125:	::operator delete(__p);
<        91:  126:      }
---
>     #####:  125:	::operator delete(__p);
>     #####:  126:      }
1639c1639
<         6:  116:      deallocate(pointer __p, size_type)
---
>     #####:  116:      deallocate(pointer __p, size_type)
1648,1649c1648,1649
<         6:  125:	::operator delete(__p);
<         6:  126:      }
---
>     #####:  125:	::operator delete(__p);
>     #####:  126:      }
1678c1678
<        18:  116:      deallocate(pointer __p, size_type)
---
>     #####:  116:      deallocate(pointer __p, size_type)
1687,1688c1687,1688
<        18:  125:	::operator delete(__p);
<        18:  126:      }
---
>     #####:  125:	::operator delete(__p);
>     #####:  126:      }
1691c1691
<        27:  116:      deallocate(pointer __p, size_type)
---
>     #####:  116:      deallocate(pointer __p, size_type)
1700,1701c1700,1701
<        27:  125:	::operator delete(__p);
<        27:  126:      }
---
>     #####:  125:	::operator delete(__p);
>     #####:  126:      }
1756c1756
<         9:  116:      deallocate(pointer __p, size_type)
---
>     #####:  116:      deallocate(pointer __p, size_type)
1765,1766c1765,1766
<         9:  125:	::operator delete(__p);
<         9:  126:      }
---
>     #####:  125:	::operator delete(__p);
>     #####:  126:      }
1782c1782
<        18:  116:      deallocate(pointer __p, size_type)
---
>     #####:  116:      deallocate(pointer __p, size_type)
1791,1792c1791,1792
<        18:  125:	::operator delete(__p);
<        18:  126:      }
---
>     #####:  125:	::operator delete(__p);
>     #####:  126:      }
1795c1795
<        18:  116:      deallocate(pointer __p, size_type)
---
>     #####:  116:      deallocate(pointer __p, size_type)
1804,1805c1804,1805
<        18:  125:	::operator delete(__p);
<        18:  126:      }
---
>     #####:  125:	::operator delete(__p);
>     #####:  126:      }
1808c1808
<        18:  116:      deallocate(pointer __p, size_type)
---
>     #####:  116:      deallocate(pointer __p, size_type)
1817,1818c1817,1818
<        18:  125:	::operator delete(__p);
<        18:  126:      }
---
>     #####:  125:	::operator delete(__p);
>     #####:  126:      }
1835,1836c1835,1836
<     1297*:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<     1297*:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>      558*:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>      558*:  130:      { return size_t(-1) / sizeof(_Tp); }
1839,1840c1839,1840
<       267:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<       267:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>       201:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>       201:  130:      { return size_t(-1) / sizeof(_Tp); }
1843,1844c1843,1844
<        87:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<        87:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>     #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>     #####:  130:      { return size_t(-1) / sizeof(_Tp); }
1851,1852c1851,1852
<         2:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<         2:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>     #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>     #####:  130:      { return size_t(-1) / sizeof(_Tp); }
1867,1868c1867,1868
<        89:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<        89:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>        67:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>        67:  130:      { return size_t(-1) / sizeof(_Tp); }
1871,1872c1871,1872
<       178:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<       178:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>       134:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>       134:  130:      { return size_t(-1) / sizeof(_Tp); }
1883,1884c1883,1884
<       208:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<       208:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>       156:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>       156:  130:      { return size_t(-1) / sizeof(_Tp); }
1903,1904c1903,1904
<        36:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<        36:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>     #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>     #####:  130:      { return size_t(-1) / sizeof(_Tp); }
1915,1916c1915,1916
<        39:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<        39:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>     #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>     #####:  130:      { return size_t(-1) / sizeof(_Tp); }
1927,1928c1927,1928
<        24:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<        24:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>     #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>     #####:  130:      { return size_t(-1) / sizeof(_Tp); }
1931,1932c1931,1932
<        18:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<        18:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>     #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>     #####:  130:      { return size_t(-1) / sizeof(_Tp); }
1943,1944c1943,1944
<        18:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<        18:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>     #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>     #####:  130:      { return size_t(-1) / sizeof(_Tp); }
1947,1948c1947,1948
<         9:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<         9:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>     #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>     #####:  130:      { return size_t(-1) / sizeof(_Tp); }
1951,1952c1951,1952
<        18:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<        18:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>     #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>     #####:  130:      { return size_t(-1) / sizeof(_Tp); }
1955,1956c1955,1956
<         6:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<         6:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>     #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>     #####:  130:      { return size_t(-1) / sizeof(_Tp); }
1967,1968c1967,1968
<        91:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<        91:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>     #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>     #####:  130:      { return size_t(-1) / sizeof(_Tp); }
1979,1980c1979,1980
<       126:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<       126:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>     #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>     #####:  130:      { return size_t(-1) / sizeof(_Tp); }
1983,1984c1983,1984
<        18:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<        18:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>     #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>     #####:  130:      { return size_t(-1) / sizeof(_Tp); }
1987,1988c1987,1988
<        27:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<        27:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>     #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>     #####:  130:      { return size_t(-1) / sizeof(_Tp); }
2011,2012c2011,2012
<        18:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<        18:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>     #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>     #####:  130:      { return size_t(-1) / sizeof(_Tp); }
2015,2016c2015,2016
<        18:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
<        18:  130:      { return size_t(-1) / sizeof(_Tp); }
---
>     #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
>     #####:  130:      { return size_t(-1) / sizeof(_Tp); }
2022,2023c2022,2023
<      961*:  135:	construct(_Up* __p, _Args&&... __args)
<      961*:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>      424*:  135:	construct(_Up* __p, _Args&&... __args)
>      424*:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2038,2039c2038,2039
<         2:  135:	construct(_Up* __p, _Args&&... __args)
<         2:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>     #####:  135:	construct(_Up* __p, _Args&&... __args)
>     #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2054,2055c2054,2055
<        89:  135:	construct(_Up* __p, _Args&&... __args)
<        89:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>        67:  135:	construct(_Up* __p, _Args&&... __args)
>        67:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2058,2059c2058,2059
<        89:  135:	construct(_Up* __p, _Args&&... __args)
<        89:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>        67:  135:	construct(_Up* __p, _Args&&... __args)
>        67:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2062,2063c2062,2063
<       178:  135:	construct(_Up* __p, _Args&&... __args)
<       178:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>       134:  135:	construct(_Up* __p, _Args&&... __args)
>       134:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2070,2071c2070,2071
<       119:  135:	construct(_Up* __p, _Args&&... __args)
<       119:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>        89:  135:	construct(_Up* __p, _Args&&... __args)
>        89:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2074,2075c2074,2075
<        32:  135:	construct(_Up* __p, _Args&&... __args)
<        32:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>     #####:  135:	construct(_Up* __p, _Args&&... __args)
>     #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2078,2079c2078,2079
<        89:  135:	construct(_Up* __p, _Args&&... __args)
<        89:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>        67:  135:	construct(_Up* __p, _Args&&... __args)
>        67:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2102,2103c2102,2103
<        47:  135:	construct(_Up* __p, _Args&&... __args)
<        47:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>     #####:  135:	construct(_Up* __p, _Args&&... __args)
>     #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2106,2107c2106,2107
<        45:  135:	construct(_Up* __p, _Args&&... __args)
<        45:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>     #####:  135:	construct(_Up* __p, _Args&&... __args)
>     #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2114,2115c2114,2115
<         4:  135:	construct(_Up* __p, _Args&&... __args)
<         4:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>     #####:  135:	construct(_Up* __p, _Args&&... __args)
>     #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2118,2119c2118,2119
<         6:  135:	construct(_Up* __p, _Args&&... __args)
<         6:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>     #####:  135:	construct(_Up* __p, _Args&&... __args)
>     #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2134,2135c2134,2135
<        18:  135:	construct(_Up* __p, _Args&&... __args)
<        18:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>     #####:  135:	construct(_Up* __p, _Args&&... __args)
>     #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2138,2139c2138,2139
<         9:  135:	construct(_Up* __p, _Args&&... __args)
<         9:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>     #####:  135:	construct(_Up* __p, _Args&&... __args)
>     #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2142,2143c2142,2143
<        18:  135:	construct(_Up* __p, _Args&&... __args)
<        18:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>     #####:  135:	construct(_Up* __p, _Args&&... __args)
>     #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2154,2155c2154,2155
<         2:  135:	construct(_Up* __p, _Args&&... __args)
<         2:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>     #####:  135:	construct(_Up* __p, _Args&&... __args)
>     #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2158,2159c2158,2159
<        83:  135:	construct(_Up* __p, _Args&&... __args)
<        83:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>     #####:  135:	construct(_Up* __p, _Args&&... __args)
>     #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2170,2171c2170,2171
<        42:  135:	construct(_Up* __p, _Args&&... __args)
<        42:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>     #####:  135:	construct(_Up* __p, _Args&&... __args)
>     #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2174,2175c2174,2175
<        18:  135:	construct(_Up* __p, _Args&&... __args)
<        18:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>     #####:  135:	construct(_Up* __p, _Args&&... __args)
>     #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2178,2179c2178,2179
<        27:  135:	construct(_Up* __p, _Args&&... __args)
<        27:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>     #####:  135:	construct(_Up* __p, _Args&&... __args)
>     #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2198,2199c2198,2199
<        18:  135:	construct(_Up* __p, _Args&&... __args)
<        18:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>     #####:  135:	construct(_Up* __p, _Args&&... __args)
>     #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2202,2203c2202,2203
<        18:  135:	construct(_Up* __p, _Args&&... __args)
<        18:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>     #####:  135:	construct(_Up* __p, _Args&&... __args)
>     #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2206,2207c2206,2207
<         8:  135:	construct(_Up* __p, _Args&&... __args)
<         8:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
---
>     #####:  135:	construct(_Up* __p, _Args&&... __args)
>     #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
2212c2212
<      745*:  140:	destroy(_Up* __p) { __p->~_Up(); }
---
>      357*:  140:	destroy(_Up* __p) { __p->~_Up(); }
2215c2215
<        89:  140:	destroy(_Up* __p) { __p->~_Up(); }
---
>        67:  140:	destroy(_Up* __p) { __p->~_Up(); }
2242c2242
<       178:  140:	destroy(_Up* __p) { __p->~_Up(); }
---
>       134:  140:	destroy(_Up* __p) { __p->~_Up(); }
2245c2245
<       208:  140:	destroy(_Up* __p) { __p->~_Up(); }
---
>       156:  140:	destroy(_Up* __p) { __p->~_Up(); }
2275c2275
<         4:  140:	destroy(_Up* __p) { __p->~_Up(); }
---
>     #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
2278c2278
<        47:  140:	destroy(_Up* __p) { __p->~_Up(); }
---
>     #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
2287c2287
<        18:  140:	destroy(_Up* __p) { __p->~_Up(); }
---
>     #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
2299c2299
<         2:  140:	destroy(_Up* __p) { __p->~_Up(); }
---
>     #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
2302c2302
<        91:  140:	destroy(_Up* __p) { __p->~_Up(); }
---
>     #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
2317c2317
<        18:  140:	destroy(_Up* __p) { __p->~_Up(); }
---
>     #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
2320c2320
<        27:  140:	destroy(_Up* __p) { __p->~_Up(); }
---
>     #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
2326c2326
<         9:  140:	destroy(_Up* __p) { __p->~_Up(); }
---
>     #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
2332c2332
<        18:  140:	destroy(_Up* __p) { __p->~_Up(); }
---
>     #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
2335c2335
<        18:  140:	destroy(_Up* __p) { __p->~_Up(); }
---
>     #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
2338c2338
<        18:  140:	destroy(_Up* __p) { __p->~_Up(); }
---
>     #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
