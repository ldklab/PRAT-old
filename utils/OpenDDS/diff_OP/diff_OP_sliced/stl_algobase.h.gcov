2c2
<         -:    0:Programs:51
---
>         -:    0:Programs:15
122c122
<         -:  120:    iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
---
>     #####:  120:    iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
150c150
<         -:  148:      swap(*__a, *__b);
---
>     #####:  148:      swap(*__a, *__b);
152c152,219
<         -:  150:    }
---
>     #####:  150:    }
> ------------------
> _ZSt9iter_swapIPPcS1_EvT_T0_:
>     #####:  120:    iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
>         -:  121:    {
>         -:  122:      // concept requirements
>         -:  123:      __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
>         -:  124:				  _ForwardIterator1>)
>         -:  125:      __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
>         -:  126:				  _ForwardIterator2>)
>         -:  127:
>         -:  128:#if __cplusplus < 201103L
>         -:  129:      typedef typename iterator_traits<_ForwardIterator1>::value_type
>         -:  130:	_ValueType1;
>         -:  131:      typedef typename iterator_traits<_ForwardIterator2>::value_type
>         -:  132:	_ValueType2;
>         -:  133:
>         -:  134:      __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
>         -:  135:				  _ValueType2>)
>         -:  136:      __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
>         -:  137:				  _ValueType1>)
>         -:  138:
>         -:  139:      typedef typename iterator_traits<_ForwardIterator1>::reference
>         -:  140:	_ReferenceType1;
>         -:  141:      typedef typename iterator_traits<_ForwardIterator2>::reference
>         -:  142:	_ReferenceType2;
>         -:  143:      std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
>         -:  144:	&& __are_same<_ValueType1&, _ReferenceType1>::__value
>         -:  145:	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
>         -:  146:	iter_swap(__a, __b);
>         -:  147:#else
>     #####:  148:      swap(*__a, *__b);
>         -:  149:#endif
>     #####:  150:    }
> ------------------
> _ZSt9iter_swapIPPwS1_EvT_T0_:
>     #####:  120:    iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
>         -:  121:    {
>         -:  122:      // concept requirements
>         -:  123:      __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
>         -:  124:				  _ForwardIterator1>)
>         -:  125:      __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
>         -:  126:				  _ForwardIterator2>)
>         -:  127:
>         -:  128:#if __cplusplus < 201103L
>         -:  129:      typedef typename iterator_traits<_ForwardIterator1>::value_type
>         -:  130:	_ValueType1;
>         -:  131:      typedef typename iterator_traits<_ForwardIterator2>::value_type
>         -:  132:	_ValueType2;
>         -:  133:
>         -:  134:      __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
>         -:  135:				  _ValueType2>)
>         -:  136:      __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
>         -:  137:				  _ValueType1>)
>         -:  138:
>         -:  139:      typedef typename iterator_traits<_ForwardIterator1>::reference
>         -:  140:	_ReferenceType1;
>         -:  141:      typedef typename iterator_traits<_ForwardIterator2>::reference
>         -:  142:	_ReferenceType2;
>         -:  143:      std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
>         -:  144:	&& __are_same<_ValueType1&, _ReferenceType1>::__value
>         -:  145:	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
>         -:  146:	iter_swap(__a, __b);
>         -:  147:#else
>     #####:  148:      swap(*__a, *__b);
>         -:  149:#endif
>     #####:  150:    }
> ------------------
168c235,251
<         -:  166:    swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
---
>     #####:  166:    swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
>         -:  167:		_ForwardIterator2 __first2)
>         -:  168:    {
>         -:  169:      // concept requirements
>         -:  170:      __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
>         -:  171:				  _ForwardIterator1>)
>         -:  172:      __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
>         -:  173:				  _ForwardIterator2>)
>         -:  174:      __glibcxx_requires_valid_range(__first1, __last1);
>         -:  175:
>     #####:  176:      for (; __first1 != __last1; ++__first1, (void)++__first2)
>     #####:  177:	std::iter_swap(__first1, __first2);
>     #####:  178:      return __first2;
>         -:  179:    }
> ------------------
> _ZSt11swap_rangesIPPcS1_ET0_T_S3_S2_:
>     #####:  166:    swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
178,180c261,263
<         -:  176:      for (; __first1 != __last1; ++__first1, (void)++__first2)
<         -:  177:	std::iter_swap(__first1, __first2);
<         -:  178:      return __first2;
---
>     #####:  176:      for (; __first1 != __last1; ++__first1, (void)++__first2)
>     #####:  177:	std::iter_swap(__first1, __first2);
>     #####:  178:      return __first2;
181a265,281
> ------------------
> _ZSt11swap_rangesIPPwS1_ET0_T_S3_S2_:
>     #####:  166:    swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
>         -:  167:		_ForwardIterator2 __first2)
>         -:  168:    {
>         -:  169:      // concept requirements
>         -:  170:      __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
>         -:  171:				  _ForwardIterator1>)
>         -:  172:      __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
>         -:  173:				  _ForwardIterator2>)
>         -:  174:      __glibcxx_requires_valid_range(__first1, __last1);
>         -:  175:
>     #####:  176:      for (; __first1 != __last1; ++__first1, (void)++__first2)
>     #####:  177:	std::iter_swap(__first1, __first2);
>     #####:  178:      return __first2;
>         -:  179:    }
> ------------------
197,208c297
<        3*:  195:    min(const _Tp& __a, const _Tp& __b)
<         -:  196:    {
<         -:  197:      // concept requirements
<         -:  198:      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
<         -:  199:      //return __b < __a ? __b : __a;
<        3*:  200:      if (__b < __a)
<        3*:  201:	return __b;
<     #####:  202:      return __a;
<         -:  203:    }
< ------------------
< _ZSt3minIiERKT_S2_S2_:
<         3:  195:    min(const _Tp& __a, const _Tp& __b)
---
>         -:  195:    min(const _Tp& __a, const _Tp& __b)
213,215c302,304
<         3:  200:      if (__b < __a)
<         3:  201:	return __b;
<     #####:  202:      return __a;
---
>         -:  200:      if (__b < __a)
>         -:  201:	return __b;
>         -:  202:      return __a;
217,228d305
< ------------------
< _ZSt3minImERKT_S2_S2_:
<     #####:  195:    min(const _Tp& __a, const _Tp& __b)
<         -:  196:    {
<         -:  197:      // concept requirements
<         -:  198:      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
<         -:  199:      //return __b < __a ? __b : __a;
<     #####:  200:      if (__b < __a)
<     #####:  201:	return __b;
<     #####:  202:      return __a;
<         -:  203:    }
< ------------------
244,343c321
<        3*:  219:    max(const _Tp& __a, const _Tp& __b)
<         -:  220:    {
<         -:  221:      // concept requirements
<         -:  222:      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
<         -:  223:      //return  __a < __b ? __b : __a;
<        3*:  224:      if (__a < __b)
<     #####:  225:	return __b;
<        3*:  226:      return __a;
<         -:  227:    }
< ------------------
< _ZSt3maxImERKT_S2_S2_:
<     #####:  219:    max(const _Tp& __a, const _Tp& __b)
<         -:  220:    {
<         -:  221:      // concept requirements
<         -:  222:      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
<         -:  223:      //return  __a < __b ? __b : __a;
<     #####:  224:      if (__a < __b)
<     #####:  225:	return __b;
<     #####:  226:      return __a;
<         -:  227:    }
< ------------------
< _ZSt3maxImERKT_S2_S2_:
<     #####:  219:    max(const _Tp& __a, const _Tp& __b)
<         -:  220:    {
<         -:  221:      // concept requirements
<         -:  222:      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
<         -:  223:      //return  __a < __b ? __b : __a;
<     #####:  224:      if (__a < __b)
<     #####:  225:	return __b;
<     #####:  226:      return __a;
<         -:  227:    }
< ------------------
< _ZSt3maxIiERKT_S2_S2_:
<         3:  219:    max(const _Tp& __a, const _Tp& __b)
<         -:  220:    {
<         -:  221:      // concept requirements
<         -:  222:      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
<         -:  223:      //return  __a < __b ? __b : __a;
<         3:  224:      if (__a < __b)
<     #####:  225:	return __b;
<         3:  226:      return __a;
<         -:  227:    }
< ------------------
< _ZSt3maxImERKT_S2_S2_:
<     #####:  219:    max(const _Tp& __a, const _Tp& __b)
<         -:  220:    {
<         -:  221:      // concept requirements
<         -:  222:      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
<         -:  223:      //return  __a < __b ? __b : __a;
<     #####:  224:      if (__a < __b)
<     #####:  225:	return __b;
<     #####:  226:      return __a;
<         -:  227:    }
< ------------------
< _ZSt3maxImERKT_S2_S2_:
<     #####:  219:    max(const _Tp& __a, const _Tp& __b)
<         -:  220:    {
<         -:  221:      // concept requirements
<         -:  222:      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
<         -:  223:      //return  __a < __b ? __b : __a;
<     #####:  224:      if (__a < __b)
<     #####:  225:	return __b;
<     #####:  226:      return __a;
<         -:  227:    }
< ------------------
< _ZSt3maxImERKT_S2_S2_:
<     #####:  219:    max(const _Tp& __a, const _Tp& __b)
<         -:  220:    {
<         -:  221:      // concept requirements
<         -:  222:      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
<         -:  223:      //return  __a < __b ? __b : __a;
<     #####:  224:      if (__a < __b)
<     #####:  225:	return __b;
<     #####:  226:      return __a;
<         -:  227:    }
< ------------------
< _ZSt3maxImERKT_S2_S2_:
<     #####:  219:    max(const _Tp& __a, const _Tp& __b)
<         -:  220:    {
<         -:  221:      // concept requirements
<         -:  222:      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
<         -:  223:      //return  __a < __b ? __b : __a;
<     #####:  224:      if (__a < __b)
<     #####:  225:	return __b;
<     #####:  226:      return __a;
<         -:  227:    }
< ------------------
< _ZSt3maxImERKT_S2_S2_:
<     #####:  219:    max(const _Tp& __a, const _Tp& __b)
<         -:  220:    {
<         -:  221:      // concept requirements
<         -:  222:      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
<         -:  223:      //return  __a < __b ? __b : __a;
<     #####:  224:      if (__a < __b)
<     #####:  225:	return __b;
<     #####:  226:      return __a;
<         -:  227:    }
< ------------------
< _ZSt3maxImERKT_S2_S2_:
<     #####:  219:    max(const _Tp& __a, const _Tp& __b)
---
>         -:  219:    max(const _Tp& __a, const _Tp& __b)
348,350c326,328
<     #####:  224:      if (__a < __b)
<     #####:  225:	return __b;
<     #####:  226:      return __a;
---
>         -:  224:      if (__a < __b)
>         -:  225:	return __b;
>         -:  226:      return __a;
352,374d329
< ------------------
< _ZSt3maxImERKT_S2_S2_:
<     #####:  219:    max(const _Tp& __a, const _Tp& __b)
<         -:  220:    {
<         -:  221:      // concept requirements
<         -:  222:      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
<         -:  223:      //return  __a < __b ? __b : __a;
<     #####:  224:      if (__a < __b)
<     #####:  225:	return __b;
<     #####:  226:      return __a;
<         -:  227:    }
< ------------------
< _ZSt3maxImERKT_S2_S2_:
<     #####:  219:    max(const _Tp& __a, const _Tp& __b)
<         -:  220:    {
<         -:  221:      // concept requirements
<         -:  222:      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
<         -:  223:      //return  __a < __b ? __b : __a;
<     #####:  224:      if (__a < __b)
<     #####:  225:	return __b;
<     #####:  226:      return __a;
<         -:  227:    }
< ------------------
424,435d378
<      321*:  277:    __niter_base(_Iterator __it)
<      321*:  278:    { return __it; }
< ------------------
< _ZSt12__niter_baseIPN7OpenDDS4DCPS6GUID_tEET_S4_:
<     #####:  277:    __niter_base(_Iterator __it)
<     #####:  278:    { return __it; }
< ------------------
< _ZSt12__niter_baseIPKhET_S2_:
<       156:  277:    __niter_base(_Iterator __it)
<       156:  278:    { return __it; }
< ------------------
< _ZSt12__niter_baseIPhET_S1_:
439c382
< _ZSt12__niter_baseISt15_Deque_iteratorIPN7OpenDDS4DCPS21TransportQueueElementERS4_PS4_EET_S8_:
---
> _ZSt12__niter_baseIPbET_S1_:
443c386
< _ZSt12__niter_baseISt20back_insert_iteratorISt5dequeIPN7OpenDDS4DCPS21TransportQueueElementESaIS5_EEEET_S9_:
---
> _ZSt12__niter_baseIPcET_S1_:
447c390
< _ZSt12__niter_baseIPPPN7OpenDDS4DCPS21TransportQueueElementEET_S6_:
---
> _ZSt12__niter_baseIPdET_S1_:
451c394
< _ZSt12__niter_baseISt15_Deque_iteratorIPN7OpenDDS4DCPS21TransportQueueElementERS4_PS4_EET_S8_:
---
> _ZSt12__niter_baseIPfET_S1_:
455c398
< _ZSt12__niter_baseISt20back_insert_iteratorISt5dequeIPN7OpenDDS4DCPS21TransportQueueElementESaIS5_EEEET_S9_:
---
> _ZSt12__niter_baseIPeET_S1_:
459c402
< _ZSt12__niter_baseIPPPN7OpenDDS4DCPS21TransportQueueElementEET_S6_:
---
> _ZSt12__niter_baseIPlET_S1_:
463c406
< _ZSt12__niter_baseIPPPN7OpenDDS4DCPS21TransportQueueElementEET_S6_:
---
> _ZSt12__niter_baseIPiET_S1_:
467,471c410
< _ZSt12__niter_baseIPN7OpenDDS4DCPS8RcHandleINS1_13TransportInstEEEET_S6_:
<     #####:  277:    __niter_base(_Iterator __it)
<     #####:  278:    { return __it; }
< ------------------
< _ZSt12__niter_baseIPN7OpenDDS4DCPS16TransportLocatorEET_S4_:
---
> _ZSt12__niter_baseIPhET_S1_:
475c414
< _ZSt12__niter_baseIPN7OpenDDS4DCPS16TransportLocatorEET_S4_:
---
> _ZSt12__niter_baseIPsET_S1_:
479,483c418
< _ZSt12__niter_baseIPPN7OpenDDS4DCPS13TransportImplEET_S5_:
<       165:  277:    __niter_base(_Iterator __it)
<       165:  278:    { return __it; }
< ------------------
< _ZSt12__niter_baseIPPSt10unique_ptrIN7OpenDDS4DCPS18ReactorInterceptor7CommandESt14default_deleteIS4_EEET_SA_:
---
> _ZSt12__niter_baseIPmET_S1_:
487c422
< _ZSt12__niter_baseIPPPN7OpenDDS4DCPS11SendRequestEET_S6_:
---
> _ZSt12__niter_baseIPjET_S1_:
491c426
< _ZSt12__niter_baseIPN7OpenDDS4DCPS6GUID_tEET_S4_:
---
> _ZSt12__niter_baseIPtET_S1_:
495c430
< _ZSt12__niter_baseIPN7OpenDDS4DCPS6GUID_tEET_S4_:
---
> _ZSt12__niter_baseIPwET_S1_:
539,578c474
<     #####:  319:	__copy_m(_II __first, _II __last, _OI __result)
<         -:  320:	{
<         -:  321:	  typedef typename iterator_traits<_II>::difference_type _Distance;
<     #####:  322:	  for(_Distance __n = __last - __first; __n > 0; --__n)
<         -:  323:	    {
<     #####:  324:	      *__result = *__first;
<     #####:  325:	      ++__first;
<     #####:  326:	      ++__result;
<         -:  327:	    }
<     #####:  328:	  return __result;
<         -:  329:	}
< ------------------
< _ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN7OpenDDS4DCPS16TransportLocatorES6_EET0_T_S8_S7_:
<     #####:  319:	__copy_m(_II __first, _II __last, _OI __result)
<         -:  320:	{
<         -:  321:	  typedef typename iterator_traits<_II>::difference_type _Distance;
<     #####:  322:	  for(_Distance __n = __last - __first; __n > 0; --__n)
<         -:  323:	    {
<     #####:  324:	      *__result = *__first;
<     #####:  325:	      ++__first;
<     #####:  326:	      ++__result;
<         -:  327:	    }
<     #####:  328:	  return __result;
<         -:  329:	}
< ------------------
< _ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN7OpenDDS4DCPS16TransportLocatorES6_EET0_T_S8_S7_:
<     #####:  319:	__copy_m(_II __first, _II __last, _OI __result)
<         -:  320:	{
<         -:  321:	  typedef typename iterator_traits<_II>::difference_type _Distance;
<     #####:  322:	  for(_Distance __n = __last - __first; __n > 0; --__n)
<         -:  323:	    {
<     #####:  324:	      *__result = *__first;
<     #####:  325:	      ++__first;
<     #####:  326:	      ++__result;
<         -:  327:	    }
<     #####:  328:	  return __result;
<         -:  329:	}
< ------------------
< _ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt15_Deque_iteratorIPN7OpenDDS4DCPS21TransportQueueElementERS7_PS7_ESt20back_insert_iteratorISt5dequeIS7_SaIS7_EEEEET0_T_SH_SG_:
<     #####:  319:	__copy_m(_II __first, _II __last, _OI __result)
---
>         -:  319:	__copy_m(_II __first, _II __last, _OI __result)
581c477
<     #####:  322:	  for(_Distance __n = __last - __first; __n > 0; --__n)
---
>         -:  322:	  for(_Distance __n = __last - __first; __n > 0; --__n)
583,585c479,481
<     #####:  324:	      *__result = *__first;
<     #####:  325:	      ++__first;
<     #####:  326:	      ++__result;
---
>         -:  324:	      *__result = *__first;
>         -:  325:	      ++__first;
>         -:  326:	      ++__result;
587c483
<     #####:  328:	  return __result;
---
>         -:  328:	  return __result;
589,602d484
< ------------------
< _ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt15_Deque_iteratorIPN7OpenDDS4DCPS21TransportQueueElementERS7_PS7_ESt20back_insert_iteratorISt5dequeIS7_SaIS7_EEEEET0_T_SH_SG_:
<     #####:  319:	__copy_m(_II __first, _II __last, _OI __result)
<         -:  320:	{
<         -:  321:	  typedef typename iterator_traits<_II>::difference_type _Distance;
<     #####:  322:	  for(_Distance __n = __last - __first; __n > 0; --__n)
<         -:  323:	    {
<     #####:  324:	      *__result = *__first;
<     #####:  325:	      ++__first;
<     #####:  326:	      ++__result;
<         -:  327:	    }
<     #####:  328:	  return __result;
<         -:  329:	}
< ------------------
611,637c493
<        2*:  338:	__copy_m(_II __first, _II __last, _OI __result)
<         -:  339:	{
<         -:  340:	  typedef typename iterator_traits<_II>::difference_type _Distance;
<        4*:  341:	  for(_Distance __n = __last - __first; __n > 0; --__n)
<         -:  342:	    {
<        2*:  343:	      *__result = std::move(*__first);
<        2*:  344:	      ++__first;
<        2*:  345:	      ++__result;
<         -:  346:	    }
<        2*:  347:	  return __result;
<         -:  348:	}
< ------------------
< _ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt4pairIN7OpenDDS4DCPS12WeakRcHandleINS5_15TransportClientEEENS5_6GUID_tEESB_EET0_T_SD_SC_:
<     #####:  338:	__copy_m(_II __first, _II __last, _OI __result)
<         -:  339:	{
<         -:  340:	  typedef typename iterator_traits<_II>::difference_type _Distance;
<     #####:  341:	  for(_Distance __n = __last - __first; __n > 0; --__n)
<         -:  342:	    {
<     #####:  343:	      *__result = std::move(*__first);
<     #####:  344:	      ++__first;
<     #####:  345:	      ++__result;
<         -:  346:	    }
<     #####:  347:	  return __result;
<         -:  348:	}
< ------------------
< _ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt4pairIPN7OpenDDS4DCPS21TransportQueueElementENS5_21TransportSendStrategy8SendModeEESB_EET0_T_SD_SC_:
<         2:  338:	__copy_m(_II __first, _II __last, _OI __result)
---
>         -:  338:	__copy_m(_II __first, _II __last, _OI __result)
640c496
<         4:  341:	  for(_Distance __n = __last - __first; __n > 0; --__n)
---
>         -:  341:	  for(_Distance __n = __last - __first; __n > 0; --__n)
642,644c498,500
<         2:  343:	      *__result = std::move(*__first);
<         2:  344:	      ++__first;
<         2:  345:	      ++__result;
---
>         -:  343:	      *__result = std::move(*__first);
>         -:  344:	      ++__first;
>         -:  345:	      ++__result;
646c502
<         2:  347:	  return __result;
---
>         -:  347:	  return __result;
648d503
< ------------------
657c512
<       55*:  357:	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
---
>      368*:  357:	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
666,667c521,538
<       55*:  366:	  const ptrdiff_t _Num = __last - __first;
<       55*:  367:	  if (_Num)
---
>      368*:  366:	  const ptrdiff_t _Num = __last - __first;
>      368*:  367:	  if (_Num)
>       95*:  368:	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
>      368*:  369:	  return __result + _Num;
>         -:  370:	}
> ------------------
> _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIbEEPT_PKS3_S6_S4_:
>     #####:  357:	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
>         -:  358:	{
>         -:  359:#if __cplusplus >= 201103L
>         -:  360:	  using __assignable = conditional<_IsMove,
>         -:  361:					   is_move_assignable<_Tp>,
>         -:  362:					   is_copy_assignable<_Tp>>;
>         -:  363:	  // trivial types can have deleted assignment
>         -:  364:	  static_assert( __assignable::type::value, "type is not assignable" );
>         -:  365:#endif
>     #####:  366:	  const ptrdiff_t _Num = __last - __first;
>     #####:  367:	  if (_Num)
669c540
<       55*:  369:	  return __result + _Num;
---
>     #####:  369:	  return __result + _Num;
672c543
< _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPPN7OpenDDS4DCPS21TransportQueueElementEEEPT_PKS8_SB_S9_:
---
> _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_:
688c559
< _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN7OpenDDS4DCPS6GUID_tEEEPT_PKS6_S9_S7_:
---
> _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_:
704c575
< _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN7OpenDDS4DCPS6GUID_tEEEPT_PKS6_S9_S7_:
---
> _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIfEEPT_PKS3_S6_S4_:
720c591
< _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPPN7OpenDDS4DCPS11SendRequestEEEPT_PKS8_SB_S9_:
---
> _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIeEEPT_PKS3_S6_S4_:
736c607
< _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt10unique_ptrIN7OpenDDS4DCPS18ReactorInterceptor7CommandESt14default_deleteIS7_EEEEPT_PKSC_SF_SD_:
---
> _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIlEEPT_PKS3_S6_S4_:
752,753c623,624
< _ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIPN7OpenDDS4DCPS13TransportImplEEEPT_PKS7_SA_S8_:
<        55:  357:	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
---
> _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_:
>     #####:  357:	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
762,763c633,634
<        55:  366:	  const ptrdiff_t _Num = __last - __first;
<        55:  367:	  if (_Num)
---
>     #####:  366:	  const ptrdiff_t _Num = __last - __first;
>     #####:  367:	  if (_Num)
765c636
<        55:  369:	  return __result + _Num;
---
>     #####:  369:	  return __result + _Num;
768c639
< _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN7OpenDDS4DCPS6GUID_tEEEPT_PKS6_S9_S7_:
---
> _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_:
784c655
< _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPPN7OpenDDS4DCPS21TransportQueueElementEEEPT_PKS8_SB_S9_:
---
> _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIsEEPT_PKS3_S6_S4_:
800c671
< _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPPN7OpenDDS4DCPS21TransportQueueElementEEEPT_PKS8_SB_S9_:
---
> _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_:
816c687,719
< _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_:
---
> _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_:
>       368:  357:	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
>         -:  358:	{
>         -:  359:#if __cplusplus >= 201103L
>         -:  360:	  using __assignable = conditional<_IsMove,
>         -:  361:					   is_move_assignable<_Tp>,
>         -:  362:					   is_copy_assignable<_Tp>>;
>         -:  363:	  // trivial types can have deleted assignment
>         -:  364:	  static_assert( __assignable::type::value, "type is not assignable" );
>         -:  365:#endif
>       368:  366:	  const ptrdiff_t _Num = __last - __first;
>       368:  367:	  if (_Num)
>        95:  368:	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
>       368:  369:	  return __result + _Num;
>         -:  370:	}
> ------------------
> _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mItEEPT_PKS3_S6_S4_:
>     #####:  357:	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
>         -:  358:	{
>         -:  359:#if __cplusplus >= 201103L
>         -:  360:	  using __assignable = conditional<_IsMove,
>         -:  361:					   is_move_assignable<_Tp>,
>         -:  362:					   is_copy_assignable<_Tp>>;
>         -:  363:	  // trivial types can have deleted assignment
>         -:  364:	  static_assert( __assignable::type::value, "type is not assignable" );
>         -:  365:#endif
>     #####:  366:	  const ptrdiff_t _Num = __last - __first;
>     #####:  367:	  if (_Num)
>     #####:  368:	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
>     #####:  369:	  return __result + _Num;
>         -:  370:	}
> ------------------
> _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIwEEPT_PKS3_S6_S4_:
836c739
<       69*:  375:    __copy_move_a(_II __first, _II __last, _OI __result)
---
>      368*:  375:    __copy_move_a(_II __first, _II __last, _OI __result)
841c744
<       69*:  380:      const bool __simple = (__is_trivial(_ValueTypeI)
---
>      368*:  380:      const bool __simple = (__is_trivial(_ValueTypeI)
847c750
<       69*:  386:			      _Category>::__copy_m(__first, __last, __result);
---
>      368*:  386:			      _Category>::__copy_m(__first, __last, __result);
850c753
< _ZSt13__copy_move_aILb0EPPPN7OpenDDS4DCPS21TransportQueueElementES5_ET1_T0_S7_S6_:
---
> _ZSt13__copy_move_aILb0EPbS0_ET1_T0_S2_S1_:
865c768
< _ZSt13__copy_move_aILb0EPN7OpenDDS4DCPS6GUID_tES3_ET1_T0_S5_S4_:
---
> _ZSt13__copy_move_aILb0EPcS0_ET1_T0_S2_S1_:
880c783
< _ZSt13__copy_move_aILb1EPSt4pairIN7OpenDDS4DCPS12WeakRcHandleINS2_15TransportClientEEENS2_6GUID_tEES8_ET1_T0_SA_S9_:
---
> _ZSt13__copy_move_aILb0EPdS0_ET1_T0_S2_S1_:
895c798
< _ZSt13__copy_move_aILb0EPN7OpenDDS4DCPS6GUID_tES3_ET1_T0_S5_S4_:
---
> _ZSt13__copy_move_aILb0EPfS0_ET1_T0_S2_S1_:
910c813
< _ZSt13__copy_move_aILb0EPPPN7OpenDDS4DCPS11SendRequestES5_ET1_T0_S7_S6_:
---
> _ZSt13__copy_move_aILb0EPeS0_ET1_T0_S2_S1_:
925c828
< _ZSt13__copy_move_aILb0EPPSt10unique_ptrIN7OpenDDS4DCPS18ReactorInterceptor7CommandESt14default_deleteIS4_EES9_ET1_T0_SB_SA_:
---
> _ZSt13__copy_move_aILb0EPlS0_ET1_T0_S2_S1_:
940,955c843
< _ZSt13__copy_move_aILb1EPPN7OpenDDS4DCPS13TransportImplES4_ET1_T0_S6_S5_:
<        55:  375:    __copy_move_a(_II __first, _II __last, _OI __result)
<         -:  376:    {
<         -:  377:      typedef typename iterator_traits<_II>::value_type _ValueTypeI;
<         -:  378:      typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
<         -:  379:      typedef typename iterator_traits<_II>::iterator_category _Category;
<        55:  380:      const bool __simple = (__is_trivial(_ValueTypeI)
<         -:  381:			     && __is_pointer<_II>::__value
<         -:  382:			     && __is_pointer<_OI>::__value
<         -:  383:			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
<         -:  384:
<         -:  385:      return std::__copy_move<_IsMove, __simple,
<        55:  386:			      _Category>::__copy_m(__first, __last, __result);
<         -:  387:    }
< ------------------
< _ZSt13__copy_move_aILb0EPN7OpenDDS4DCPS16TransportLocatorES3_ET1_T0_S5_S4_:
---
> _ZSt13__copy_move_aILb0EPiS0_ET1_T0_S2_S1_:
970c858
< _ZSt13__copy_move_aILb0EPN7OpenDDS4DCPS16TransportLocatorES3_ET1_T0_S5_S4_:
---
> _ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_:
985c873
< _ZSt13__copy_move_aILb0EPN7OpenDDS4DCPS6GUID_tES3_ET1_T0_S5_S4_:
---
> _ZSt13__copy_move_aILb0EPsS0_ET1_T0_S2_S1_:
1000c888
< _ZSt13__copy_move_aILb0EPPPN7OpenDDS4DCPS21TransportQueueElementES5_ET1_T0_S7_S6_:
---
> _ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_:
1015,1016c903,904
< _ZSt13__copy_move_aILb0ESt15_Deque_iteratorIPN7OpenDDS4DCPS21TransportQueueElementERS4_PS4_ESt20back_insert_iteratorISt5dequeIS4_SaIS4_EEEET1_T0_SE_SD_:
<     #####:  375:    __copy_move_a(_II __first, _II __last, _OI __result)
---
> _ZSt13__copy_move_aILb0EPjS0_ET1_T0_S2_S1_:
>       368:  375:    __copy_move_a(_II __first, _II __last, _OI __result)
1021c909
<     #####:  380:      const bool __simple = (__is_trivial(_ValueTypeI)
---
>       368:  380:      const bool __simple = (__is_trivial(_ValueTypeI)
1027c915
<     #####:  386:			      _Category>::__copy_m(__first, __last, __result);
---
>       368:  386:			      _Category>::__copy_m(__first, __last, __result);
1030c918
< _ZSt13__copy_move_aILb0EPPPN7OpenDDS4DCPS21TransportQueueElementES5_ET1_T0_S7_S6_:
---
> _ZSt13__copy_move_aILb0EPtS0_ET1_T0_S2_S1_:
1045,1060c933
< _ZSt13__copy_move_aILb1EPSt4pairIPN7OpenDDS4DCPS21TransportQueueElementENS2_21TransportSendStrategy8SendModeEES8_ET1_T0_SA_S9_:
<         2:  375:    __copy_move_a(_II __first, _II __last, _OI __result)
<         -:  376:    {
<         -:  377:      typedef typename iterator_traits<_II>::value_type _ValueTypeI;
<         -:  378:      typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
<         -:  379:      typedef typename iterator_traits<_II>::iterator_category _Category;
<         2:  380:      const bool __simple = (__is_trivial(_ValueTypeI)
<         -:  381:			     && __is_pointer<_II>::__value
<         -:  382:			     && __is_pointer<_OI>::__value
<         -:  383:			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
<         -:  384:
<         -:  385:      return std::__copy_move<_IsMove, __simple,
<         2:  386:			      _Category>::__copy_m(__first, __last, __result);
<         -:  387:    }
< ------------------
< _ZSt13__copy_move_aILb0ESt15_Deque_iteratorIPN7OpenDDS4DCPS21TransportQueueElementERS4_PS4_ESt20back_insert_iteratorISt5dequeIS4_SaIS4_EEEET1_T0_SE_SD_:
---
> _ZSt13__copy_move_aILb0EPwS0_ET1_T0_S2_S1_:
1075,1089d947
< _ZSt13__copy_move_aILb0EPKhPhET1_T0_S4_S3_:
<        12:  375:    __copy_move_a(_II __first, _II __last, _OI __result)
<         -:  376:    {
<         -:  377:      typedef typename iterator_traits<_II>::value_type _ValueTypeI;
<         -:  378:      typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
<         -:  379:      typedef typename iterator_traits<_II>::iterator_category _Category;
<        12:  380:      const bool __simple = (__is_trivial(_ValueTypeI)
<         -:  381:			     && __is_pointer<_II>::__value
<         -:  382:			     && __is_pointer<_OI>::__value
<         -:  383:			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
<         -:  384:
<         -:  385:      return std::__copy_move<_IsMove, __simple,
<        12:  386:			      _Category>::__copy_m(__first, __last, __result);
<         -:  387:    }
< ------------------
1122c980
<       69*:  420:    __copy_move_a2(_II __first, _II __last, _OI __result)
---
>      368*:  420:    __copy_move_a2(_II __first, _II __last, _OI __result)
1124c982
<       69*:  422:      return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
---
>      368*:  422:      return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
1126c984
<       69*:  424:					     std::__niter_base(__result)));
---
>      368*:  424:					     std::__niter_base(__result)));
1129c987
< _ZSt14__copy_move_a2ILb0EPPPN7OpenDDS4DCPS21TransportQueueElementES5_ET1_T0_S7_S6_:
---
> _ZSt14__copy_move_a2ILb0EPbS0_ET1_T0_S2_S1_:
1137c995
< _ZSt14__copy_move_a2ILb0EPN7OpenDDS4DCPS6GUID_tES3_ET1_T0_S5_S4_:
---
> _ZSt14__copy_move_a2ILb0EPcS0_ET1_T0_S2_S1_:
1145c1003
< _ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPSt4pairIN7OpenDDS4DCPS12WeakRcHandleINS4_15TransportClientEEENS4_6GUID_tEESt6vectorIS9_SaIS9_EEEESE_ET1_T0_SG_SF_:
---
> _ZSt14__copy_move_a2ILb0EPdS0_ET1_T0_S2_S1_:
1153c1011
< _ZSt14__copy_move_a2ILb0EPN7OpenDDS4DCPS6GUID_tES3_ET1_T0_S5_S4_:
---
> _ZSt14__copy_move_a2ILb0EPfS0_ET1_T0_S2_S1_:
1161c1019
< _ZSt14__copy_move_a2ILb0EPPPN7OpenDDS4DCPS11SendRequestES5_ET1_T0_S7_S6_:
---
> _ZSt14__copy_move_a2ILb0EPeS0_ET1_T0_S2_S1_:
1169c1027
< _ZSt14__copy_move_a2ILb0EPPSt10unique_ptrIN7OpenDDS4DCPS18ReactorInterceptor7CommandESt14default_deleteIS4_EES9_ET1_T0_SB_SA_:
---
> _ZSt14__copy_move_a2ILb0EPlS0_ET1_T0_S2_S1_:
1177,1185c1035
< _ZSt14__copy_move_a2ILb1EPPN7OpenDDS4DCPS13TransportImplES4_ET1_T0_S6_S5_:
<        55:  420:    __copy_move_a2(_II __first, _II __last, _OI __result)
<         -:  421:    {
<        55:  422:      return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
<         -:  423:					     std::__niter_base(__last),
<        55:  424:					     std::__niter_base(__result)));
<         -:  425:    }
< ------------------
< _ZSt14__copy_move_a2ILb0EPN7OpenDDS4DCPS16TransportLocatorES3_ET1_T0_S5_S4_:
---
> _ZSt14__copy_move_a2ILb0EPiS0_ET1_T0_S2_S1_:
1193c1043
< _ZSt14__copy_move_a2ILb0EPN7OpenDDS4DCPS16TransportLocatorES3_ET1_T0_S5_S4_:
---
> _ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_:
1201c1051
< _ZSt14__copy_move_a2ILb0EPN7OpenDDS4DCPS6GUID_tES3_ET1_T0_S5_S4_:
---
> _ZSt14__copy_move_a2ILb0EPsS0_ET1_T0_S2_S1_:
1209c1059
< _ZSt14__copy_move_a2ILb0EPPPN7OpenDDS4DCPS21TransportQueueElementES5_ET1_T0_S7_S6_:
---
> _ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_:
1217,1218c1067,1068
< _ZSt14__copy_move_a2ILb0ESt15_Deque_iteratorIPN7OpenDDS4DCPS21TransportQueueElementERS4_PS4_ESt20back_insert_iteratorISt5dequeIS4_SaIS4_EEEET1_T0_SE_SD_:
<     #####:  420:    __copy_move_a2(_II __first, _II __last, _OI __result)
---
> _ZSt14__copy_move_a2ILb0EPjS0_ET1_T0_S2_S1_:
>       368:  420:    __copy_move_a2(_II __first, _II __last, _OI __result)
1220c1070
<     #####:  422:      return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
---
>       368:  422:      return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
1222c1072
<     #####:  424:					     std::__niter_base(__result)));
---
>       368:  424:					     std::__niter_base(__result)));
1225c1075
< _ZSt14__copy_move_a2ILb0EPPPN7OpenDDS4DCPS21TransportQueueElementES5_ET1_T0_S7_S6_:
---
> _ZSt14__copy_move_a2ILb0EPtS0_ET1_T0_S2_S1_:
1233,1241c1083
< _ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPSt4pairIPN7OpenDDS4DCPS21TransportQueueElementENS4_21TransportSendStrategy8SendModeEESt6vectorIS9_SaIS9_EEEESE_ET1_T0_SG_SF_:
<         2:  420:    __copy_move_a2(_II __first, _II __last, _OI __result)
<         -:  421:    {
<         2:  422:      return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
<         -:  423:					     std::__niter_base(__last),
<         2:  424:					     std::__niter_base(__result)));
<         -:  425:    }
< ------------------
< _ZSt14__copy_move_a2ILb0ESt15_Deque_iteratorIPN7OpenDDS4DCPS21TransportQueueElementERS4_PS4_ESt20back_insert_iteratorISt5dequeIS4_SaIS4_EEEET1_T0_SE_SD_:
---
> _ZSt14__copy_move_a2ILb0EPwS0_ET1_T0_S2_S1_:
1249,1256d1090
< _ZSt14__copy_move_a2ILb0EPKhPhET1_T0_S4_S3_:
<        12:  420:    __copy_move_a2(_II __first, _II __last, _OI __result)
<         -:  421:    {
<        12:  422:      return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
<         -:  423:					     std::__niter_base(__last),
<        12:  424:					     std::__niter_base(__result)));
<         -:  425:    }
< ------------------
1277c1111
<       67*:  446:    copy(_II __first, _II __last, _OI __result)
---
>      368*:  446:    copy(_II __first, _II __last, _OI __result)
1286,1287c1120,1121
<       67*:  455:	      (std::__miter_base(__first), std::__miter_base(__last),
<       67*:  456:	       __result));
---
>      368*:  455:	      (std::__miter_base(__first), std::__miter_base(__last),
>      368*:  456:	       __result));
1290c1124
< _ZSt4copyIPPPN7OpenDDS4DCPS21TransportQueueElementES5_ET0_T_S7_S6_:
---
> _ZSt4copyIPbS0_ET0_T_S2_S1_:
1304c1138
< _ZSt4copyIPN7OpenDDS4DCPS6GUID_tES3_ET0_T_S5_S4_:
---
> _ZSt4copyIPcS0_ET0_T_S2_S1_:
1318c1152
< _ZSt4copyIPN7OpenDDS4DCPS6GUID_tES3_ET0_T_S5_S4_:
---
> _ZSt4copyIPdS0_ET0_T_S2_S1_:
1332c1166
< _ZSt4copyIPPPN7OpenDDS4DCPS11SendRequestES5_ET0_T_S7_S6_:
---
> _ZSt4copyIPfS0_ET0_T_S2_S1_:
1346c1180
< _ZSt4copyIPPSt10unique_ptrIN7OpenDDS4DCPS18ReactorInterceptor7CommandESt14default_deleteIS4_EES9_ET0_T_SB_SA_:
---
> _ZSt4copyIPeS0_ET0_T_S2_S1_:
1360,1374c1194
< _ZSt4copyISt13move_iteratorIPPN7OpenDDS4DCPS13TransportImplEES5_ET0_T_S8_S7_:
<        55:  446:    copy(_II __first, _II __last, _OI __result)
<         -:  447:    {
<         -:  448:      // concept requirements
<         -:  449:      __glibcxx_function_requires(_InputIteratorConcept<_II>)
<         -:  450:      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
<         -:  451:	    typename iterator_traits<_II>::value_type>)
<         -:  452:      __glibcxx_requires_valid_range(__first, __last);
<         -:  453:
<         -:  454:      return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
<        55:  455:	      (std::__miter_base(__first), std::__miter_base(__last),
<        55:  456:	       __result));
<         -:  457:    }
< ------------------
< _ZSt4copyIPN7OpenDDS4DCPS16TransportLocatorES3_ET0_T_S5_S4_:
---
> _ZSt4copyIPlS0_ET0_T_S2_S1_:
1388c1208
< _ZSt4copyIPN7OpenDDS4DCPS16TransportLocatorES3_ET0_T_S5_S4_:
---
> _ZSt4copyIPiS0_ET0_T_S2_S1_:
1402c1222
< _ZSt4copyIPN7OpenDDS4DCPS6GUID_tES3_ET0_T_S5_S4_:
---
> _ZSt4copyIPhS0_ET0_T_S2_S1_:
1416c1236
< _ZSt4copyIPPPN7OpenDDS4DCPS21TransportQueueElementES5_ET0_T_S7_S6_:
---
> _ZSt4copyIPsS0_ET0_T_S2_S1_:
1430c1250
< _ZSt4copyISt15_Deque_iteratorIPN7OpenDDS4DCPS21TransportQueueElementERS4_PS4_ESt20back_insert_iteratorISt5dequeIS4_SaIS4_EEEET0_T_SE_SD_:
---
> _ZSt4copyIPmS0_ET0_T_S2_S1_:
1444,1445c1264,1265
< _ZSt4copyIPPPN7OpenDDS4DCPS21TransportQueueElementES5_ET0_T_S7_S6_:
<     #####:  446:    copy(_II __first, _II __last, _OI __result)
---
> _ZSt4copyIPjS0_ET0_T_S2_S1_:
>       368:  446:    copy(_II __first, _II __last, _OI __result)
1454,1455c1274,1275
<     #####:  455:	      (std::__miter_base(__first), std::__miter_base(__last),
<     #####:  456:	       __result));
---
>       368:  455:	      (std::__miter_base(__first), std::__miter_base(__last),
>       368:  456:	       __result));
1458c1278
< _ZSt4copyISt15_Deque_iteratorIPN7OpenDDS4DCPS21TransportQueueElementERS4_PS4_ESt20back_insert_iteratorISt5dequeIS4_SaIS4_EEEET0_T_SE_SD_:
---
> _ZSt4copyIPtS0_ET0_T_S2_S1_:
1472,1473c1292,1293
< _ZSt4copyIPKhPhET0_T_S4_S3_:
<        12:  446:    copy(_II __first, _II __last, _OI __result)
---
> _ZSt4copyIPwS0_ET0_T_S2_S1_:
>     #####:  446:    copy(_II __first, _II __last, _OI __result)
1482,1483c1302,1303
<        12:  455:	      (std::__miter_base(__first), std::__miter_base(__last),
<        12:  456:	       __result));
---
>     #####:  455:	      (std::__miter_base(__first), std::__miter_base(__last),
>     #####:  456:	       __result));
1507,1520c1327
<        2*:  479:    move(_II __first, _II __last, _OI __result)
<         -:  480:    {
<         -:  481:      // concept requirements
<         -:  482:      __glibcxx_function_requires(_InputIteratorConcept<_II>)
<         -:  483:      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
<         -:  484:	    typename iterator_traits<_II>::value_type>)
<         -:  485:      __glibcxx_requires_valid_range(__first, __last);
<         -:  486:
<        2*:  487:      return std::__copy_move_a2<true>(std::__miter_base(__first),
<        2*:  488:				       std::__miter_base(__last), __result);
<         -:  489:    }
< ------------------
< _ZSt4moveIN9__gnu_cxx17__normal_iteratorIPSt4pairIN7OpenDDS4DCPS12WeakRcHandleINS4_15TransportClientEEENS4_6GUID_tEESt6vectorIS9_SaIS9_EEEESE_ET0_T_SG_SF_:
<     #####:  479:    move(_II __first, _II __last, _OI __result)
---
>         -:  479:    move(_II __first, _II __last, _OI __result)
1528,1529c1335,1336
<     #####:  487:      return std::__copy_move_a2<true>(std::__miter_base(__first),
<     #####:  488:				       std::__miter_base(__last), __result);
---
>         -:  487:      return std::__copy_move_a2<true>(std::__miter_base(__first),
>         -:  488:				       std::__miter_base(__last), __result);
1531,1544d1337
< ------------------
< _ZSt4moveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPN7OpenDDS4DCPS21TransportQueueElementENS4_21TransportSendStrategy8SendModeEESt6vectorIS9_SaIS9_EEEESE_ET0_T_SG_SF_:
<         2:  479:    move(_II __first, _II __last, _OI __result)
<         -:  480:    {
<         -:  481:      // concept requirements
<         -:  482:      __glibcxx_function_requires(_InputIteratorConcept<_II>)
<         -:  483:      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
<         -:  484:	    typename iterator_traits<_II>::value_type>)
<         -:  485:      __glibcxx_requires_valid_range(__first, __last);
<         -:  486:
<         2:  487:      return std::__copy_move_a2<true>(std::__miter_base(__first),
<         2:  488:				       std::__miter_base(__last), __result);
<         -:  489:    }
< ------------------
1599c1392
<     #####:  544:	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
---
>         -:  544:	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
1602,1604c1395,1397
<     #####:  547:	  for (__n = __last - __first; __n > 0; --__n)
<     #####:  548:	    *--__result = std::move(*--__last);
<     #####:  549:	  return __result;
---
>         -:  547:	  for (__n = __last - __first; __n > 0; --__n)
>         -:  548:	    *--__result = std::move(*--__last);
>         -:  549:	  return __result;
1614,1678c1407
<     #####:  559:	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
<         -:  560:	{
<         -:  561:#if __cplusplus >= 201103L
<         -:  562:	  using __assignable = conditional<_IsMove,
<         -:  563:					   is_move_assignable<_Tp>,
<         -:  564:					   is_copy_assignable<_Tp>>;
<         -:  565:	  // trivial types can have deleted assignment
<         -:  566:	  static_assert( __assignable::type::value, "type is not assignable" );
<         -:  567:#endif
<     #####:  568:	  const ptrdiff_t _Num = __last - __first;
<     #####:  569:	  if (_Num)
<     #####:  570:	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
<     #####:  571:	  return __result - _Num;
<         -:  572:	}
< ------------------
< _ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPPN7OpenDDS4DCPS21TransportQueueElementEEEPT_PKS8_SB_S9_:
<     #####:  559:	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
<         -:  560:	{
<         -:  561:#if __cplusplus >= 201103L
<         -:  562:	  using __assignable = conditional<_IsMove,
<         -:  563:					   is_move_assignable<_Tp>,
<         -:  564:					   is_copy_assignable<_Tp>>;
<         -:  565:	  // trivial types can have deleted assignment
<         -:  566:	  static_assert( __assignable::type::value, "type is not assignable" );
<         -:  567:#endif
<     #####:  568:	  const ptrdiff_t _Num = __last - __first;
<     #####:  569:	  if (_Num)
<     #####:  570:	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
<     #####:  571:	  return __result - _Num;
<         -:  572:	}
< ------------------
< _ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPPN7OpenDDS4DCPS11SendRequestEEEPT_PKS8_SB_S9_:
<     #####:  559:	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
<         -:  560:	{
<         -:  561:#if __cplusplus >= 201103L
<         -:  562:	  using __assignable = conditional<_IsMove,
<         -:  563:					   is_move_assignable<_Tp>,
<         -:  564:					   is_copy_assignable<_Tp>>;
<         -:  565:	  // trivial types can have deleted assignment
<         -:  566:	  static_assert( __assignable::type::value, "type is not assignable" );
<         -:  567:#endif
<     #####:  568:	  const ptrdiff_t _Num = __last - __first;
<     #####:  569:	  if (_Num)
<     #####:  570:	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
<     #####:  571:	  return __result - _Num;
<         -:  572:	}
< ------------------
< _ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt10unique_ptrIN7OpenDDS4DCPS18ReactorInterceptor7CommandESt14default_deleteIS7_EEEEPT_PKSC_SF_SD_:
<     #####:  559:	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
<         -:  560:	{
<         -:  561:#if __cplusplus >= 201103L
<         -:  562:	  using __assignable = conditional<_IsMove,
<         -:  563:					   is_move_assignable<_Tp>,
<         -:  564:					   is_copy_assignable<_Tp>>;
<         -:  565:	  // trivial types can have deleted assignment
<         -:  566:	  static_assert( __assignable::type::value, "type is not assignable" );
<         -:  567:#endif
<     #####:  568:	  const ptrdiff_t _Num = __last - __first;
<     #####:  569:	  if (_Num)
<     #####:  570:	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
<     #####:  571:	  return __result - _Num;
<         -:  572:	}
< ------------------
< _ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPPN7OpenDDS4DCPS21TransportQueueElementEEEPT_PKS8_SB_S9_:
<     #####:  559:	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
---
>         -:  559:	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
1687,1690c1416,1419
<     #####:  568:	  const ptrdiff_t _Num = __last - __first;
<     #####:  569:	  if (_Num)
<     #####:  570:	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
<     #####:  571:	  return __result - _Num;
---
>         -:  568:	  const ptrdiff_t _Num = __last - __first;
>         -:  569:	  if (_Num)
>         -:  570:	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
>         -:  571:	  return __result - _Num;
1692,1708d1420
< ------------------
< _ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPPN7OpenDDS4DCPS21TransportQueueElementEEEPT_PKS8_SB_S9_:
<     #####:  559:	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
<         -:  560:	{
<         -:  561:#if __cplusplus >= 201103L
<         -:  562:	  using __assignable = conditional<_IsMove,
<         -:  563:					   is_move_assignable<_Tp>,
<         -:  564:					   is_copy_assignable<_Tp>>;
<         -:  565:	  // trivial types can have deleted assignment
<         -:  566:	  static_assert( __assignable::type::value, "type is not assignable" );
<         -:  567:#endif
<     #####:  568:	  const ptrdiff_t _Num = __last - __first;
<     #####:  569:	  if (_Num)
<     #####:  570:	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
<     #####:  571:	  return __result - _Num;
<         -:  572:	}
< ------------------
1713,1730c1425
<     #####:  577:    __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
<         -:  578:    {
<         -:  579:      typedef typename iterator_traits<_BI1>::value_type _ValueType1;
<         -:  580:      typedef typename iterator_traits<_BI2>::value_type _ValueType2;
<         -:  581:      typedef typename iterator_traits<_BI1>::iterator_category _Category;
<     #####:  582:      const bool __simple = (__is_trivial(_ValueType1)
<         -:  583:			     && __is_pointer<_BI1>::__value
<         -:  584:			     && __is_pointer<_BI2>::__value
<         -:  585:			     && __are_same<_ValueType1, _ValueType2>::__value);
<         -:  586:
<         -:  587:      return std::__copy_move_backward<_IsMove, __simple,
<     #####:  588:				       _Category>::__copy_move_b(__first,
<         -:  589:								 __last,
<     #####:  590:								 __result);
<         -:  591:    }
< ------------------
< _ZSt22__copy_move_backward_aILb0EPPPN7OpenDDS4DCPS21TransportQueueElementES5_ET1_T0_S7_S6_:
<     #####:  577:    __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
---
>         -:  577:    __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
1735c1430
<     #####:  582:      const bool __simple = (__is_trivial(_ValueType1)
---
>         -:  582:      const bool __simple = (__is_trivial(_ValueType1)
1741c1436
<     #####:  588:				       _Category>::__copy_move_b(__first,
---
>         -:  588:				       _Category>::__copy_move_b(__first,
1743c1438
<     #####:  590:								 __result);
---
>         -:  590:								 __result);
1745,1830d1439
< ------------------
< _ZSt22__copy_move_backward_aILb0EPPPN7OpenDDS4DCPS11SendRequestES5_ET1_T0_S7_S6_:
<     #####:  577:    __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
<         -:  578:    {
<         -:  579:      typedef typename iterator_traits<_BI1>::value_type _ValueType1;
<         -:  580:      typedef typename iterator_traits<_BI2>::value_type _ValueType2;
<         -:  581:      typedef typename iterator_traits<_BI1>::iterator_category _Category;
<     #####:  582:      const bool __simple = (__is_trivial(_ValueType1)
<         -:  583:			     && __is_pointer<_BI1>::__value
<         -:  584:			     && __is_pointer<_BI2>::__value
<         -:  585:			     && __are_same<_ValueType1, _ValueType2>::__value);
<         -:  586:
<         -:  587:      return std::__copy_move_backward<_IsMove, __simple,
<     #####:  588:				       _Category>::__copy_move_b(__first,
<         -:  589:								 __last,
<     #####:  590:								 __result);
<         -:  591:    }
< ------------------
< _ZSt22__copy_move_backward_aILb0EPPSt10unique_ptrIN7OpenDDS4DCPS18ReactorInterceptor7CommandESt14default_deleteIS4_EES9_ET1_T0_SB_SA_:
<     #####:  577:    __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
<         -:  578:    {
<         -:  579:      typedef typename iterator_traits<_BI1>::value_type _ValueType1;
<         -:  580:      typedef typename iterator_traits<_BI2>::value_type _ValueType2;
<         -:  581:      typedef typename iterator_traits<_BI1>::iterator_category _Category;
<     #####:  582:      const bool __simple = (__is_trivial(_ValueType1)
<         -:  583:			     && __is_pointer<_BI1>::__value
<         -:  584:			     && __is_pointer<_BI2>::__value
<         -:  585:			     && __are_same<_ValueType1, _ValueType2>::__value);
<         -:  586:
<         -:  587:      return std::__copy_move_backward<_IsMove, __simple,
<     #####:  588:				       _Category>::__copy_move_b(__first,
<         -:  589:								 __last,
<     #####:  590:								 __result);
<         -:  591:    }
< ------------------
< _ZSt22__copy_move_backward_aILb1EPN7OpenDDS4DCPS8RcHandleINS1_13TransportInstEEES5_ET1_T0_S7_S6_:
<     #####:  577:    __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
<         -:  578:    {
<         -:  579:      typedef typename iterator_traits<_BI1>::value_type _ValueType1;
<         -:  580:      typedef typename iterator_traits<_BI2>::value_type _ValueType2;
<         -:  581:      typedef typename iterator_traits<_BI1>::iterator_category _Category;
<     #####:  582:      const bool __simple = (__is_trivial(_ValueType1)
<         -:  583:			     && __is_pointer<_BI1>::__value
<         -:  584:			     && __is_pointer<_BI2>::__value
<         -:  585:			     && __are_same<_ValueType1, _ValueType2>::__value);
<         -:  586:
<         -:  587:      return std::__copy_move_backward<_IsMove, __simple,
<     #####:  588:				       _Category>::__copy_move_b(__first,
<         -:  589:								 __last,
<     #####:  590:								 __result);
<         -:  591:    }
< ------------------
< _ZSt22__copy_move_backward_aILb0EPPPN7OpenDDS4DCPS21TransportQueueElementES5_ET1_T0_S7_S6_:
<     #####:  577:    __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
<         -:  578:    {
<         -:  579:      typedef typename iterator_traits<_BI1>::value_type _ValueType1;
<         -:  580:      typedef typename iterator_traits<_BI2>::value_type _ValueType2;
<         -:  581:      typedef typename iterator_traits<_BI1>::iterator_category _Category;
<     #####:  582:      const bool __simple = (__is_trivial(_ValueType1)
<         -:  583:			     && __is_pointer<_BI1>::__value
<         -:  584:			     && __is_pointer<_BI2>::__value
<         -:  585:			     && __are_same<_ValueType1, _ValueType2>::__value);
<         -:  586:
<         -:  587:      return std::__copy_move_backward<_IsMove, __simple,
<     #####:  588:				       _Category>::__copy_move_b(__first,
<         -:  589:								 __last,
<     #####:  590:								 __result);
<         -:  591:    }
< ------------------
< _ZSt22__copy_move_backward_aILb0EPPPN7OpenDDS4DCPS21TransportQueueElementES5_ET1_T0_S7_S6_:
<     #####:  577:    __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
<         -:  578:    {
<         -:  579:      typedef typename iterator_traits<_BI1>::value_type _ValueType1;
<         -:  580:      typedef typename iterator_traits<_BI2>::value_type _ValueType2;
<         -:  581:      typedef typename iterator_traits<_BI1>::iterator_category _Category;
<     #####:  582:      const bool __simple = (__is_trivial(_ValueType1)
<         -:  583:			     && __is_pointer<_BI1>::__value
<         -:  584:			     && __is_pointer<_BI2>::__value
<         -:  585:			     && __are_same<_ValueType1, _ValueType2>::__value);
<         -:  586:
<         -:  587:      return std::__copy_move_backward<_IsMove, __simple,
<     #####:  588:				       _Category>::__copy_move_b(__first,
<         -:  589:								 __last,
<     #####:  590:								 __result);
<         -:  591:    }
< ------------------
1834,1866c1443
<     #####:  595:    __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
<         -:  596:    {
<         -:  597:      return _BI2(std::__copy_move_backward_a<_IsMove>
<     #####:  598:		  (std::__niter_base(__first), std::__niter_base(__last),
<     #####:  599:		   std::__niter_base(__result)));
<         -:  600:    }
< ------------------
< _ZSt23__copy_move_backward_a2ILb0EPPPN7OpenDDS4DCPS21TransportQueueElementES5_ET1_T0_S7_S6_:
<     #####:  595:    __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
<         -:  596:    {
<         -:  597:      return _BI2(std::__copy_move_backward_a<_IsMove>
<     #####:  598:		  (std::__niter_base(__first), std::__niter_base(__last),
<     #####:  599:		   std::__niter_base(__result)));
<         -:  600:    }
< ------------------
< _ZSt23__copy_move_backward_a2ILb0EPPPN7OpenDDS4DCPS11SendRequestES5_ET1_T0_S7_S6_:
<     #####:  595:    __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
<         -:  596:    {
<         -:  597:      return _BI2(std::__copy_move_backward_a<_IsMove>
<     #####:  598:		  (std::__niter_base(__first), std::__niter_base(__last),
<     #####:  599:		   std::__niter_base(__result)));
<         -:  600:    }
< ------------------
< _ZSt23__copy_move_backward_a2ILb0EPPSt10unique_ptrIN7OpenDDS4DCPS18ReactorInterceptor7CommandESt14default_deleteIS4_EES9_ET1_T0_SB_SA_:
<     #####:  595:    __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
<         -:  596:    {
<         -:  597:      return _BI2(std::__copy_move_backward_a<_IsMove>
<     #####:  598:		  (std::__niter_base(__first), std::__niter_base(__last),
<     #####:  599:		   std::__niter_base(__result)));
<         -:  600:    }
< ------------------
< _ZSt23__copy_move_backward_a2ILb1EPN7OpenDDS4DCPS8RcHandleINS1_13TransportInstEEES5_ET1_T0_S7_S6_:
<     #####:  595:    __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
---
>         -:  595:    __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
1869,1870c1446,1447
<     #####:  598:		  (std::__niter_base(__first), std::__niter_base(__last),
<     #####:  599:		   std::__niter_base(__result)));
---
>         -:  598:		  (std::__niter_base(__first), std::__niter_base(__last),
>         -:  599:		   std::__niter_base(__result)));
1872,1888d1448
< ------------------
< _ZSt23__copy_move_backward_a2ILb0EPPPN7OpenDDS4DCPS21TransportQueueElementES5_ET1_T0_S7_S6_:
<     #####:  595:    __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
<         -:  596:    {
<         -:  597:      return _BI2(std::__copy_move_backward_a<_IsMove>
<     #####:  598:		  (std::__niter_base(__first), std::__niter_base(__last),
<     #####:  599:		   std::__niter_base(__result)));
<         -:  600:    }
< ------------------
< _ZSt23__copy_move_backward_a2ILb0EPPPN7OpenDDS4DCPS21TransportQueueElementES5_ET1_T0_S7_S6_:
<     #####:  595:    __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
<         -:  596:    {
<         -:  597:      return _BI2(std::__copy_move_backward_a<_IsMove>
<     #####:  598:		  (std::__niter_base(__first), std::__niter_base(__last),
<     #####:  599:		   std::__niter_base(__result)));
<         -:  600:    }
< ------------------
1910,1990c1470
<     #####:  622:    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
<         -:  623:    {
<         -:  624:      // concept requirements
<         -:  625:      __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
<         -:  626:      __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
<         -:  627:      __glibcxx_function_requires(_ConvertibleConcept<
<         -:  628:	    typename iterator_traits<_BI1>::value_type,
<         -:  629:	    typename iterator_traits<_BI2>::value_type>)
<         -:  630:      __glibcxx_requires_valid_range(__first, __last);
<         -:  631:
<         -:  632:      return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
<     #####:  633:	      (std::__miter_base(__first), std::__miter_base(__last),
<     #####:  634:	       __result));
<         -:  635:    }
< ------------------
< _ZSt13copy_backwardIPPPN7OpenDDS4DCPS21TransportQueueElementES5_ET0_T_S7_S6_:
<     #####:  622:    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
<         -:  623:    {
<         -:  624:      // concept requirements
<         -:  625:      __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
<         -:  626:      __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
<         -:  627:      __glibcxx_function_requires(_ConvertibleConcept<
<         -:  628:	    typename iterator_traits<_BI1>::value_type,
<         -:  629:	    typename iterator_traits<_BI2>::value_type>)
<         -:  630:      __glibcxx_requires_valid_range(__first, __last);
<         -:  631:
<         -:  632:      return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
<     #####:  633:	      (std::__miter_base(__first), std::__miter_base(__last),
<     #####:  634:	       __result));
<         -:  635:    }
< ------------------
< _ZSt13copy_backwardIPPPN7OpenDDS4DCPS11SendRequestES5_ET0_T_S7_S6_:
<     #####:  622:    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
<         -:  623:    {
<         -:  624:      // concept requirements
<         -:  625:      __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
<         -:  626:      __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
<         -:  627:      __glibcxx_function_requires(_ConvertibleConcept<
<         -:  628:	    typename iterator_traits<_BI1>::value_type,
<         -:  629:	    typename iterator_traits<_BI2>::value_type>)
<         -:  630:      __glibcxx_requires_valid_range(__first, __last);
<         -:  631:
<         -:  632:      return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
<     #####:  633:	      (std::__miter_base(__first), std::__miter_base(__last),
<     #####:  634:	       __result));
<         -:  635:    }
< ------------------
< _ZSt13copy_backwardIPPSt10unique_ptrIN7OpenDDS4DCPS18ReactorInterceptor7CommandESt14default_deleteIS4_EES9_ET0_T_SB_SA_:
<     #####:  622:    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
<         -:  623:    {
<         -:  624:      // concept requirements
<         -:  625:      __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
<         -:  626:      __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
<         -:  627:      __glibcxx_function_requires(_ConvertibleConcept<
<         -:  628:	    typename iterator_traits<_BI1>::value_type,
<         -:  629:	    typename iterator_traits<_BI2>::value_type>)
<         -:  630:      __glibcxx_requires_valid_range(__first, __last);
<         -:  631:
<         -:  632:      return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
<     #####:  633:	      (std::__miter_base(__first), std::__miter_base(__last),
<     #####:  634:	       __result));
<         -:  635:    }
< ------------------
< _ZSt13copy_backwardIPPPN7OpenDDS4DCPS21TransportQueueElementES5_ET0_T_S7_S6_:
<     #####:  622:    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
<         -:  623:    {
<         -:  624:      // concept requirements
<         -:  625:      __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
<         -:  626:      __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
<         -:  627:      __glibcxx_function_requires(_ConvertibleConcept<
<         -:  628:	    typename iterator_traits<_BI1>::value_type,
<         -:  629:	    typename iterator_traits<_BI2>::value_type>)
<         -:  630:      __glibcxx_requires_valid_range(__first, __last);
<         -:  631:
<         -:  632:      return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
<     #####:  633:	      (std::__miter_base(__first), std::__miter_base(__last),
<     #####:  634:	       __result));
<         -:  635:    }
< ------------------
< _ZSt13copy_backwardIPPPN7OpenDDS4DCPS21TransportQueueElementES5_ET0_T_S7_S6_:
<     #####:  622:    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
---
>         -:  622:    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
2001,2002c1481,1482
<     #####:  633:	      (std::__miter_base(__first), std::__miter_base(__last),
<     #####:  634:	       __result));
---
>         -:  633:	      (std::__miter_base(__first), std::__miter_base(__last),
>         -:  634:	       __result));
2004d1483
< ------------------
2027c1506
<     #####:  658:    move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
---
>         -:  658:    move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
2037c1516
<     #####:  668:      return std::__copy_move_backward_a2<true>(std::__miter_base(__first),
---
>         -:  668:      return std::__copy_move_backward_a2<true>(std::__miter_base(__first),
2039c1518
<     #####:  670:						__result);
---
>         -:  670:						__result);
2050c1529
<     #####:  681:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
---
>         -:  681:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
2053,2055c1532,1545
<     #####:  684:      for (; __first != __last; ++__first)
<     #####:  685:	*__first = __value;
<     #####:  686:    }
---
>         -:  684:      for (; __first != __last; ++__first)
>         -:  685:	*__first = __value;
>         -:  686:    }
>         -:  687:
>         -:  688:  template<typename _ForwardIterator, typename _Tp>
>         -:  689:    inline typename
>         -:  690:    __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
>      457*:  691:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
>         -:  692:	     const _Tp& __value)
>         -:  693:    {
>      457*:  694:      const _Tp __tmp = __value;
>      819*:  695:      for (; __first != __last; ++__first)
>      362*:  696:	*__first = __tmp;
>      457*:  697:    }
2057,2063c1547,1554
< _ZSt8__fill_aIPN7OpenDDS4DCPS6GUID_tES2_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SB_RKS7_:
<     #####:  681:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
<         -:  682: 	     const _Tp& __value)
<         -:  683:    {
<     #####:  684:      for (; __first != __last; ++__first)
<     #####:  685:	*__first = __value;
<     #####:  686:    }
---
> _ZSt8__fill_aIPbbEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_:
>     #####:  691:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
>         -:  692:	     const _Tp& __value)
>         -:  693:    {
>     #####:  694:      const _Tp __tmp = __value;
>     #####:  695:      for (; __first != __last; ++__first)
>     #####:  696:	*__first = __tmp;
>     #####:  697:    }
2065,2071c1556,1563
< _ZSt8__fill_aIPN7OpenDDS4DCPS6GUID_tES2_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SB_RKS7_:
<     #####:  681:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
<         -:  682: 	     const _Tp& __value)
<         -:  683:    {
<     #####:  684:      for (; __first != __last; ++__first)
<     #####:  685:	*__first = __value;
<     #####:  686:    }
---
> _ZSt8__fill_aIPddEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_:
>     #####:  691:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
>         -:  692:	     const _Tp& __value)
>         -:  693:    {
>     #####:  694:      const _Tp __tmp = __value;
>     #####:  695:      for (; __first != __last; ++__first)
>     #####:  696:	*__first = __tmp;
>     #####:  697:    }
2073,2079c1565,1572
< _ZSt8__fill_aIPN7OpenDDS4DCPS16TransportLocatorES2_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SB_RKS7_:
<     #####:  681:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
<         -:  682: 	     const _Tp& __value)
<         -:  683:    {
<     #####:  684:      for (; __first != __last; ++__first)
<     #####:  685:	*__first = __value;
<     #####:  686:    }
---
> _ZSt8__fill_aIPffEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_:
>     #####:  691:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
>         -:  692:	     const _Tp& __value)
>         -:  693:    {
>     #####:  694:      const _Tp __tmp = __value;
>     #####:  695:      for (; __first != __last; ++__first)
>     #####:  696:	*__first = __tmp;
>     #####:  697:    }
2081,2087c1574,1581
< _ZSt8__fill_aIPN7OpenDDS4DCPS16TransportLocatorES2_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SB_RKS7_:
<     #####:  681:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
<         -:  682: 	     const _Tp& __value)
<         -:  683:    {
<     #####:  684:      for (; __first != __last; ++__first)
<     #####:  685:	*__first = __value;
<     #####:  686:    }
---
> _ZSt8__fill_aIPeeEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_:
>     #####:  691:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
>         -:  692:	     const _Tp& __value)
>         -:  693:    {
>     #####:  694:      const _Tp __tmp = __value;
>     #####:  695:      for (; __first != __last; ++__first)
>     #####:  696:	*__first = __tmp;
>     #####:  697:    }
2089,2095c1583,1590
< _ZSt8__fill_aIPN7OpenDDS4DCPS6GUID_tES2_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SB_RKS7_:
<     #####:  681:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
<         -:  682: 	     const _Tp& __value)
<         -:  683:    {
<     #####:  684:      for (; __first != __last; ++__first)
<     #####:  685:	*__first = __value;
<     #####:  686:    }
---
> _ZSt8__fill_aIPllEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_:
>     #####:  691:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
>         -:  692:	     const _Tp& __value)
>         -:  693:    {
>     #####:  694:      const _Tp __tmp = __value;
>     #####:  695:      for (; __first != __last; ++__first)
>     #####:  696:	*__first = __tmp;
>     #####:  697:    }
2097,2101c1592,1593
<         -:  687:
<         -:  688:  template<typename _ForwardIterator, typename _Tp>
<         -:  689:    inline typename
<         -:  690:    __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
<         -:  691:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
---
> _ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_:
>     #####:  691:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
2104,2107c1596,1645
<         -:  694:      const _Tp __tmp = __value;
<         -:  695:      for (; __first != __last; ++__first)
<         -:  696:	*__first = __tmp;
<         -:  697:    }
---
>     #####:  694:      const _Tp __tmp = __value;
>     #####:  695:      for (; __first != __last; ++__first)
>     #####:  696:	*__first = __tmp;
>     #####:  697:    }
> ------------------
> _ZSt8__fill_aIPssEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_:
>     #####:  691:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
>         -:  692:	     const _Tp& __value)
>         -:  693:    {
>     #####:  694:      const _Tp __tmp = __value;
>     #####:  695:      for (; __first != __last; ++__first)
>     #####:  696:	*__first = __tmp;
>     #####:  697:    }
> ------------------
> _ZSt8__fill_aIPmmEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_:
>     #####:  691:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
>         -:  692:	     const _Tp& __value)
>         -:  693:    {
>     #####:  694:      const _Tp __tmp = __value;
>     #####:  695:      for (; __first != __last; ++__first)
>     #####:  696:	*__first = __tmp;
>     #####:  697:    }
> ------------------
> _ZSt8__fill_aIPjjEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_:
>       457:  691:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
>         -:  692:	     const _Tp& __value)
>         -:  693:    {
>       457:  694:      const _Tp __tmp = __value;
>       819:  695:      for (; __first != __last; ++__first)
>       362:  696:	*__first = __tmp;
>       457:  697:    }
> ------------------
> _ZSt8__fill_aIPttEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_:
>     #####:  691:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
>         -:  692:	     const _Tp& __value)
>         -:  693:    {
>     #####:  694:      const _Tp __tmp = __value;
>     #####:  695:      for (; __first != __last; ++__first)
>     #####:  696:	*__first = __tmp;
>     #####:  697:    }
> ------------------
> _ZSt8__fill_aIPwwEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_:
>     #####:  691:    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
>         -:  692:	     const _Tp& __value)
>         -:  693:    {
>     #####:  694:      const _Tp __tmp = __value;
>     #####:  695:      for (; __first != __last; ++__first)
>     #####:  696:	*__first = __tmp;
>     #####:  697:    }
> ------------------
2113c1651
<         -:  703:    __fill_a(_Tp* __first, _Tp* __last, const _Tp& __c)
---
>     #####:  703:    __fill_a(_Tp* __first, _Tp* __last, const _Tp& __c)
2115,2118c1653,1656
<         -:  705:      const _Tp __tmp = __c;
<         -:  706:      if (const size_t __len = __last - __first)
<         -:  707:	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
<         -:  708:    }
---
>     #####:  705:      const _Tp __tmp = __c;
>     #####:  706:      if (const size_t __len = __last - __first)
>     #####:  707:	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
>     #####:  708:    }
2133a1672,1707
>      457*:  724:    fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
>         -:  725:    {
>         -:  726:      // concept requirements
>         -:  727:      __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
>         -:  728:				  _ForwardIterator>)
>         -:  729:      __glibcxx_requires_valid_range(__first, __last);
>         -:  730:
>      457*:  731:      std::__fill_a(std::__niter_base(__first), std::__niter_base(__last),
>         -:  732:		    __value);
>      457*:  733:    }
> ------------------
> _ZSt4fillIPbbEvT_S1_RKT0_:
>     #####:  724:    fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
>         -:  725:    {
>         -:  726:      // concept requirements
>         -:  727:      __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
>         -:  728:				  _ForwardIterator>)
>         -:  729:      __glibcxx_requires_valid_range(__first, __last);
>         -:  730:
>     #####:  731:      std::__fill_a(std::__niter_base(__first), std::__niter_base(__last),
>         -:  732:		    __value);
>     #####:  733:    }
> ------------------
> _ZSt4fillIPccEvT_S1_RKT0_:
>     #####:  724:    fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
>         -:  725:    {
>         -:  726:      // concept requirements
>         -:  727:      __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
>         -:  728:				  _ForwardIterator>)
>         -:  729:      __glibcxx_requires_valid_range(__first, __last);
>         -:  730:
>     #####:  731:      std::__fill_a(std::__niter_base(__first), std::__niter_base(__last),
>         -:  732:		    __value);
>     #####:  733:    }
> ------------------
> _ZSt4fillIPddEvT_S1_RKT0_:
2145c1719
< _ZSt4fillIPN7OpenDDS4DCPS6GUID_tES2_EvT_S4_RKT0_:
---
> _ZSt4fillIPffEvT_S1_RKT0_:
2157c1731
< _ZSt4fillIPN7OpenDDS4DCPS6GUID_tES2_EvT_S4_RKT0_:
---
> _ZSt4fillIPeeEvT_S1_RKT0_:
2169c1743
< _ZSt4fillIPN7OpenDDS4DCPS16TransportLocatorES2_EvT_S4_RKT0_:
---
> _ZSt4fillIPllEvT_S1_RKT0_:
2181c1755,1803
< _ZSt4fillIPN7OpenDDS4DCPS16TransportLocatorES2_EvT_S4_RKT0_:
---
> _ZSt4fillIPiiEvT_S1_RKT0_:
>     #####:  724:    fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
>         -:  725:    {
>         -:  726:      // concept requirements
>         -:  727:      __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
>         -:  728:				  _ForwardIterator>)
>         -:  729:      __glibcxx_requires_valid_range(__first, __last);
>         -:  730:
>     #####:  731:      std::__fill_a(std::__niter_base(__first), std::__niter_base(__last),
>         -:  732:		    __value);
>     #####:  733:    }
> ------------------
> _ZSt4fillIPssEvT_S1_RKT0_:
>     #####:  724:    fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
>         -:  725:    {
>         -:  726:      // concept requirements
>         -:  727:      __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
>         -:  728:				  _ForwardIterator>)
>         -:  729:      __glibcxx_requires_valid_range(__first, __last);
>         -:  730:
>     #####:  731:      std::__fill_a(std::__niter_base(__first), std::__niter_base(__last),
>         -:  732:		    __value);
>     #####:  733:    }
> ------------------
> _ZSt4fillIPmmEvT_S1_RKT0_:
>     #####:  724:    fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
>         -:  725:    {
>         -:  726:      // concept requirements
>         -:  727:      __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
>         -:  728:				  _ForwardIterator>)
>         -:  729:      __glibcxx_requires_valid_range(__first, __last);
>         -:  730:
>     #####:  731:      std::__fill_a(std::__niter_base(__first), std::__niter_base(__last),
>         -:  732:		    __value);
>     #####:  733:    }
> ------------------
> _ZSt4fillIPjjEvT_S1_RKT0_:
>       457:  724:    fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
>         -:  725:    {
>         -:  726:      // concept requirements
>         -:  727:      __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
>         -:  728:				  _ForwardIterator>)
>         -:  729:      __glibcxx_requires_valid_range(__first, __last);
>         -:  730:
>       457:  731:      std::__fill_a(std::__niter_base(__first), std::__niter_base(__last),
>         -:  732:		    __value);
>       457:  733:    }
> ------------------
> _ZSt4fillIPttEvT_S1_RKT0_:
2193c1815
< _ZSt4fillIPN7OpenDDS4DCPS6GUID_tES2_EvT_S4_RKT0_:
---
> _ZSt4fillIPwwEvT_S1_RKT0_:
