261c261
<     #####:  259:static unsigned int psk_server_callback(SSL *ssl, const char *identity, unsigned char *psk, unsigned int max_psk_len)
---
>         -:  259:static unsigned int psk_server_callback(SSL *ssl, const char *identity, unsigned char *psk, unsigned int max_psk_len)
266c266
<     #####:  264:	char *psk_key = NULL;
---
>         -:  264:	char *psk_key = NULL;
270c270
<     #####:  268:	if(!identity) return 0;
---
>         -:  268:	if(!identity) return 0;
272c272
<     #####:  270:	db = mosquitto__get_db();
---
>         -:  270:	db = mosquitto__get_db();
274,275c274,275
<     #####:  272:	context = SSL_get_ex_data(ssl, tls_ex_index_context);
<     #####:  273:	if(!context) return 0;
---
>         -:  272:	context = SSL_get_ex_data(ssl, tls_ex_index_context);
>         -:  273:	if(!context) return 0;
277,278c277,278
<     #####:  275:	listener = SSL_get_ex_data(ssl, tls_ex_index_listener);
<     #####:  276:	if(!listener) return 0;
---
>         -:  275:	listener = SSL_get_ex_data(ssl, tls_ex_index_listener);
>         -:  276:	if(!listener) return 0;
280c280
<     #####:  278:	psk_hint = listener->psk_hint;
---
>         -:  278:	psk_hint = listener->psk_hint;
284,285c284,285
<     #####:  282:	psk_key = mosquitto__calloc(1, max_psk_len*2 + 1);
<     #####:  283:	if(!psk_key) return 0;
---
>         -:  282:	psk_key = mosquitto__calloc(1, max_psk_len*2 + 1);
>         -:  283:	if(!psk_key) return 0;
287,289c287,289
<     #####:  285:	if(mosquitto_psk_key_get(db, context, psk_hint, identity, psk_key, max_psk_len*2) != MOSQ_ERR_SUCCESS){
<     #####:  286:		mosquitto__free(psk_key);
<     #####:  287:		return 0;
---
>         -:  285:	if(mosquitto_psk_key_get(db, context, psk_hint, identity, psk_key, max_psk_len*2) != MOSQ_ERR_SUCCESS){
>         -:  286:		mosquitto__free(psk_key);
>         -:  287:		return 0;
292,295c292,295
<     #####:  290:	len = mosquitto__hex2bin(psk_key, psk, max_psk_len);
<     #####:  291:	if (len < 0){
<     #####:  292:		mosquitto__free(psk_key);
<     #####:  293:		return 0;
---
>         -:  290:	len = mosquitto__hex2bin(psk_key, psk, max_psk_len);
>         -:  291:	if (len < 0){
>         -:  292:		mosquitto__free(psk_key);
>         -:  293:		return 0;
298,302c298,302
<     #####:  296:	if(listener->use_identity_as_username){
<     #####:  297:		context->username = mosquitto__strdup(identity);
<     #####:  298:		if(!context->username){
<     #####:  299:			mosquitto__free(psk_key);
<     #####:  300:			return 0;
---
>         -:  296:	if(listener->use_identity_as_username){
>         -:  297:		context->username = mosquitto__strdup(identity);
>         -:  298:		if(!context->username){
>         -:  299:			mosquitto__free(psk_key);
>         -:  300:			return 0;
306,307c306,307
<     #####:  304:	mosquitto__free(psk_key);
<     #####:  305:	return len;
---
>         -:  304:	mosquitto__free(psk_key);
>         -:  305:	return len;
534,536c534,536
<     #####:  532:		}else if(listener->psk_hint){
<     #####:  533:			if(tls_ex_index_context == -1){
<     #####:  534:				tls_ex_index_context = SSL_get_ex_new_index(0, "client context", NULL, NULL, NULL);
---
>         -:  532:		}else if(listener->psk_hint){
>         -:  533:			if(tls_ex_index_context == -1){
>         -:  534:				tls_ex_index_context = SSL_get_ex_new_index(0, "client context", NULL, NULL, NULL);
538,539c538,539
<     #####:  536:			if(tls_ex_index_listener == -1){
<     #####:  537:				tls_ex_index_listener = SSL_get_ex_new_index(0, "listener", NULL, NULL, NULL);
---
>         -:  536:			if(tls_ex_index_listener == -1){
>         -:  537:				tls_ex_index_listener = SSL_get_ex_new_index(0, "listener", NULL, NULL, NULL);
542,544c542,544
<     #####:  540:			if(mosquitto__tls_server_ctx(listener)){
<     #####:  541:				COMPAT_CLOSE(sock);
<     #####:  542:				return 1;
---
>         -:  540:			if(mosquitto__tls_server_ctx(listener)){
>         -:  541:				COMPAT_CLOSE(sock);
>         -:  542:				return 1;
546,553c546,553
<     #####:  544:			SSL_CTX_set_psk_server_callback(listener->ssl_ctx, psk_server_callback);
<     #####:  545:			if(listener->psk_hint){
<     #####:  546:				rc = SSL_CTX_use_psk_identity_hint(listener->ssl_ctx, listener->psk_hint);
<     #####:  547:				if(rc == 0){
<     #####:  548:					log__printf(NULL, MOSQ_LOG_ERR, "Error: Unable to set TLS PSK hint.");
<     #####:  549:					net__print_error(MOSQ_LOG_ERR, "Error: %s");
<     #####:  550:					COMPAT_CLOSE(sock);
<     #####:  551:					return 1;
---
>         -:  544:			SSL_CTX_set_psk_server_callback(listener->ssl_ctx, psk_server_callback);
>         -:  545:			if(listener->psk_hint){
>         -:  546:				rc = SSL_CTX_use_psk_identity_hint(listener->ssl_ctx, listener->psk_hint);
>         -:  547:				if(rc == 0){
>         -:  548:					log__printf(NULL, MOSQ_LOG_ERR, "Error: Unable to set TLS PSK hint.");
>         -:  549:					net__print_error(MOSQ_LOG_ERR, "Error: %s");
>         -:  550:					COMPAT_CLOSE(sock);
>         -:  551:					return 1;
