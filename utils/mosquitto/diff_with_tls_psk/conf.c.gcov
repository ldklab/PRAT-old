351,352c351,352
<     #####:  349:			mosquitto__free(config->bridges[i].tls_psk_identity);
<     #####:  350:			mosquitto__free(config->bridges[i].tls_psk);
---
>         -:  349:			mosquitto__free(config->bridges[i].tls_psk_identity);
>         -:  350:			mosquitto__free(config->bridges[i].tls_psk);
699,701c699,701
<     #####:  697:		if(config->bridges[i].tls_psk && !config->bridges[i].tls_psk_identity){
<     #####:  698:			log__printf(NULL, MOSQ_LOG_ERR, "Error: Invalid bridge configuration: missing bridge_identity.\n");
<     #####:  699:			return MOSQ_ERR_INVAL;
---
>         -:  697:		if(config->bridges[i].tls_psk && !config->bridges[i].tls_psk_identity){
>         -:  698:			log__printf(NULL, MOSQ_LOG_ERR, "Error: Invalid bridge configuration: missing bridge_identity.\n");
>         -:  699:			return MOSQ_ERR_INVAL;
703,705c703,705
<     #####:  701:		if(config->bridges[i].tls_psk_identity && !config->bridges[i].tls_psk){
<     #####:  702:			log__printf(NULL, MOSQ_LOG_ERR, "Error: Invalid bridge configuration: missing bridge_psk.\n");
<     #####:  703:			return MOSQ_ERR_INVAL;
---
>         -:  701:		if(config->bridges[i].tls_psk_identity && !config->bridges[i].tls_psk){
>         -:  702:			log__printf(NULL, MOSQ_LOG_ERR, "Error: Invalid bridge configuration: missing bridge_psk.\n");
>         -:  703:			return MOSQ_ERR_INVAL;
926,928c926,928
<     #####:  924:					if(cur_bridge->tls_psk_identity || cur_bridge->tls_psk){
<     #####:  925:						log__printf(NULL, MOSQ_LOG_ERR, "Error: Cannot use both certificate and psk encryption in a single bridge.");
<     #####:  926:						return MOSQ_ERR_INVAL;
---
>         -:  924:					if(cur_bridge->tls_psk_identity || cur_bridge->tls_psk){
>         -:  925:						log__printf(NULL, MOSQ_LOG_ERR, "Error: Cannot use both certificate and psk encryption in a single bridge.");
>         -:  926:						return MOSQ_ERR_INVAL;
943,945c943,945
<     #####:  941:					if(cur_bridge->tls_psk_identity || cur_bridge->tls_psk){
<     #####:  942:						log__printf(NULL, MOSQ_LOG_ERR, "Error: Cannot use both certificate and psk encryption in a single bridge.");
<     #####:  943:						return MOSQ_ERR_INVAL;
---
>         -:  941:					if(cur_bridge->tls_psk_identity || cur_bridge->tls_psk){
>         -:  942:						log__printf(NULL, MOSQ_LOG_ERR, "Error: Cannot use both certificate and psk encryption in a single bridge.");
>         -:  943:						return MOSQ_ERR_INVAL;
960,962c960,962
<     #####:  958:					if(cur_bridge->tls_psk_identity || cur_bridge->tls_psk){
<     #####:  959:						log__printf(NULL, MOSQ_LOG_ERR, "Error: Cannot use both certificate and psk encryption in a single bridge.");
<     #####:  960:						return MOSQ_ERR_INVAL;
---
>         -:  958:					if(cur_bridge->tls_psk_identity || cur_bridge->tls_psk){
>         -:  959:						log__printf(NULL, MOSQ_LOG_ERR, "Error: Cannot use both certificate and psk encryption in a single bridge.");
>         -:  960:						return MOSQ_ERR_INVAL;
971,974c971,974
<     #####:  969:					if(reload) continue; // FIXME
<     #####:  970:					if(!cur_bridge){
<     #####:  971:						log__printf(NULL, MOSQ_LOG_ERR, "Error: Invalid bridge configuration.");
<     #####:  972:						return MOSQ_ERR_INVAL;
---
>         -:  969:					if(reload) continue; // FIXME
>         -:  970:					if(!cur_bridge){
>         -:  971:						log__printf(NULL, MOSQ_LOG_ERR, "Error: Invalid bridge configuration.");
>         -:  972:						return MOSQ_ERR_INVAL;
976,978c976,978
<     #####:  974:					if(cur_bridge->tls_cafile || cur_bridge->tls_capath || cur_bridge->tls_certfile || cur_bridge->tls_keyfile){
<     #####:  975:						log__printf(NULL, MOSQ_LOG_ERR, "Error: Cannot use both certificate and identity encryption in a single bridge.");
<     #####:  976:						return MOSQ_ERR_INVAL;
---
>         -:  974:					if(cur_bridge->tls_cafile || cur_bridge->tls_capath || cur_bridge->tls_certfile || cur_bridge->tls_keyfile){
>         -:  975:						log__printf(NULL, MOSQ_LOG_ERR, "Error: Cannot use both certificate and identity encryption in a single bridge.");
>         -:  976:						return MOSQ_ERR_INVAL;
980c980
<     #####:  978:					if(conf__parse_string(&token, "bridge_identity", &cur_bridge->tls_psk_identity, saveptr)) return MOSQ_ERR_INVAL;
---
>         -:  978:					if(conf__parse_string(&token, "bridge_identity", &cur_bridge->tls_psk_identity, saveptr)) return MOSQ_ERR_INVAL;
982c982
<         -:  980:					log__printf(NULL, MOSQ_LOG_WARNING, "Warning: Bridge and/or TLS-PSK support not available.");
---
>     #####:  980:					log__printf(NULL, MOSQ_LOG_WARNING, "Warning: Bridge and/or TLS-PSK support not available.");
1006,1008c1006,1008
<     #####: 1004:					if(cur_bridge->tls_psk_identity || cur_bridge->tls_psk){
<     #####: 1005:						log__printf(NULL, MOSQ_LOG_ERR, "Error: Cannot use both certificate and psk encryption in a single bridge.");
<     #####: 1006:						return MOSQ_ERR_INVAL;
---
>         -: 1004:					if(cur_bridge->tls_psk_identity || cur_bridge->tls_psk){
>         -: 1005:						log__printf(NULL, MOSQ_LOG_ERR, "Error: Cannot use both certificate and psk encryption in a single bridge.");
>         -: 1006:						return MOSQ_ERR_INVAL;
1041,1044c1041,1044
<     #####: 1039:					if(reload) continue; // FIXME
<     #####: 1040:					if(!cur_bridge){
<     #####: 1041:						log__printf(NULL, MOSQ_LOG_ERR, "Error: Invalid bridge configuration.");
<     #####: 1042:						return MOSQ_ERR_INVAL;
---
>         -: 1039:					if(reload) continue; // FIXME
>         -: 1040:					if(!cur_bridge){
>         -: 1041:						log__printf(NULL, MOSQ_LOG_ERR, "Error: Invalid bridge configuration.");
>         -: 1042:						return MOSQ_ERR_INVAL;
1046,1048c1046,1048
<     #####: 1044:					if(cur_bridge->tls_cafile || cur_bridge->tls_capath || cur_bridge->tls_certfile || cur_bridge->tls_keyfile){
<     #####: 1045:						log__printf(NULL, MOSQ_LOG_ERR, "Error: Cannot use both certificate and psk encryption in a single bridge.");
<     #####: 1046:						return MOSQ_ERR_INVAL;
---
>         -: 1044:					if(cur_bridge->tls_cafile || cur_bridge->tls_capath || cur_bridge->tls_certfile || cur_bridge->tls_keyfile){
>         -: 1045:						log__printf(NULL, MOSQ_LOG_ERR, "Error: Cannot use both certificate and psk encryption in a single bridge.");
>         -: 1046:						return MOSQ_ERR_INVAL;
1050c1050
<     #####: 1048:					if(conf__parse_string(&token, "bridge_psk", &cur_bridge->tls_psk, saveptr)) return MOSQ_ERR_INVAL;
---
>         -: 1048:					if(conf__parse_string(&token, "bridge_psk", &cur_bridge->tls_psk, saveptr)) return MOSQ_ERR_INVAL;
1052c1052
<         -: 1050:					log__printf(NULL, MOSQ_LOG_WARNING, "Warning: Bridge and/or TLS-PSK support not available.");
---
>     #####: 1050:					log__printf(NULL, MOSQ_LOG_WARNING, "Warning: Bridge and/or TLS-PSK support not available.");
1664,1667c1664,1667
<     #####: 1662:					conf__set_cur_security_options(config, cur_listener, &cur_security_options);
<     #####: 1663:					if(reload){
<     #####: 1664:						mosquitto__free(cur_security_options->psk_file);
<     #####: 1665:						cur_security_options->psk_file = NULL;
---
>         -: 1662:					conf__set_cur_security_options(config, cur_listener, &cur_security_options);
>         -: 1663:					if(reload){
>         -: 1664:						mosquitto__free(cur_security_options->psk_file);
>         -: 1665:						cur_security_options->psk_file = NULL;
1669c1669
<     #####: 1667:					if(conf__parse_string(&token, "psk_file", &cur_security_options->psk_file, saveptr)) return MOSQ_ERR_INVAL;
---
>         -: 1667:					if(conf__parse_string(&token, "psk_file", &cur_security_options->psk_file, saveptr)) return MOSQ_ERR_INVAL;
1671c1671
<         -: 1669:					log__printf(NULL, MOSQ_LOG_WARNING, "Warning: TLS/TLS-PSK support not available.");
---
>     #####: 1669:					log__printf(NULL, MOSQ_LOG_WARNING, "Warning: TLS/TLS-PSK support not available.");
1675,1676c1675,1676
<     #####: 1673:					if(reload) continue; // Listeners not valid for reloading.
<     #####: 1674:					if(conf__parse_string(&token, "psk_hint", &cur_listener->psk_hint, saveptr)) return MOSQ_ERR_INVAL;
---
>         -: 1673:					if(reload) continue; // Listeners not valid for reloading.
>         -: 1674:					if(conf__parse_string(&token, "psk_hint", &cur_listener->psk_hint, saveptr)) return MOSQ_ERR_INVAL;
1678c1678
<         -: 1676:					log__printf(NULL, MOSQ_LOG_WARNING, "Warning: TLS/TLS-PSK support not available.");
---
>     #####: 1676:					log__printf(NULL, MOSQ_LOG_WARNING, "Warning: TLS/TLS-PSK support not available.");
