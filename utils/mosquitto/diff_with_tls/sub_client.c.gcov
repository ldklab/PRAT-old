158,159c158,159
<     #####:  156:	printf("                     [{--cafile file | --capath dir} [--cert file] [--key file]\n");
<     #####:  157:	printf("                      [--ciphers ciphers] [--insecure]]\n");
---
>         -:  156:	printf("                     [{--cafile file | --capath dir} [--cert file] [--key file]\n");
>         -:  157:	printf("                      [--ciphers ciphers] [--insecure]]\n");
161c161
<     #####:  159:	printf("                     [--psk hex-key --psk-identity identity [--ciphers ciphers]]\n");
---
>         -:  159:	printf("                     [--psk hex-key --psk-identity identity [--ciphers ciphers]]\n");
210,222c210,222
<     #####:  208:	printf(" --cafile : path to a file containing trusted CA certificates to enable encrypted\n");
<     #####:  209:	printf("            certificate based communication.\n");
<     #####:  210:	printf(" --capath : path to a directory containing trusted CA certificates to enable encrypted\n");
<     #####:  211:	printf("            communication.\n");
<     #####:  212:	printf(" --cert : client certificate for authentication, if required by server.\n");
<     #####:  213:	printf(" --key : client private key for authentication, if required by server.\n");
<     #####:  214:	printf(" --ciphers : openssl compatible list of TLS ciphers to support.\n");
<     #####:  215:	printf(" --tls-version : TLS protocol version, can be one of tlsv1.2 tlsv1.1 or tlsv1.\n");
<     #####:  216:	printf("                 Defaults to tlsv1.2 if available.\n");
<     #####:  217:	printf(" --insecure : do not check that the server certificate hostname matches the remote\n");
<     #####:  218:	printf("              hostname. Using this option means that you cannot be sure that the\n");
<     #####:  219:	printf("              remote host is the server you wish to connect to and so is insecure.\n");
<     #####:  220:	printf("              Do not use this option in a production environment.\n");
---
>         -:  208:	printf(" --cafile : path to a file containing trusted CA certificates to enable encrypted\n");
>         -:  209:	printf("            certificate based communication.\n");
>         -:  210:	printf(" --capath : path to a directory containing trusted CA certificates to enable encrypted\n");
>         -:  211:	printf("            communication.\n");
>         -:  212:	printf(" --cert : client certificate for authentication, if required by server.\n");
>         -:  213:	printf(" --key : client private key for authentication, if required by server.\n");
>         -:  214:	printf(" --ciphers : openssl compatible list of TLS ciphers to support.\n");
>         -:  215:	printf(" --tls-version : TLS protocol version, can be one of tlsv1.2 tlsv1.1 or tlsv1.\n");
>         -:  216:	printf("                 Defaults to tlsv1.2 if available.\n");
>         -:  217:	printf(" --insecure : do not check that the server certificate hostname matches the remote\n");
>         -:  218:	printf("              hostname. Using this option means that you cannot be sure that the\n");
>         -:  219:	printf("              remote host is the server you wish to connect to and so is insecure.\n");
>         -:  220:	printf("              Do not use this option in a production environment.\n");
224,225c224,225
<     #####:  222:	printf(" --psk : pre-shared-key in hexadecimal (no leading 0x) to enable TLS-PSK mode.\n");
<     #####:  223:	printf(" --psk-identity : client identity string for TLS-PSK mode.\n");
---
>         -:  222:	printf(" --psk : pre-shared-key in hexadecimal (no leading 0x) to enable TLS-PSK mode.\n");
>         -:  223:	printf(" --psk-identity : client identity string for TLS-PSK mode.\n");
