Gadgets information
============================================================
0x0000000100005ec8 : adc al, 0x88 ; add rdx, rax ; jmp rdx
0x0000000100011d07 : adc al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x75 ; ret 0xfe83
0x0000000100004ef0 : adc al, ch ; retf 0xfe
0x0000000100011a10 : adc byte ptr [r15 + rcx - 0x4a], al ; ret
0x0000000100023997 : adc byte ptr [rax + 0x2b], cl ; and byte ptr [rax + 1], r9b ; retf 0x8b48
0x0000000100013f74 : adc byte ptr [rax - 0x75000000], 0x78 ; and al, ch ; retf
0x0000000100011e46 : adc byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rdi], 1 ; mov dh, 0x4d ; ret 0xf44
0x000000010001764c : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000010001e8ea : adc byte ptr [rbx + 0x634801c2], al ; ret 0x8348
0x000000010001b6c3 : adc byte ptr [rbx + 0x634801c2], al ; retf 0x8348
0x000000010000c2ac : adc byte ptr [rbx - 0x157cc7af], cl ; add dword ptr [rax + 0x63], ecx ; retf 0x8348
0x000000010000c23a : adc byte ptr [rbx - 0x3d7cc7af], cl ; add dword ptr [rax + 0x63], ecx ; retf 0xc148
0x000000010001e6f4 : adc byte ptr [rcx - 0x7d], al ; ret 0x4401
0x0000000100025ed6 : adc byte ptr [rdi + rcx - 0x49], al ; retf 0x8b4c
0x0000000100011a11 : adc byte ptr [rdi + rcx - 0x4a], al ; ret
0x0000000100016538 : adc eax, 0x141f4 ; mov al, 0 ; call 0x100012fa9
0x0000000100006d08 : adc eax, 0x24764 ; mov al, 0 ; call 0x100012fa9
0x0000000100006d36 : adc eax, 0x2477d ; mov al, 0 ; call 0x100012fa9
0x00000001000064b8 : adc eax, 0x24ce9 ; mov al, 0 ; call 0x100012fa9
0x0000000100025e5a : add al, 0 ; add byte ptr [rsi - 0x77], ah ; retf 0x8348
0x00000001000183de : add al, 0x5d ; ret
0x0000000100014158 : add al, 0x83 ; retf 0x6604
0x00000001000170d1 : add al, 0x89 ; retf 0xb0
0x000000010001802b : add al, byte ptr [rax] ; add al, ch ; retf
0x0000000100006d0b : add al, byte ptr [rax] ; mov al, 0 ; call 0x100012fa6
0x000000010000dbb8 : add al, byte ptr [rax] ; pop rbp ; ret
0x0000000100006d3c : add al, ch ; pop rsi ; ret 0
0x000000010000653e : add al, ch ; pop rsp ; retf 0
0x000000010001653e : add al, ch ; pop rsp ; retf 0xffff
0x00000001000066f7 : add al, ch ; ret
0x0000000100008bf8 : add al, ch ; ret 0x215
0x00000001000073d8 : add al, ch ; ret 0xbb
0x0000000100003dd8 : add al, ch ; ret 0xf1
0x00000001000213d8 : add al, ch ; ret 0xff1b
0x000000010000cbcf : add al, ch ; retf
0x0000000100012428 : add al, ch ; retf 0x17b
0x00000001000066d0 : add al, ch ; retf 0xc8
0x00000001000053d0 : add al, ch ; retf 0xdb
0x00000001000048d0 : add al, ch ; retf 0xe6
0x00000001000041d0 : add al, ch ; retf 0xed
0x0000000100011d04 : add al, ch ; xchg eax, esi ; adc al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x75 ; ret 0xfe83
0x000000010000f93f : add byte ptr [rax + 0x2b], cl ; and byte ptr [rax + 1], r9b ; retf 0x8948
0x00000001000096f2 : add byte ptr [rax + 0x2b], cl ; and byte ptr [rax + 1], r9b ; retf 0x8b48
0x000000010000ffd8 : add byte ptr [rax + 0xf00a47d], al ; xchg eax, ebp ; ret 0x8b48
0x0000000100010050 : add byte ptr [rax - 0x77], cl ; ret 0xa7e8
0x0000000100010036 : add byte ptr [rax - 0x77], cl ; ret 0xc1e8
0x000000010002542b : add byte ptr [rax - 0x7d], cl ; jge 0x100025401 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x00000001000259f1 : add byte ptr [rax - 0x7d], cl ; jge 0x1000259ef ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x00000001000040a9 : add byte ptr [rax - 0x7d], cl ; ret 0x4834
0x000000010000415d : add byte ptr [rax - 0x7d], cl ; ret 0x4835
0x00000001000046cc : add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x0000000100016f33 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000100012426 : add byte ptr [rax], al ; add al, ch ; retf 0x17b
0x000000010000ffd6 : add byte ptr [rax], al ; add byte ptr [rax + 0xf00a47d], al ; xchg eax, ebp ; ret 0x8b48
0x000000010001004e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xa7e8
0x0000000100010034 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc1e8
0x000000010000b2b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret 1
0x000000010000b758 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000010000234a : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000001000153ac : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000100026463 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000010000b87a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000001000168bc : add byte ptr [rax], al ; add byte ptr [rax], al ; push rbp ; mov rbp, rsp ; pop rbp ; ret
0x00000001000168bd : add byte ptr [rax], al ; add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; pop rbp ; ret
0x0000000100028d65 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4d], cl ; retf
0x000000010001702f : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000010000ca12 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000100008b34 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000010001af90 : add byte ptr [rax], al ; add byte ptr [rbx + 0x634801c2], al ; retf 0xc148
0x00000001000029e5 : add byte ptr [rax], al ; add byte ptr [rbx + 0x634801ea], al ; retf 0x6948
0x000000010001836f : add byte ptr [rax], al ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x000000010000ae7e : add byte ptr [rax], al ; add byte ptr [rcx], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000100025e69 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x45 ; retf 0x8b48
0x0000000100011f9d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x45 ; ret 0xc085
0x000000010001f0fc : add byte ptr [rax], al ; add byte ptr [rsi - 0x39], ah ; retf 0
0x000000010000e7b5 : add byte ptr [rax], al ; add cl, ch ; jmp qword ptr [rdi]
0x000000010000e52d : add byte ptr [rax], al ; add cl, ch ; ret
0x000000010001f07a : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000010000b2b2 : add byte ptr [rax], al ; add cl, ch ; ret 1
0x000000010000c081 : add byte ptr [rax], al ; add cl, ch ; retf 2
0x000000010001fdd5 : add byte ptr [rax], al ; add rcx, rdx ; mov edx, dword ptr [rcx + 0x10] ; call rax
0x00000001000039c7 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000100001d6c : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000010000abb2 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000001000153ae : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000010000aa2e : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000100018370 : add byte ptr [rax], al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000010001dd06 : add byte ptr [rax], al ; call 0x100029ffc
0x00000001000070a8 : add byte ptr [rax], al ; jmp 0x100003b91
0x0000000100011ebb : add byte ptr [rax], al ; jmp 0x100011f6a
0x0000000100018027 : add byte ptr [rax], al ; jmp 0x100018335
0x000000010002a459 : add byte ptr [rax], al ; jmp 0x10002a228
0x0000000100025cc9 : add byte ptr [rax], al ; mov dword ptr [rbp - 4], edi ; mov byte ptr [rax], 1 ; pop rbp ; ret
0x000000010000cf60 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000010001dd01 : add byte ptr [rax], al ; mov edx, 0x2ea ; call 0x10002a001
0x000000010000328f : add byte ptr [rax], al ; pop rbp ; ret
0x0000000100017030 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000010000ca13 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000100008b35 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000001000168be : add byte ptr [rax], al ; push rbp ; mov rbp, rsp ; pop rbp ; ret
0x000000010000b137 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000010000d2c2 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000000100025cff : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x00000001000168bf : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; pop rbp ; ret
0x0000000100028d67 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; retf
0x0000000100017031 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000010000ca14 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000100008b36 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000010001af92 : add byte ptr [rbx + 0x634801c2], al ; retf 0xc148
0x00000001000029e7 : add byte ptr [rbx + 0x634801ea], al ; retf 0x6948
0x0000000100003d94 : add byte ptr [rbx - 0x7af0ff08], al ; retf 2
0x00000001000260f9 : add byte ptr [rcx + 0xb8ec45], cl ; retf 0x3b9a
0x000000010000c7ac : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000100018371 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x000000010000ae80 : add byte ptr [rcx], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000100025ccf : add byte ptr [rcx], al ; pop rbp ; ret
0x000000010000d2c3 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x0000000100025e6b : add byte ptr [rdi], cl ; mov bh, 0x45 ; retf 0x8b48
0x0000000100011f9f : add byte ptr [rdi], cl ; mov dh, 0x45 ; ret 0xc085
0x0000000100011884 : add byte ptr [rdi], cl ; mov dh, 0x45 ; ret 0xf883
0x0000000100011d09 : add byte ptr [rdi], cl ; mov dh, 0x75 ; ret 0xfe83
0x000000010000c85b : add byte ptr [rdi], cl ; retf 0x4d89
0x0000000100011a84 : add byte ptr [rdi], cl ; retf 0x8d89
0x000000010001a9c7 : add byte ptr [rdi], cl ; test dword ptr [rip - 0x17000000], eax ; retf 2
0x000000010000c51f : add byte ptr [rdi], cl ; test dword ptr [rip - 0x76000000], ecx ; retf
0x000000010000c505 : add byte ptr [rdi], cl ; test dword ptr [rip - 0x76000000], ecx ; retf 0x124
0x0000000100008e16 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000010000fd9a : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x0000000100011ee2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b4c
0x000000010001dd02 : add byte ptr [rdx + 0x2ea], bh ; call 0x10002a000
0x000000010001f0fe : add byte ptr [rsi - 0x39], ah ; retf 0
0x000000010001f0f5 : add byte ptr [rsi - 0x77], ah ; retf 0x6e9
0x0000000100025e5c : add byte ptr [rsi - 0x77], ah ; retf 0x8348
0x000000010000e7b7 : add cl, ch ; jmp qword ptr [rdi]
0x000000010000e52f : add cl, ch ; ret
0x000000010001f07c : add cl, ch ; ret 0
0x000000010000b2b4 : add cl, ch ; ret 1
0x000000010002a450 : add cl, ch ; retf 0xfffd
0x000000010000c083 : add cl, ch ; retf 2
0x000000010001653a : add dword ptr [r8], eax ; mov al, 0 ; call 0x100012fa7
0x000000010001abcb : add dword ptr [rax + 0x63], ecx ; ret 0x8348
0x00000001000029ea : add dword ptr [rax + 0x63], ecx ; retf 0x6948
0x0000000100007828 : add dword ptr [rax + 0x63], ecx ; retf 0x6b48
0x000000010000c2b2 : add dword ptr [rax + 0x63], ecx ; retf 0x8348
0x000000010000c240 : add dword ptr [rax + 0x63], ecx ; retf 0xc148
0x00000001000203ea : add dword ptr [rax + rcx*4 + 0x55], eax ; retf
0x00000001000259e5 : add dword ptr [rax + rcx*4 + 0x55], eax ; retf 0xc748
0x00000001000259dd : add dword ptr [rax + rcx*4 + 0x5d], eax ; retf
0x000000010000f93d : add dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; and byte ptr [rax + 1], r9b ; retf 0x8948
0x00000001000096f0 : add dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; and byte ptr [rax + 1], r9b ; retf 0x8b48
0x000000010000cf5e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000100012116 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000100011295 : add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000100017270 : add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000010001653b : add dword ptr [rax], eax ; mov al, 0 ; call 0x100012fa6
0x0000000100014d81 : add dword ptr [rax], eax ; pop rbp ; ret
0x00000001000200dc : add dword ptr [rcx + 0xf], eax ; mov dh, 0xc8 ; call rax
0x0000000100011ef6 : add dword ptr [rdi + rcx - 0x4a], eax ; retf 0xc931
0x0000000100011deb : add dword ptr [rdi], ecx ; mov dh, 0x45 ; ret 0xc085
0x000000010000c425 : add dword ptr [rdi], ecx ; mov dh, 0xc0 ; pop rbp ; ret
0x000000010001726f : add dword ptr cs:[rax], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000100011294 : add dword ptr ss:[rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000100014e76 : add eax, 0x194e5 ; pop rbp ; ret
0x000000010001a9ca : add eax, 0xe9000000 ; retf 2
0x000000010002a44e : add eax, dword ptr [rax] ; add cl, ch ; retf 0xfffd
0x0000000100013ca4 : add ecx, dword ptr [rax - 0x77] ; ret 0x63e8
0x000000010001fdd8 : add ecx, edx ; mov edx, dword ptr [rcx + 0x10] ; call rax
0x0000000100005ecb : add edx, eax ; jmp rdx
0x000000010001fe6c : add edx, esi ; mov edx, dword ptr [rdx + 0x10] ; mov rsi, rcx ; call rax
0x00000001000039ca : add esp, 0x10 ; pop rbp ; ret
0x00000001000148dd : add esp, 0x140 ; pop rbp ; ret
0x0000000100003706 : add esp, 0x170 ; pop rbp ; ret
0x0000000100013a70 : add esp, 0x1a0 ; pop rbp ; ret
0x000000010001313a : add esp, 0x1b0 ; pop rbp ; ret
0x000000010000328b : add esp, 0x1f0 ; pop rbp ; ret
0x00000001000019cf : add esp, 0x20 ; pop rbp ; ret
0x000000010001f148 : add esp, 0x230 ; pop rbp ; ret
0x000000010000abb5 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000100015f10 : add esp, 0x2b0 ; pop rbp ; ret
0x000000010000336b : add esp, 0x30 ; pop rbp ; ret
0x00000001000085cb : add esp, 0x390 ; pop rbp ; ret
0x000000010000875d : add esp, 0x40 ; pop rbp ; ret
0x0000000100021697 : add esp, 0x4a0 ; pop rbp ; ret
0x000000010000a547 : add esp, 0x4b0 ; pop rbp ; ret
0x000000010000896d : add esp, 0x50 ; pop rbp ; ret
0x0000000100002dd9 : add esp, 0x60 ; pop rbp ; ret
0x000000010000e4bc : add esp, 0x70 ; pop rbp ; ret
0x000000010000c357 : add esp, 0x80 ; pop rbp ; ret
0x0000000100003b11 : add esp, 0x90 ; pop rbp ; ret
0x000000010000db45 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000100012aed : add esp, 0xa0 ; pop rbp ; ret
0x0000000100016892 : add esp, 0xb0 ; pop rbp ; ret
0x0000000100008b31 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000010000e2dd : add esp, 0xc0 ; pop rbp ; ret
0x00000001000137a4 : add esp, 0xe0 ; pop rbp ; ret
0x0000000100028a1b : add esp, 0xf0 ; pop rbp ; ret
0x0000000100006d0a : add r8b, byte ptr [r8] ; mov al, 0 ; call 0x100012fa7
0x00000001000064ba : add r8b, byte ptr [rax] ; mov al, 0 ; call 0x100012fa7
0x0000000100006d09 : add r8b, byte ptr fs:[r8] ; mov al, 0 ; call 0x100012fa8
0x000000010001fdd7 : add rcx, rdx ; mov edx, dword ptr [rcx + 0x10] ; call rax
0x0000000100005eca : add rdx, rax ; jmp rdx
0x000000010001fe6b : add rdx, rsi ; mov edx, dword ptr [rdx + 0x10] ; mov rsi, rcx ; call rax
0x00000001000039c9 : add rsp, 0x10 ; pop rbp ; ret
0x00000001000148dc : add rsp, 0x140 ; pop rbp ; ret
0x0000000100003705 : add rsp, 0x170 ; pop rbp ; ret
0x0000000100013a6f : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000100013139 : add rsp, 0x1b0 ; pop rbp ; ret
0x000000010000328a : add rsp, 0x1f0 ; pop rbp ; ret
0x00000001000019ce : add rsp, 0x20 ; pop rbp ; ret
0x000000010001f147 : add rsp, 0x230 ; pop rbp ; ret
0x000000010000abb4 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000100015f0f : add rsp, 0x2b0 ; pop rbp ; ret
0x000000010000336a : add rsp, 0x30 ; pop rbp ; ret
0x00000001000085ca : add rsp, 0x390 ; pop rbp ; ret
0x000000010000875c : add rsp, 0x40 ; pop rbp ; ret
0x0000000100021696 : add rsp, 0x4a0 ; pop rbp ; ret
0x000000010000a546 : add rsp, 0x4b0 ; pop rbp ; ret
0x000000010000896c : add rsp, 0x50 ; pop rbp ; ret
0x0000000100002dd8 : add rsp, 0x60 ; pop rbp ; ret
0x000000010000e4bb : add rsp, 0x70 ; pop rbp ; ret
0x000000010000c356 : add rsp, 0x80 ; pop rbp ; ret
0x0000000100003b10 : add rsp, 0x90 ; pop rbp ; ret
0x000000010000db44 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000100012aec : add rsp, 0xa0 ; pop rbp ; ret
0x0000000100016891 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000100008b30 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000010000e2dc : add rsp, 0xc0 ; pop rbp ; ret
0x00000001000137a3 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000100028a1a : add rsp, 0xf0 ; pop rbp ; ret
0x0000000100025ade : and al, 0x8a ; push rbp ; retf 0xe280
0x000000010000c424 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000001000200da : and al, 1 ; movzx ecx, r8b ; call rax
0x0000000100013f7b : and al, ch ; retf
0x000000010000f943 : and byte ptr [rax + 1], cl ; retf 0x8948
0x00000001000096f6 : and byte ptr [rax + 1], cl ; retf 0x8b48
0x000000010000f942 : and byte ptr [rax + 1], r9b ; retf 0x8948
0x00000001000096f5 : and byte ptr [rax + 1], r9b ; retf 0x8b48
0x0000000100020858 : and byte ptr [rax - 0x75], cl ; jne 0x100020846 ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x00000001000039c5 : and byte ptr [rcx], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000100001947 : and byte ptr [rcx], dh ; sar byte ptr [rcx + 0x188], 0x89 ; retf 0xc748
0x00000001000200d9 : and r8b, 1 ; movzx ecx, r8b ; call rax
0x0000000100006d0f : call 0x100012fa2
0x000000010001dd08 : call 0x100029ffa
0x00000001000032fc : call 0x10002a156
0x000000010000e8b7 : call 0x148c36c07
0x0000000100016aea : call 0xc14a357a
0x0000000100016ae9 : call 0xc14a357b
0x0000000100016b11 : call 0xc14a35a1
0x0000000100016b10 : call 0xc14a35a2
0x000000010001dc84 : call 0xe801dc91
0x000000010000b7bc : call 0xf046410f
0x000000010000b7bb : call 0xf0464110
0x000000010001a05f : call qword ptr [rax - 7]
0x0000000100006c36 : call qword ptr [rax]
0x000000010001b77f : call qword ptr [rbx]
0x000000010001a07f : call qword ptr [rdi]
0x000000010000a563 : call qword ptr [rdx]
0x0000000100029f03 : call qword ptr [rsi]
0x000000010001bebb : call rax
0x000000010001e437 : call rcx
0x000000010001b78f : call rdx
0x000000010001101b : call rsp
0x000000010001af8f : clc ; add byte ptr [rax], al ; add byte ptr [rbx + 0x634801c2], al ; retf 0xc148
0x000000010000c85a : clc ; add byte ptr [rdi], cl ; retf 0x4d89
0x0000000100011a83 : clc ; add byte ptr [rdi], cl ; retf 0x8d89
0x000000010001a036 : clc ; add rsp, 0x170 ; pop rbp ; ret
0x000000010001da34 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000010000875b : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000010001ea61 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000001000183fb : clc ; mov eax, dword ptr [rdi + 0xf8] ; pop rbp ; ret
0x00000001000183db : clc ; mov eax, dword ptr [rdi + 4] ; pop rbp ; ret
0x0000000100017119 : clc ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000010000b57d : clc ; mov qword ptr [rcx + 0x48], rax ; pop rbp ; ret
0x000000010000af2f : clc ; mov qword ptr [rcx + 0x88], rax ; pop rbp ; ret
0x0000000100014d7b : clc ; mov qword ptr [rip + 0x195c5], rdi ; pop rbp ; ret
0x000000010001844d : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000010001838b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000010001834b : clc ; mov rax, qword ptr [rdi + 8] ; pop rbp ; ret
0x00000001000183d7 : clc ; mov rdi, qword ptr [rbp - 8] ; mov eax, dword ptr [rdi + 4] ; pop rbp ; ret
0x00000001000166fd : clc ; movzx eax, ax ; pop rbp ; ret
0x00000001000183ab : clc ; movzx eax, word ptr [rdi + 0x28] ; pop rbp ; ret
0x00000001000183c9 : clc ; pop rbp ; ret
0x0000000100026462 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000010000cf5d : cld ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000100015f46 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000100003289 : cld ; add rsp, 0x1f0 ; pop rbp ; ret
0x000000010000b105 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000010001f146 : cld ; add rsp, 0x230 ; pop rbp ; ret
0x0000000100015f0e : cld ; add rsp, 0x2b0 ; pop rbp ; ret
0x0000000100008c81 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000001000085c9 : cld ; add rsp, 0x390 ; pop rbp ; ret
0x0000000100008ec4 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000010000896b : cld ; add rsp, 0x50 ; pop rbp ; ret
0x0000000100002dd7 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x000000010001f495 : cld ; add rsp, 0x70 ; pop rbp ; ret
0x000000010000c355 : cld ; add rsp, 0x80 ; pop rbp ; ret
0x0000000100003b0f : cld ; add rsp, 0x90 ; pop rbp ; ret
0x0000000100012aeb : cld ; add rsp, 0xa0 ; pop rbp ; ret
0x000000010001a8c0 : cld ; add rsp, 0xb0 ; pop rbp ; ret
0x000000010000e2db : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x00000001000137a2 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000100028a19 : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000100025ccd : cld ; mov byte ptr [rax], 1 ; pop rbp ; ret
0x0000000100025ced : cld ; mov dword ptr [rax], 0 ; pop rbp ; ret
0x0000000100012f90 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000001000248d9 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000100008ec1 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000100012e5f : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000100002dd4 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000010002053f : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000010000cf64 : cld ; pop rbp ; ret
0x000000010000c0aa : cmp al, 0x83 ; ret 0x8901
0x0000000100014ffc : cmp al, ch ; retf 0x151
0x0000000100023350 : cmp al, ch ; retf 0xffff
0x000000010001879b : cmp byte ptr [r8 - 0x75], cl ; fsub dword ptr [r14 - 0x77] ; ret 0x8b48
0x000000010001879c : cmp byte ptr [rax - 0x75], cl ; fsub dword ptr [r14 - 0x77] ; ret 0x8b48
0x000000010000c23d : cmp byte ptr [rbx + 0x634801c2], al ; retf 0xc148
0x0000000100007825 : cmp byte ptr [rbx + 0x634801ea], al ; retf 0x6b48
0x000000010000c2af : cmp byte ptr [rbx + 0x634801ea], al ; retf 0x8348
0x00000001000170cb : cmp byte ptr [rbx - 0x367c13b3], cl ; add al, 0x89 ; retf 0xb0
0x000000010000f9c7 : cmp dh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x5de8
0x0000000100014d7e : cmp eax, 0x195c5 ; pop rbp ; ret
0x000000010000fd99 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x0000000100010033 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc1e8
0x000000010000db47 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000001000140cf : dec dword ptr [rax + 0x39] ; ror dword ptr [rdi], 0x8f ; ret
0x0000000100005ec5 : dec dword ptr [rax + 0x63] ; adc al, 0x88 ; add rdx, rax ; jmp rdx
0x00000001000089f6 : dec dword ptr [rax - 0x75] ; mov r8b, r13b ; retf 0x216
0x00000001000256ae : dec dword ptr [rax - 0x77] ; ret 0x21e8
0x000000010001ac0c : dec dword ptr [rax - 0x77] ; ret 0x5be8
0x000000010000f9ca : dec dword ptr [rax - 0x77] ; ret 0x5de8
0x000000010001a834 : dec dword ptr [rax - 0x77] ; ret 0xb3e8
0x000000010001b723 : dec dword ptr [rax - 0x77] ; ret 0xc4e8
0x0000000100011703 : dec dword ptr [rax - 0x77] ; ret 0xcce8
0x0000000100027b46 : dec dword ptr [rax - 0x77] ; ret 0xe1e8
0x000000010000eae1 : dec dword ptr [rax - 0x77] ; ret 0xeee8
0x0000000100024564 : dec dword ptr [rax - 0x77] ; test dword ptr [rax - 0x16000002], eax ; ret
0x00000001000085d7 : dec dword ptr [rsi] ; fcos ; jmp qword ptr [rcx]
0x00000001000024f6 : enter -0x72b8, 0x35 ; int 0x80
0x0000000100011a80 : enter -0x7cb8, -8 ; add byte ptr [rdi], cl ; retf 0x8d89
0x0000000100011f9b : enter 0, 0 ; add byte ptr [rdi], cl ; mov dh, 0x45 ; ret 0xc085
0x000000010002542f : enter 0x4100, 0xf ; xchg eax, ebp ; ret 0x8041
0x00000001000085d9 : fcos ; jmp qword ptr [rcx]
0x000000010002712c : fdiv st(7), st(0) ; call qword ptr [rax]
0x00000001000085d5 : fdivr st(7) ; dec dword ptr [rsi] ; fcos ; jmp qword ptr [rcx]
0x0000000100011a0d : fmul dword ptr [rax - 0x75] ; adc byte ptr [r15 + rcx - 0x4a], al ; ret
0x000000010001f44c : fmul qword ptr [rax - 0x77] ; iretd ; call rax
0x000000010001879f : fsub dword ptr [r14 - 0x77] ; ret 0x8b48
0x00000001000187a0 : fsub dword ptr [rsi - 0x77] ; ret 0x8b48
0x00000001000231ef : fsubr st(0) ; retf
0x0000000100022cf0 : fsubr st(0) ; retf 0x74
0x0000000100016539 : hlt ; add dword ptr [r8], eax ; mov al, 0 ; call 0x100012fa8
0x00000001000247f8 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000010001131b : hlt ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000100011051 : idiv bh ; call rsp
0x000000010000a569 : idiv bh ; jmp rcx
0x0000000100011049 : idiv edi ; call qword ptr [rax]
0x0000000100024749 : idiv edi ; call qword ptr [rbx]
0x000000010000a561 : idiv edi ; call qword ptr [rdx]
0x0000000100011045 : idiv edi ; ljmp [rdx] ; idiv edi ; call qword ptr [rax]
0x000000010001104d : idiv edi ; push rdx ; idiv bh ; call rsp
0x0000000100003dd4 : imul eax, dword ptr [rdx], 0xe800b000 ; ret 0xf1
0x0000000100016745 : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000010001d8d6 : in al, 0x89 ; retf 0xc148
0x000000010000aed0 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x00000001000183c3 : in eax, 0x31 ; ror byte ptr [rax - 0x77], 0x7d ; clc ; pop rbp ; ret
0x0000000100014e73 : in eax, 0x48 ; lea eax, [rip + 0x194e5] ; pop rbp ; ret
0x00000001000168c3 : in eax, 0x5d ; ret
0x0000000100025d03 : in eax, 0x89 ; jge 0x100025d08 ; pop rbp ; ret
0x0000000100014e77 : in eax, 0x94 ; add dword ptr [rax], eax ; pop rbp ; ret
0x0000000100011019 : in eax, 0xff ; call rsp
0x00000001000179d8 : inc dword ptr [rax - 0x49f0fe1e] ; retf 0x6348
0x000000010001a11a : inc dword ptr [rax - 0x49f0fe1f] ; ror dword ptr [rax + 0x63], 1 ; ret 0x8348
0x0000000100021119 : inc dword ptr [rbx - 0x6bf0f208] ; ret 0x9588
0x0000000100011bc5 : inc dword ptr [rdi + rcx - 0x4a] ; ret 0x7d80
0x0000000100011043 : inc dword ptr [rdi + rsi*8 - 1] ; ljmp [rdx] ; idiv edi ; call qword ptr [rax]
0x00000001000024fa : int 0x80
0x000000010001f44f : iretd ; call rax
0x000000010001f0f3 : jb 0x10001f0fb ; add byte ptr [rsi - 0x77], ah ; retf 0x6e9
0x00000001000070a4 : je 0x1000070b7 ; jmp 0x100003b95
0x0000000100006d37 : jge 0x100006d88 ; add al, byte ptr [rax] ; mov al, 0 ; call 0x100012fa8
0x000000010000c7aa : jge 0x10000c792 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000010000d72f : jge 0x10000d6f7 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000010000d7af : jge 0x10000d777 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000010000d84d : jge 0x10000d815 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000010000fd98 : jge 0x10000fd45 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x000000010000ffda : jge 0x10000ff85 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x0000000100011ee0 : jge 0x100011ea8 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b4c
0x0000000100017118 : jge 0x100017119 ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000010001834a : jge 0x10001834b ; mov rax, qword ptr [rdi + 8] ; pop rbp ; ret
0x000000010001838a : jge 0x10001838b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000001000183aa : jge 0x1000183ab ; movzx eax, word ptr [rdi + 0x28] ; pop rbp ; ret
0x00000001000183c8 : jge 0x1000183c5 ; pop rbp ; ret
0x00000001000183da : jge 0x1000183da ; mov eax, dword ptr [rdi + 4] ; pop rbp ; ret
0x00000001000183fa : jge 0x1000183fd ; mov eax, dword ptr [rdi + 0xf8] ; pop rbp ; ret
0x000000010002542e : jge 0x1000253fe ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x00000001000259f4 : jge 0x1000259ec ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000100025ccc : jge 0x100025cd0 ; mov byte ptr [rax], 1 ; pop rbp ; ret
0x0000000100025cec : jge 0x100025cf3 ; mov dword ptr [rax], 0 ; pop rbp ; ret
0x0000000100025d05 : jge 0x100025d06 ; pop rbp ; ret
0x0000000100025d1c : jge 0x100025d20 ; mov byte ptr [rax], 1 ; pop rbp ; ret
0x000000010000dbb6 : jle 0x10000dbc4 ; add al, byte ptr [rax] ; pop rbp ; ret
0x00000001000070aa : jmp 0x100003b8f
0x0000000100011ebd : jmp 0x100011f68
0x0000000100018029 : jmp 0x100018333
0x000000010002a45b : jmp 0x10002a226
0x000000010001a067 : jmp qword ptr [rax]
0x00000001000085db : jmp qword ptr [rcx]
0x000000010000e7b9 : jmp qword ptr [rdi]
0x000000010002a1a2 : jmp qword ptr [rip + 0x40c0]
0x000000010002a1ba : jmp qword ptr [rip + 0x40c8]
0x000000010001d113 : jmp qword ptr [rsi]
0x000000010001b77b : jmp qword ptr [rsp + rdi*8]
0x000000010001a08b : jmp rax
0x000000010001b78b : jmp rbx
0x000000010000a56b : jmp rcx
0x0000000100005ecd : jmp rdx
0x000000010001711c : jne 0x100017111 ; pop rbp ; ret
0x000000010001f448 : jne 0x10001f432 ; mov edx, dword ptr [rbp - 0x24] ; mov rdi, rcx ; call rax
0x000000010001f765 : jne 0x10001f74f ; mov edx, dword ptr [rbp - 0x24] ; mov rdi, rcx ; call rax
0x000000010002085b : jne 0x100020843 ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000100017a31 : jno 0x100017a5a ; add rsp, 0x10 ; pop rbp ; ret
0x0000000100003708 : jo 0x100003710 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000010000e4be : jo 0x10000e51f ; ret
0x0000000100012115 : jo 0x100012120 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000010001a03a : jo 0x10001a042 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000010001ea65 : jo 0x10001eac6 ; ret
0x000000010001f499 : jo 0x10001f4fa ; ret
0x000000010001f7b6 : jo 0x10001f817 ; ret
0x0000000100020546 : jo 0x1000205a7 ; ret
0x000000010002327a : jo 0x1000232db ; ret
0x0000000100014e75 : lea eax, [rip + 0x194e5] ; pop rbp ; ret
0x000000010002441c : lea ecx, [rax - 0x76000002] ; retf 0xc148
0x000000010000a27d : lea esi, [rax - 0x76000005] ; retf 0xc148
0x0000000100014e74 : lea rax, [rip + 0x194e5] ; pop rbp ; ret
0x00000001000170d0 : leave ; add al, 0x89 ; retf 0xb0
0x000000010002a44b : ljmp [rax - 0x66] ; add eax, dword ptr [rax] ; add cl, ch ; retf 0xfffd
0x0000000100011047 : ljmp [rdx] ; idiv edi ; call qword ptr [rax]
0x00000001000259f5 : lock add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x00000001000019cd : loopne 0x100001a1d ; add esp, 0x20 ; pop rbp ; ret
0x00000001000019cc : loopne 0x100001a1e ; add esp, 0x20 ; pop rbp ; ret
0x000000010000dbb2 : loopne 0x10000dc05 ; mov dword ptr [rip + 0x2077e], ecx ; pop rbp ; ret
0x000000010000e030 : loopne 0x10000dfbd ; rol byte ptr [rcx], 0x89 ; loopne 0x10000e029 ; ret
0x000000010000e02f : loopne 0x10000dfbe ; rol byte ptr [rcx], 0x89 ; loopne 0x10000e02a ; ret
0x000000010000e036 : loopne 0x10000e023 ; ret
0x000000010000e035 : loopne 0x10000e024 ; ret
0x00000001000133bd : loopne 0x10001334a ; retf 0x8948
0x00000001000133bc : loopne 0x10001334b ; retf 0x8948
0x0000000100013459 : loopne 0x1000133e6 ; retf 0x8948
0x0000000100013458 : loopne 0x1000133e7 ; retf 0x8948
0x0000000100013516 : loopne 0x1000134a3 ; retf 0x8948
0x0000000100013515 : loopne 0x1000134a4 ; retf 0x8948
0x00000001000137a6 : loopne 0x1000137ad ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000100017487 : loopne 0x10001740e ; ret 0x4801
0x0000000100017bef : loopne 0x100017c3f ; add esp, 0x20 ; pop rbp ; ret
0x0000000100017bee : loopne 0x100017c40 ; add esp, 0x20 ; pop rbp ; ret
0x000000010001f0f0 : loopne 0x10001f0e3 ; sub dh, byte ptr [rdx] ; add byte ptr [rsi - 0x77], ah ; retf 0x6e9
0x000000010001f449 : loopne 0x10001f3dd ; push rbp ; fmul qword ptr [rax - 0x77] ; iretd ; call rax
0x000000010001f766 : loopne 0x10001f6fa ; push rbp ; fmul qword ptr [rax - 0x77] ; iretd ; call rax
0x00000001000200db : loopne 0x1000200e4 ; movzx ecx, r8b ; call rax
0x000000010002017b : loopne 0x100020187 ; mov rsi, rcx ; movzx ecx, r8b ; call rax
0x00000001000202bb : loopne 0x1000202c4 ; movzx ecx, r8b ; call rax
0x000000010002035e : loopne 0x10002036a ; mov rsi, rcx ; movzx ecx, r8b ; call rax
0x00000001000207f0 : loopne 0x10002083f ; mov ecx, dword ptr [rbp - 0x28] ; call rax
0x000000010002085c : loopne 0x1000208ab ; mov edx, dword ptr [rbp - 0x28] ; call rax
0x0000000100025078 : loopne 0x100025064 ; ret 0xff2d
0x0000000100025e02 : loopne 0x100025dee ; retf 0x43
0x0000000100012a5f : mov ah, 0x83 ; ret 0x8901
0x00000001000192db : mov ah, 0x89 ; retf 0xc148
0x0000000100016894 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000100006d0d : mov al, 0 ; call 0x100012fa4
0x0000000100013239 : mov al, 0x48 ; movsxd rdx, dword ptr [rax + rcx*4] ; add rdx, rax ; jmp rdx
0x0000000100019291 : mov al, 0x89 ; retf 0xc148
0x00000001000220f7 : mov al, 0xe8 ; ret
0x000000010001313c : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000010001a42f : mov al, 1 ; retf 0x5589
0x0000000100015f12 : mov al, 2 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000010000a549 : mov al, 4 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000010000c421 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000001000089fa : mov al, ch ; retf 0x216
0x00000001000166fb : mov ax, di ; movzx eax, ax ; pop rbp ; ret
0x0000000100025e6d : mov bh, 0x45 ; retf 0x8b48
0x0000000100025ed9 : mov bh, 0x45 ; retf 0x8b4c
0x000000010001e8e8 : mov bh, 0x50 ; adc byte ptr [rbx + 0x634801c2], al ; ret 0x8348
0x000000010001b6c1 : mov bh, 0x51 ; adc byte ptr [rbx + 0x634801c2], al ; retf 0x8348
0x0000000100025e7b : mov bh, 0x75 ; retf 0x3de8
0x00000001000166ff : mov bh, 0xc0 ; pop rbp ; ret
0x000000010000d704 : mov byte ptr [r8 + 0x63], r9b ; adc al, 0x88 ; add rdx, rax ; jmp rdx
0x000000010000de78 : mov byte ptr [r9 - 0x76b37bab], r9b ; retf 0x4d89
0x000000010000d705 : mov byte ptr [rax + 0x63], cl ; adc al, 0x88 ; add rdx, rax ; jmp rdx
0x0000000100005ec9 : mov byte ptr [rax + 1], cl ; ret 0xe2ff
0x0000000100025cce : mov byte ptr [rax], 1 ; pop rbp ; ret
0x000000010000af33 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000010000d72d : mov byte ptr [rbx + 0x4100c07d], 0xf ; xchg eax, ebp ; ret 0x8041
0x000000010000de79 : mov byte ptr [rcx - 0x76b37bab], cl ; retf 0x4d89
0x0000000100011a14 : mov dh, 0x45 ; ret
0x0000000100011edc : mov dh, 0x45 ; ret 0x7d80
0x00000001000120aa : mov dh, 0x45 ; ret 0x8b48
0x0000000100011ded : mov dh, 0x45 ; ret 0xc085
0x0000000100012047 : mov dh, 0x45 ; ret 0xf45
0x0000000100011886 : mov dh, 0x45 ; ret 0xf883
0x0000000100011bc8 : mov dh, 0x4d ; ret 0x7d80
0x0000000100011a19 : mov dh, 0x4d ; ret 0xb60f
0x0000000100011e4c : mov dh, 0x4d ; ret 0xf44
0x00000001000114e3 : mov dh, 0x4d ; ret 0xf983
0x0000000100011d61 : mov dh, 0x55 ; ret 0x8b44
0x0000000100011d0b : mov dh, 0x75 ; ret 0xfe83
0x000000010000c427 : mov dh, 0xc0 ; pop rbp ; ret
0x00000001000200df : mov dh, 0xc8 ; call rax
0x000000010000b878 : mov dword ptr [rax], 0 ; pop rbp ; ret
0x000000010001711b : mov dword ptr [rbp - 0x10], esi ; pop rbp ; ret
0x000000010000aece : mov dword ptr [rbp - 0x14], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000100016743 : mov dword ptr [rbp - 0x1c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000001000019cb : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000100003367 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000100015f44 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000100025ccb : mov dword ptr [rbp - 4], edi ; mov byte ptr [rax], 1 ; pop rbp ; ret
0x0000000100025d04 : mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x000000010001844b : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000100017117 : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000001000183c7 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000100017a30 : mov dword ptr [rcx + 0x20], esi ; add rsp, 0x10 ; pop rbp ; ret
0x000000010000b57f : mov dword ptr [rcx + 0x48], eax ; pop rbp ; ret
0x000000010000af31 : mov dword ptr [rcx + 0x88], eax ; pop rbp ; ret
0x000000010000bc84 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000001000087b4 : mov dword ptr [rcx], eax ; pop rbp ; ret
0x0000000100014d7d : mov dword ptr [rip + 0x195c5], edi ; pop rbp ; ret
0x000000010000dbb4 : mov dword ptr [rip + 0x2077e], ecx ; pop rbp ; ret
0x0000000100008b33 : mov eax, 0x5b000000 ; pop rbp ; ret
0x00000001000042f6 : mov eax, 0x8308be0f ; stc ; or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x00000001000133b7 : mov eax, 0x8b48c189 ; loopne 0x100013350 ; retf 0x8948
0x0000000100013453 : mov eax, 0x8b48c189 ; loopne 0x1000133ec ; retf 0x8948
0x0000000100013510 : mov eax, 0x8b48c189 ; loopne 0x1000134a9 ; retf 0x8948
0x00000001000065f4 : mov eax, 0xe9fffffd ; retf 0x1f
0x0000000100014dfa : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000100026132 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000100016bf2 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000100014db2 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000001000206c8 : mov eax, dword ptr [rbp - 0x24] ; call rax
0x00000001000209cf : mov eax, dword ptr [rbp - 0x30] ; mov r9d, dword ptr [rbp - 0x34] ; call rax
0x0000000100020a47 : mov eax, dword ptr [rbp - 0x34] ; call rax
0x00000001000247f6 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000100027511 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000010000b103 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000100008c7f : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000100008ec2 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000100008969 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000100002dd5 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000010001f493 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000010000cf62 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000010001da32 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000100008759 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000010001ea5f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000010001844f : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000010001838d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000001000183fc : mov eax, dword ptr [rdi + 0xf8] ; pop rbp ; ret
0x00000001000183dc : mov eax, dword ptr [rdi + 4] ; pop rbp ; ret
0x000000010001834d : mov eax, dword ptr [rdi + 8] ; pop rbp ; ret
0x00000001000166fc : mov eax, edi ; movzx eax, ax ; pop rbp ; ret
0x000000010001131c : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000100025d02 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x00000001000168c2 : mov ebp, esp ; pop rbp ; ret
0x00000001000183c2 : mov ebp, esp ; xor eax, eax ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000001000168b2 : mov ebp, esp ; xor eax, eax ; pop rbp ; ret
0x00000001000087b0 : mov ecx, dword ptr [rbp - 0x18] ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x0000000100020670 : mov ecx, dword ptr [rbp - 0x20] ; call rax
0x00000001000207f2 : mov ecx, dword ptr [rbp - 0x28] ; call rax
0x0000000100020a43 : mov ecx, dword ptr [rbp - 0x30] ; mov r8d, dword ptr [rbp - 0x34] ; call rax
0x00000001000209d3 : mov ecx, dword ptr [rbp - 0x34] ; call rax
0x00000001000206c4 : mov ecx, dword ptr [rbp - 0x38] ; mov r8d, dword ptr [rbp - 0x24] ; call rax
0x000000010000dc81 : mov ecx, dword ptr [rbp - 0x40] ; movsxd rdx, dword ptr [rax + rcx*4] ; add rdx, rax ; jmp rdx
0x0000000100013237 : mov ecx, dword ptr [rbp - 0x50] ; movsxd rdx, dword ptr [rax + rcx*4] ; add rdx, rax ; jmp rdx
0x000000010001bb0a : mov ecx, dword ptr [rbp - 0x70] ; movsxd rdx, dword ptr [rax + rcx*4] ; add rdx, rax ; jmp rdx
0x000000010000d703 : mov ecx, dword ptr [rbp - 0x78] ; movsxd rdx, dword ptr [rax + rcx*4] ; add rdx, rax ; jmp rdx
0x000000010001b307 : mov ecx, dword ptr [rbp - 0x80] ; movsxd rdx, dword ptr [rax + rcx*4] ; add rdx, rax ; jmp rdx
0x000000010000b57b : mov ecx, dword ptr [rbp - 8] ; mov qword ptr [rcx + 0x48], rax ; pop rbp ; ret
0x0000000100014155 : mov edi, 0x8304c854 ; retf 0x6604
0x00000001000183d9 : mov edi, dword ptr [rbp - 8] ; mov eax, dword ptr [rdi + 4] ; pop rbp ; ret
0x0000000100018389 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000100018349 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 8] ; pop rbp ; ret
0x00000001000183a9 : mov edi, dword ptr [rbp - 8] ; movzx eax, word ptr [rdi + 0x28] ; pop rbp ; ret
0x000000010001f44e : mov edi, ecx ; call rax
0x000000010001dd03 : mov edx, 0x2ea ; call 0x100029fff
0x000000010002066c : mov edx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rbp - 0x20] ; call rax
0x00000001000207ee : mov edx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rbp - 0x28] ; call rax
0x000000010001f44a : mov edx, dword ptr [rbp - 0x24] ; mov rdi, rcx ; call rax
0x000000010002085e : mov edx, dword ptr [rbp - 0x28] ; call rax
0x000000010001fdda : mov edx, dword ptr [rcx + 0x10] ; call rax
0x000000010001fe6e : mov edx, dword ptr [rdx + 0x10] ; mov rsi, rcx ; call rax
0x0000000100011ed9 : mov esi, 0x45b60f44 ; ret 0x7d80
0x00000001000120a7 : mov esi, 0x45b60f44 ; ret 0x8b48
0x000000010001f447 : mov esi, dword ptr [rbp - 0x20] ; mov edx, dword ptr [rbp - 0x24] ; mov rdi, rcx ; call rax
0x000000010002085a : mov esi, dword ptr [rbp - 0x20] ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x000000010001fe72 : mov esi, ecx ; call rax
0x000000010002017e : mov esi, ecx ; movzx ecx, r8b ; call rax
0x000000010000b700 : mov esp, 0x48000096 ; add esp, 0x20 ; pop rbp ; ret
0x000000010000b877 : mov qword ptr [rax], 0 ; pop rbp ; ret
0x000000010001711a : mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000001000019ca : mov qword ptr [rbp - 0x20], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000010001844a : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000100017116 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000001000183c6 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000010000b57e : mov qword ptr [rcx + 0x48], rax ; pop rbp ; ret
0x000000010000af30 : mov qword ptr [rcx + 0x88], rax ; pop rbp ; ret
0x000000010000bc83 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000001000087b3 : mov qword ptr [rcx], rax ; pop rbp ; ret
0x0000000100014d7c : mov qword ptr [rip + 0x195c5], rdi ; pop rbp ; ret
0x000000010000dbb3 : mov qword ptr [rip + 0x2077e], rcx ; pop rbp ; ret
0x00000001000192da : mov r12b, 0x89 ; retf 0xc148
0x00000001000209ce : mov r8, qword ptr [rbp - 0x30] ; mov r9d, dword ptr [rbp - 0x34] ; call rax
0x0000000100013238 : mov r8b, 0x48 ; movsxd rdx, dword ptr [rax + rcx*4] ; add rdx, rax ; jmp rdx
0x0000000100019290 : mov r8b, 0x89 ; retf 0xc148
0x00000001000089f9 : mov r8b, r13b ; retf 0x216
0x00000001000133b6 : mov r8d, 0x8b48c189 ; loopne 0x100013351 ; retf 0x8948
0x0000000100013452 : mov r8d, 0x8b48c189 ; loopne 0x1000133ed ; retf 0x8948
0x000000010001350f : mov r8d, 0x8b48c189 ; loopne 0x1000134aa ; retf 0x8948
0x00000001000206c7 : mov r8d, dword ptr [rbp - 0x24] ; call rax
0x0000000100020a46 : mov r8d, dword ptr [rbp - 0x34] ; call rax
0x00000001000209d2 : mov r9d, dword ptr [rbp - 0x34] ; call rax
0x0000000100014df9 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000100026131 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000100014db1 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000010001da31 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000100008758 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000010001ea5e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000010001844e : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000010001838c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000010001834c : mov rax, qword ptr [rdi + 8] ; pop rbp ; ret
0x0000000100025d01 : mov rbp, rsp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x00000001000168c1 : mov rbp, rsp ; pop rbp ; ret
0x00000001000168b1 : mov rbp, rsp ; xor eax, eax ; pop rbp ; ret
0x00000001000087af : mov rcx, qword ptr [rbp - 0x18] ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x000000010002066f : mov rcx, qword ptr [rbp - 0x20] ; call rax
0x00000001000207f1 : mov rcx, qword ptr [rbp - 0x28] ; call rax
0x0000000100020a42 : mov rcx, qword ptr [rbp - 0x30] ; mov r8d, dword ptr [rbp - 0x34] ; call rax
0x00000001000206c3 : mov rcx, qword ptr [rbp - 0x38] ; mov r8d, dword ptr [rbp - 0x24] ; call rax
0x000000010000b57a : mov rcx, qword ptr [rbp - 8] ; mov qword ptr [rcx + 0x48], rax ; pop rbp ; ret
0x00000001000183d8 : mov rdi, qword ptr [rbp - 8] ; mov eax, dword ptr [rdi + 4] ; pop rbp ; ret
0x0000000100018388 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000100018348 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 8] ; pop rbp ; ret
0x00000001000183a8 : mov rdi, qword ptr [rbp - 8] ; movzx eax, word ptr [rdi + 0x28] ; pop rbp ; ret
0x000000010001f44d : mov rdi, rcx ; call rax
0x000000010002066b : mov rdx, qword ptr [rbp - 0x18] ; mov rcx, qword ptr [rbp - 0x20] ; call rax
0x00000001000207ed : mov rdx, qword ptr [rbp - 0x20] ; mov rcx, qword ptr [rbp - 0x28] ; call rax
0x000000010002085d : mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000100020859 : mov rsi, qword ptr [rbp - 0x20] ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x000000010001fe71 : mov rsi, rcx ; call rax
0x000000010002017d : mov rsi, rcx ; movzx ecx, r8b ; call rax
0x0000000100014153 : mov word ptr [rdi], cs ; mov edi, 0x8304c854 ; retf 0x6604
0x000000010000e7b3 : mov word ptr [rdx], es ; add byte ptr [rax], al ; add cl, ch ; jmp qword ptr [rdi]
0x000000010000ffdb : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x0000000100005ec7 : movsxd rdx, dword ptr [rax + rcx*4] ; add rdx, rax ; jmp rdx
0x000000010000c426 : movzx eax, al ; pop rbp ; ret
0x00000001000166fe : movzx eax, ax ; pop rbp ; ret
0x00000001000263a9 : movzx eax, word ptr [rbp - 0xa] ; add rsp, 0x10 ; pop rbp ; ret
0x00000001000183ac : movzx eax, word ptr [rdi + 0x28] ; pop rbp ; ret
0x00000001000200de : movzx ecx, al ; call rax
0x00000001000200dd : movzx ecx, r8b ; call rax
0x000000010000ce3f : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000100003dd3 : nop ; imul eax, dword ptr [rdx], 0xe800b000 ; ret 0xf1
0x000000010001bb0c : nop ; movsxd rdx, dword ptr [rax + rcx*4] ; add rdx, rax ; jmp rdx
0x00000001000168ae : nop ; nop ; push rbp ; mov rbp, rsp ; xor eax, eax ; pop rbp ; ret
0x00000001000168af : nop ; push rbp ; mov rbp, rsp ; xor eax, eax ; pop rbp ; ret
0x00000001000085d3 : nop ; sti ; fdivr st(7) ; dec dword ptr [rsi] ; fcos ; jmp qword ptr [rcx]
0x0000000100013e92 : or byte ptr [r11 - 0x7699f7bf], cl ; ret 0x8b48
0x0000000100013e95 : or byte ptr [r14 - 0x77], spl ; ret 0x8b48
0x000000010001b308 : or byte ptr [r8 + 0x63], 0x14 ; mov byte ptr [rax + 1], cl ; ret 0xe2ff
0x000000010001e91b : or byte ptr [r8 - 0x7d], r9b ; clc ; add byte ptr [rdi], cl ; retf 0x4d89
0x000000010001b309 : or byte ptr [rax + 0x63], 0x14 ; mov byte ptr [rax + 1], cl ; ret 0xe2ff
0x000000010001e91c : or byte ptr [rax - 0x7d], cl ; clc ; add byte ptr [rdi], cl ; retf 0x4d89
0x0000000100011882 : or byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x45 ; ret 0xf883
0x0000000100008e13 : or byte ptr [rbx - 0x6af0ff07], al ; ret 0x5588
0x0000000100008869 : or byte ptr [rbx - 0x6bf0f607], al ; ret 0x5588
0x00000001000042f9 : or byte ptr [rbx - 0x6bf0f607], al ; ret 0x9588
0x0000000100013e93 : or byte ptr [rbx - 0x7699f7bf], cl ; ret 0x8b48
0x0000000100013e96 : or byte ptr [rsi - 0x77], ah ; ret 0x8b48
0x000000010000886c : or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x00000001000042fc : or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x000000010000dbb5 : or eax, 0x2077e ; pop rbp ; ret
0x000000010000c522 : or eax, 0x8a000000 ; retf
0x000000010000c508 : or eax, 0x8a000000 ; retf 0x124
0x00000001000166f9 : or edi, ecx ; mov ax, di ; movzx eax, ax ; pop rbp ; ret
0x000000010001726e : out dx, al ; add dword ptr cs:[rax], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000100011018 : out dx, al ; in eax, 0xff ; call rsp
0x00000001000200d8 : out dx, eax ; and r8b, 1 ; movzx ecx, r8b ; call rax
0x00000001000259a4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000001000259a6 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000100017033 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000010000ca16 : pop r14 ; pop rbp ; ret
0x0000000100017035 : pop r15 ; pop rbp ; ret
0x00000001000259a7 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000001000019d2 : pop rbp ; ret
0x00000001000259e0 : pop rbp ; retf
0x0000000100017032 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000010000ca15 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000100008b37 : pop rbx ; pop rbp ; ret
0x0000000100011293 : pop rcx ; add dword ptr ss:[rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000100017036 : pop rdi ; pop rbp ; ret
0x0000000100017034 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000010000ca17 : pop rsi ; pop rbp ; ret
0x0000000100006d3e : pop rsi ; ret 0
0x00000001000259a5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000100006540 : pop rsp ; retf 0
0x0000000100016540 : pop rsp ; retf 0xffff
0x0000000100017f04 : push 0x48fffffa ; add esp, 0x10 ; pop rbp ; ret
0x000000010001e8e9 : push rax ; adc byte ptr [rbx + 0x634801c2], al ; ret 0x8348
0x000000010000c0a9 : push rax ; cmp al, 0x83 ; ret 0x8901
0x000000010000896f : push rax ; pop rbp ; ret
0x00000001000215f2 : push rax ; ret
0x00000001000161bc : push rax ; sub al, 0x83 ; ret 0x8901
0x0000000100018de7 : push rax ; xor al, 1 ; retf 0x5089
0x000000010001e6f3 : push rbp ; adc byte ptr [rcx - 0x7d], al ; ret 0x4401
0x000000010000e8b6 : push rbp ; call 0x148c36c08
0x000000010001f44b : push rbp ; fmul qword ptr [rax - 0x77] ; iretd ; call rax
0x0000000100017486 : push rbp ; loopne 0x10001740f ; ret 0x4801
0x00000001000207ef : push rbp ; loopne 0x100020840 ; mov ecx, dword ptr [rbp - 0x28] ; call rax
0x0000000100012a5e : push rbp ; mov ah, 0x83 ; ret 0x8901
0x000000010001a42e : push rbp ; mov al, 1 ; retf 0x5589
0x0000000100025d00 : push rbp ; mov rbp, rsp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x00000001000168c0 : push rbp ; mov rbp, rsp ; pop rbp ; ret
0x00000001000168b0 : push rbp ; mov rbp, rsp ; xor eax, eax ; pop rbp ; ret
0x0000000100011d62 : push rbp ; ret 0x8b44
0x0000000100017198 : push rbp ; retf
0x00000001000259e8 : push rbp ; retf 0xc748
0x0000000100025ae0 : push rbp ; retf 0xe280
0x0000000100011e49 : push rbp ; ror byte ptr [rdi], 1 ; mov dh, 0x4d ; ret 0xf44
0x0000000100011d5e : push rbp ; ror byte ptr [rdi], 1 ; mov dh, 0x55 ; ret 0x8b44
0x0000000100018a89 : push rbx ; ret
0x000000010001b6c2 : push rcx ; adc byte ptr [rbx + 0x634801c2], al ; retf 0x8348
0x000000010000c23c : push rcx ; cmp byte ptr [rbx + 0x634801c2], al ; retf 0xc148
0x0000000100007824 : push rcx ; cmp byte ptr [rbx + 0x634801ea], al ; retf 0x6b48
0x000000010000c2ae : push rcx ; cmp byte ptr [rbx + 0x634801ea], al ; retf 0x8348
0x0000000100014dd2 : push rdx ; add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000010001104f : push rdx ; idiv bh ; call rsp
0x00000001000173ce : pushfq ; ret 0x5588
0x0000000100002c7e : rcr byte ptr [rax + 0x4c000000], 1 ; ret 0x8948
0x00000001000019d3 : ret
0x0000000100006d11 : ret 0
0x000000010000ac6c : ret 0x108
0x0000000100006a29 : ret 0x11e8
0x0000000100016d38 : ret 0x132
0x00000001000169a9 : ret 0x140
0x0000000100005a9c : ret 0x1ee8
0x0000000100008bfa : ret 0x215
0x00000001000256b1 : ret 0x21e8
0x0000000100008256 : ret 0x237
0x0000000100004767 : ret 0x23e8
0x0000000100005ac3 : ret 0x253
0x0000000100006892 : ret 0x28e8
0x000000010002780c : ret 0x29
0x0000000100005210 : ret 0x2ae8
0x000000010000720a : ret 0x30e8
0x0000000100004903 : ret 0x37e8
0x0000000100006680 : ret 0x3ae8
0x00000001000067fb : ret 0x3fe8
0x000000010002a1aa : ret 0x40
0x0000000100011101 : ret 0x4030
0x000000010001679f : ret 0x43e8
0x000000010000a1d4 : ret 0x4401
0x000000010000b9cd : ret 0x4588
0x000000010000b9ca : ret 0x458a
0x000000010000c23f : ret 0x4801
0x0000000100004d23 : ret 0x4809
0x0000000100021cce : ret 0x4810
0x0000000100003b6c : ret 0x4820
0x00000001000040ac : ret 0x4834
0x0000000100004160 : ret 0x4835
0x00000001000046cf : ret 0x4838
0x000000010000e8ba : ret 0x4848
0x00000001000080f2 : ret 0x48e8
0x0000000100017d00 : ret 0x4c6
0x000000010000886f : ret 0x5588
0x000000010001ac0f : ret 0x5be8
0x000000010000f9cd : ret 0x5de8
0x0000000100006adb : ret 0x5fe8
0x0000000100013ca7 : ret 0x63e8
0x00000001000047d2 : ret 0x68e8
0x000000010000531d : ret 0x6de8
0x0000000100003d4c : ret 0x6ee8
0x0000000100005fc9 : ret 0x71e8
0x0000000100006940 : ret 0x7ae8
0x0000000100011bca : ret 0x7d80
0x000000010000c7b0 : ret 0x8041
0x0000000100014ae3 : ret 0x8348
0x0000000100004837 : ret 0x83e8
0x000000010000b9b5 : ret 0x840f
0x00000001000035fe : ret 0x8901
0x000000010001658a : ret 0x8941
0x0000000100002c85 : ret 0x8948
0x0000000100005b31 : ret 0x89e8
0x0000000100011d63 : ret 0x8b44
0x0000000100004192 : ret 0x8b48
0x00000001000091d8 : ret 0x8b4c
0x0000000100006b2f : ret 0x8be8
0x00000001000070fe : ret 0x8ce8
0x0000000100002e1a : ret 0x8d48
0x0000000100004ea6 : ret 0x94e8
0x00000001000042ff : ret 0x9588
0x0000000100021166 : ret 0x9589
0x00000001000055f5 : ret 0x95e8
0x00000001000080a1 : ret 0x99e8
0x0000000100004f1b : ret 0x9fe8
0x0000000100010053 : ret 0xa7e8
0x0000000100004e11 : ret 0xa9e8
0x000000010001551f : ret 0xb0
0x0000000100005a07 : ret 0xb3e8
0x00000001000114e1 : ret 0xb60f
0x00000001000073da : ret 0xbb
0x000000010000822f : ret 0xbe8
0x0000000100011def : ret 0xc085
0x0000000100010039 : ret 0xc1e8
0x000000010001b726 : ret 0xc4e8
0x00000001000211dc : ret 0xc6
0x0000000100001989 : ret 0xc748
0x0000000100011706 : ret 0xcce8
0x000000010000466b : ret 0xcfe8
0x000000010000f530 : ret 0xd101
0x0000000100006764 : ret 0xd6e8
0x000000010000725e : ret 0xdce8
0x00000001000082dd : ret 0xdde8
0x00000001000075a9 : ret 0xe1e8
0x0000000100005ecc : ret 0xe2ff
0x00000001000069d5 : ret 0xe5e8
0x000000010000702c : ret 0xee8
0x000000010000eae4 : ret 0xeee8
0x000000010000659b : ret 0xefe8
0x0000000100003dda : ret 0xf1
0x00000001000179d5 : ret 0xf280
0x0000000100007698 : ret 0xf2e8
0x0000000100011e4e : ret 0xf44
0x0000000100012049 : ret 0xf45
0x000000010001dcf8 : ret 0xf5
0x000000010001543b : ret 0xf5e8
0x0000000100011888 : ret 0xf883
0x00000001000114e5 : ret 0xf983
0x0000000100011d0d : ret 0xfe83
0x00000001000213da : ret 0xff1b
0x000000010002507a : ret 0xff2d
0x0000000100024758 : ret 0xfff6
0x000000010000b7c2 : ret 0xffff
0x000000010000b2b6 : ret 1
0x0000000100020cba : ret 2
0x000000010002a461 : ret 3
0x0000000100003304 : retf
0x00000001000064c1 : retf 0
0x000000010000c50e : retf 0x124
0x0000000100016fea : retf 0x130
0x0000000100014ffe : retf 0x151
0x000000010001242a : retf 0x17b
0x00000001000065f9 : retf 0x1f
0x00000001000089fc : retf 0x216
0x000000010000415a : retf 0x2a1
0x00000001000260ff : retf 0x3b9a
0x0000000100025e7d : retf 0x3de8
0x000000010002a1c2 : retf 0x40
0x0000000100025e04 : retf 0x43
0x000000010000c546 : retf 0x4588
0x0000000100015ff8 : retf 0x4589
0x00000001000153d5 : retf 0x45c7
0x000000010000c85e : retf 0x4d89
0x000000010000c8c5 : retf 0x4d8b
0x0000000100018183 : retf 0x5088
0x0000000100018dea : retf 0x5089
0x000000010001a431 : retf 0x5589
0x00000001000171a4 : retf 0x56e8
0x000000010000c7bc : retf 0x6348
0x000000010001415a : retf 0x6604
0x00000001000029ed : retf 0x6948
0x000000010000782b : retf 0x6b48
0x000000010001f0f9 : retf 0x6e9
0x0000000100022cf2 : retf 0x74
0x0000000100015fb2 : retf 0x76e8
0x000000010000868d : retf 0x7e8
0x0000000100005e9f : retf 0x8348
0x000000010001fb27 : retf 0x8944
0x000000010000f946 : retf 0x8948
0x0000000100013a41 : retf 0x89e8
0x000000010001719c : retf 0x8a44
0x000000010001f115 : retf 0x8b44
0x00000001000096f9 : retf 0x8b48
0x0000000100025edb : retf 0x8b4c
0x0000000100009175 : retf 0x8d48
0x0000000100011a87 : retf 0x8d89
0x000000010001f296 : retf 0xad
0x00000001000170d3 : retf 0xb0
0x0000000100009fc4 : retf 0xc148
0x00000001000120be : retf 0xc189
0x0000000100001950 : retf 0xc748
0x00000001000066d2 : retf 0xc8
0x0000000100011efa : retf 0xc931
0x00000001000130ff : retf 0xcbe8
0x00000001000053d2 : retf 0xdb
0x0000000100025ae1 : retf 0xe280
0x00000001000048d2 : retf 0xe6
0x0000000100018496 : retf 0xea83
0x00000001000041d2 : retf 0xed
0x0000000100022252 : retf 0xfa83
0x0000000100004ef2 : retf 0xfe
0x000000010002a452 : retf 0xfffd
0x00000001000070ac : retf 0xffff
0x0000000100003d9a : retf 2
0x0000000100020b52 : retf 3
0x00000001000029e4 : rol byte ptr [rax], 0 ; add byte ptr [rbx + 0x634801ea], al ; retf 0x6948
0x000000010000ca11 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000010000e032 : rol byte ptr [rcx], 0x89 ; loopne 0x10000e027 ; ret
0x0000000100011de7 : rol dh, 1 ; ret
0x0000000100011ee1 : rol dword ptr [rax], 0xf ; xchg eax, ebp ; ret 0x8b4c
0x000000010000dc82 : ror byte ptr [r8 + 0x63], 0x14 ; mov byte ptr [rax + 1], cl ; ret 0xe2ff
0x000000010000dc83 : ror byte ptr [rax + 0x63], 0x14 ; mov byte ptr [rax + 1], cl ; ret 0xe2ff
0x00000001000183c5 : ror byte ptr [rax - 0x77], 0x7d ; clc ; pop rbp ; ret
0x000000010000d2c5 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x0000000100025e79 : ror byte ptr [rdi], 1 ; mov bh, 0x75 ; retf 0x3de8
0x0000000100011e4a : ror byte ptr [rdi], 1 ; mov dh, 0x4d ; ret 0xf44
0x0000000100011d5f : ror byte ptr [rdi], 1 ; mov dh, 0x55 ; ret 0x8b44
0x000000010001a120 : ror dword ptr [rax + 0x63], 1 ; ret 0x8348
0x00000001000133b9 : ror dword ptr [rax - 0x75], 0x45 ; loopne 0x10001334e ; retf 0x8948
0x0000000100013455 : ror dword ptr [rax - 0x75], 0x45 ; loopne 0x1000133ea ; retf 0x8948
0x0000000100013512 : ror dword ptr [rax - 0x75], 0x45 ; loopne 0x1000134a7 ; retf 0x8948
0x00000001000140d2 : ror dword ptr [rdi], 0x8f ; ret
0x000000010000c536 : sal esi, 0x45 ; retf
0x0000000100001949 : sar byte ptr [rcx + 0x188], 0x89 ; retf 0xc748
0x00000001000091d1 : sar dword ptr [rax + 0x180], 0x89 ; ret 0x8b4c
0x000000010000fd96 : sbb al, 0x80 ; jge 0x10000fd47 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x000000010000fd95 : sbb al, 0x80 ; jge 0x10000fd48 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x0000000100025501 : sbb al, ch ; retf
0x00000001000179d2 : sbb byte ptr [rdi], cl ; xchg eax, esi ; ret 0xf280
0x0000000100025ad9 : shl byte ptr [r14 - 0x77], 0x41 ; and al, 0x8a ; push rbp ; retf 0xe280
0x0000000100025ada : shl byte ptr [rsi - 0x77], 0x41 ; and al, 0x8a ; push rbp ; retf 0xe280
0x000000010002780a : shr al, 1 ; ret 0x29
0x000000010001f294 : shr al, 1 ; retf 0xad
0x0000000100008e15 : stc ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000010000886b : stc ; or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x00000001000042fb : stc ; or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x00000001000085d4 : sti ; fdivr st(7) ; dec dword ptr [rsi] ; fcos ; jmp qword ptr [rcx]
0x000000010000a568 : sti ; idiv bh ; jmp rcx
0x00000001000161bd : sub al, 0x83 ; ret 0x8901
0x0000000100016bf1 : sub al, 0x8b ; in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x00000001000260f6 : sub al, byte ptr [rax] ; add byte ptr [rcx + 0xb8ec45], cl ; retf 0x3b9a
0x000000010000abb7 : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000010000455d : sub byte ptr [rbx + rcx*4 + 5], cl ; ret
0x00000001000172ee : sub byte ptr [rdi], ch ; add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000010001f0f2 : sub dh, byte ptr [rdx] ; add byte ptr [rsi - 0x77], ah ; retf 0x6e9
0x000000010001b52c : test al, 0x89 ; retf 0xc148
0x0000000100025e67 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x45 ; retf 0x8b48
0x0000000100004ffa : test dword ptr [rax - 0x16000002], eax ; ret
0x00000001000065f3 : test dword ptr [rax - 0x16000003], edi ; retf 0x1f
0x000000010001a9c9 : test dword ptr [rip - 0x17000000], eax ; retf 2
0x000000010000c521 : test dword ptr [rip - 0x76000000], ecx ; retf
0x000000010000c507 : test dword ptr [rip - 0x76000000], ecx ; retf 0x124
0x0000000100014d80 : xchg eax, ebp ; add dword ptr [rax], eax ; pop rbp ; ret
0x000000010000d72c : xchg eax, ebp ; mov byte ptr [rbx + 0x4100c07d], 0xf ; xchg eax, ebp ; ret 0x8041
0x0000000100008e18 : xchg eax, ebp ; ret 0x5588
0x000000010000c7af : xchg eax, ebp ; ret 0x8041
0x000000010000fd9c : xchg eax, ebp ; ret 0x8b48
0x0000000100011ee4 : xchg eax, ebp ; ret 0x8b4c
0x0000000100011d06 : xchg eax, esi ; adc al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x75 ; ret 0xfe83
0x000000010000b701 : xchg eax, esi ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000001000179d4 : xchg eax, esi ; ret 0xf280
0x0000000100014e78 : xchg eax, esp ; add dword ptr [rax], eax ; pop rbp ; ret
0x000000010000886e : xchg eax, esp ; ret 0x5588
0x00000001000042fe : xchg eax, esp ; ret 0x9588
0x000000010001bb0b : xchg rax, r8 ; movsxd rdx, dword ptr [rax + rcx*4] ; add rdx, rax ; jmp rdx
0x0000000100018de8 : xor al, 1 ; retf 0x5089
0x0000000100008bf6 : xor al, byte ptr [rdx] ; add al, ch ; ret 0x215
0x000000010001f14a : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000010000b139 : xor eax, eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000010000d2c4 : xor eax, eax ; add rsp, 0x40 ; pop rbp ; ret
0x00000001000183c4 : xor eax, eax ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000001000168b4 : xor eax, eax ; pop rbp ; ret

Unique gadgets found: 969
